# This is a basic workflow to help you get started with Actions

name: CI_DOCS

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_run:
    workflows: ["CI_LINUX"]
    branches: [master]
    types: 
      - completed

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build_docs:
    # The type of runner that the job will run on
    runs-on: windows-2019
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      # Support longpaths
      - name: Support long paths
        run: git config --system core.longpaths true
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with: 
          submodules: 'true'
          fetch-depth: '1'

      # Runs a set of commands using the runners shell
      - name: Build JCOReflectorCLI
        run: |
          dotnet build --no-incremental --framework netcoreapp3.1 JCOReflector\JCOReflectorCLI.sln
          dotnet build --no-incremental --framework net5.0 JCOReflector\JCOReflectorCLI.sln  
          dotnet build --no-incremental --framework net461 JCOReflector\JCOReflectorCLI.sln  

      # Runs a set of commands using the runners shell
      - name: Copy configuration file
        run: |
          Copy-Item .github\workflows\JCOReflectorCLI.runtimeconfig.json -Destination bin\netcoreapp3.1\JCOReflectorCLI.runtimeconfig.json -Force
          Copy-Item .github\workflows\JCOReflectorCLI5.0.runtimeconfig.json -Destination bin\net5.0\JCOReflectorCLI.runtimeconfig.json -Force

      - name: Build Java Help files
        run: |
          dotnet bin\netcoreapp3.1\JCOReflectorCLI.dll builddocs .github\workflows\builddocs_win19.job
          dotnet bin\net5.0\JCOReflectorCLI.dll builddocs .github\workflows\builddocs_win19.job
          .\bin\net461\JCOReflectorCLI builddocs .github\workflows\builddocs_win19.job

      - name: Extract commit SHA
        run: |
          echo "GITHUB_COMMIT_MESSAGE=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
        shell: bash

      - name: Commit changes to netcoreapp3.1 help file
        run: |
          cd .\netreflected\docs\netcoreapp3.1
          git config user.name 'CI_DOCS'
          git config user.email "info@masesgroup.com"
          git checkout master
          git add *.*
          git commit -m 'Update help file to commit ${{ env.GITHUB_COMMIT_MESSAGE }}'
          cd ..\..\..

      - name: Commit changes to net5.0 help file
        run: |
          cd .\netreflected\docs\net5.0
          git config user.name 'CI_DOCS'
          git config user.email "info@masesgroup.com"
          git checkout master
          git add *.*
          git commit -m 'Update help file to commit ${{ env.GITHUB_COMMIT_MESSAGE }}'
          cd ..\..\..

      - name: Commit changes to net461 help file
        run: |
          cd .\netreflected\docs\net461
          git config user.name 'CI_DOCS'
          git config user.email "info@masesgroup.com"
          git checkout master
          git add *.*
          git commit -m 'Update help file to commit ${{ env.GITHUB_COMMIT_MESSAGE }}'
          cd ..\..\..
          
      - name: Commit changes to superproject
        uses: EndBug/add-and-commit@v5
        with:
          push: false
          add: '.\netreflected\*.*'
          message: Update help submodule after commit ${{ env.GITHUB_COMMIT_MESSAGE }}
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

