# This is a basic workflow to help you get started with Actions

name: CI_LINUX

# Controls when the action will run. Triggers the workflow after CI_WINDOWS workflow is completed
# only for the master branch
on:
  workflow_run:
    workflows: ["CI_WINDOWS"]
    branches: [master]
    types: 
      - completed

# This workflow run is made of two jobs "check" and "build_linux"
jobs:
  check:
    name: Check changed files
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: check files
      id: check_files
      run: |
        echo "=============== list changed files ==============="
        git diff --name-only HEAD^ HEAD
        
        echo "::set-output name=run_job::false"
        echo "========== check paths of changed files =========="
        git diff --name-only HEAD^ HEAD > files.txt
        while IFS= read -r file
        do
          echo $file
          if [[ $file == "netreflected/src/"* ]]; then
            echo "This file is under the directory 'netreflected/src/JCOReflector'."
            echo "::set-output name=run_job::true"
            break
          fi
          if [[ $file == "JCOReflector/"* ]]; then
            echo "This file is under the directory 'JCOReflector/'."
            echo "::set-output name=run_job::true"
            break
          fi
          if [[ $file == "netreflected-tests/"* ]]; then
            echo "This file is under the directory 'netreflected-tests/'."
            echo "::set-output name=run_job::true"
            break
          fi
        echo "This files are not in a source directory no action required"
        done < files.txt
        
        
  # This workflow contains a single job called "build"
  build_linux:
      needs: check
      if: needs.check.outputs.run_job == 'true' 
      # The type of runner that the job will run on
      runs-on: ubuntu-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
          with: 
            fetch-depth: '1'
        # Runs a single command using the runners shell
        # Link the folder
        - name: Make link
          run: |
            sudo ln -sv  /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64/ /home/runner/work/JCOReflector/JCOReflector/jdk

        # Runs a set of commands using the runners shell
        - name: Build JCOReflectorCLI
          run: |
            dotnet build --no-incremental --framework netcoreapp3.1 JCOReflector/JCOReflectorCLI.sln		
            dotnet build --no-incremental --framework net5.0 JCOReflector/JCOReflectorCLI.sln		   

        - name: Build Java files
          run: |
            dotnet bin/netcoreapp3.1/JCOReflectorCLI.dll build .github/workflows/build_linux.job
            dotnet bin/net5.0/JCOReflectorCLI.dll build .github/workflows/build_linux.job

        - name: Build JAR files
          run: |
            dotnet bin/netcoreapp3.1/JCOReflectorCLI.dll createjars .github/workflows/createjars_core3.1_linux.job	
            dotnet bin/net5.0/JCOReflectorCLI.dll createjars .github/workflows/createjars_core5.0_linux.job																  

        - name: Build test source file
          run: |
            javac -cp ./bin/netcoreapp3.1/JCOReflector.jar ./netreflected-tests/java/src/hierarchy/*.java ./netreflected-tests/java/src/mscorlib/*.java ./netreflected-tests/java/src/nettest/*.java
            javac -cp ./bin/net5.0/JCOReflector.jar ./netreflected-tests/java/src/hierarchy/*.java ./netreflected-tests/java/src/mscorlib/*.java ./netreflected-tests/java/src/nettest/*.java

        - name: Execute tests	netcoreapp3.1				 
          run: |
            java -cp "./bin/netcoreapp3.1/JCOReflector.jar:./netreflected-tests/java/src/" hierarchy.HelloHierarchy --CoreCLRApp:Microsoft.NETCore.App
            java -cp "./bin/netcoreapp3.1/JCOReflector.jar:./netreflected-tests/java/src/" hierarchy.HelloInterfaces --CoreCLRApp:Microsoft.NETCore.App
            java -cp "./bin/netcoreapp3.1/JCOReflector.jar:./netreflected-tests/java/src/" mscorlib.HelloNET --CoreCLRApp:Microsoft.NETCore.App
            java -cp "./bin/netcoreapp3.1/JCOReflector.jar:./netreflected-tests/java/src/" mscorlib.HelloNETEvent --CoreCLRApp:Microsoft.NETCore.App
            java -cp "./bin/netcoreapp3.1/JCOReflector.jar:./netreflected-tests/java/src/" mscorlib.HelloIterator --CoreCLRApp:Microsoft.NETCore.App
            java -cp "./bin/netcoreapp3.1/JCOReflector.jar:./netreflected-tests/java/src/" nettest.HelloNETSocket -server 127.0.0.1 --CoreCLRApp:Microsoft.NETCore.App
            java -cp "./bin/netcoreapp3.1/JCOReflector.jar:./netreflected-tests/java/src/" nettest.HelloNETSocket -async -server 127.0.0.1 --CoreCLRApp:Microsoft.NETCore.App

        - name: Execute tests	net5.0			 
          run: |
            java -cp "./bin/net5.0/JCOReflector.jar:./netreflected-tests/java/src/" hierarchy.HelloHierarchy 
            java -cp "./bin/net5.0/JCOReflector.jar:./netreflected-tests/java/src/" hierarchy.HelloInterfaces 
            java -cp "./bin/net5.0/JCOReflector.jar:./netreflected-tests/java/src/" mscorlib.HelloNET 
            java -cp "./bin/net5.0/JCOReflector.jar:./netreflected-tests/java/src/" mscorlib.HelloNETEvent 
            java -cp "./bin/net5.0/JCOReflector.jar:./netreflected-tests/java/src/" mscorlib.HelloIterator 
            java -cp "./bin/net5.0/JCOReflector.jar:./netreflected-tests/java/src/" nettest.HelloNETSocket -server 127.0.0.1 
            java -cp "./bin/net5.0/JCOReflector.jar:./netreflected-tests/java/src/" nettest.HelloNETSocket -async -server 127.0.0.1 

