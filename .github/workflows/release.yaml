# This is a basic workflow to help you get started with Actions

name: CI_RELEASE

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  release:
    types: 
      - published
      - edited

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_release:
    # The type of runner that the job will run on
    runs-on: windows-2022
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      # Support longpaths
      - name: Support long paths
        run: git config --system core.longpaths true
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with: 
          submodules: 'true'

      # Runs a set of commands using the runners shell
      - name: Build JCOReflectorCLI
        run: |
          dotnet build --no-incremental --framework netcoreapp3.1 --configuration Release src\JCOReflectorCLI.sln
          dotnet build --no-incremental --framework net5.0 --configuration Release src\JCOReflectorCLI.sln
          dotnet build --no-incremental --framework net6.0 --configuration Release src\JCOReflectorCLI.sln
          dotnet build --no-incremental --framework net461 --configuration Release src\JCOReflectorCLI.sln  

      # Runs a set of commands using the runners shell
      - name: Copy configuration file
        run: |
          Copy-Item .github\workflows\JCOReflectorCLI.runtimeconfig.json -Destination bin\netcoreapp3.1\JCOReflectorCLI.runtimeconfig.json -Force
          Copy-Item .github\workflows\JCOReflectorCLI5.0.runtimeconfig.json -Destination bin\net5.0\JCOReflectorCLI.runtimeconfig.json -Force

      - name: Build net5.0 Maven POM files
        run: dotnet bin\net5.0\JCOReflectorCLI.dll -JobType CreatePOM -POMStagingType Release -JobFile .github\workflows\createpom_win19.job

      - name: Build net6.0 Maven POM files
        run: dotnet bin\net6.0\JCOReflectorCLI.dll -JobType CreatePOM -POMStagingType Release -JobFile .github\workflows\createpom_win19.job
          
      - name: Build net461 Maven POM files
        run: .\bin\net461\JCOReflectorCLI -JobType CreatePOM -POMStagingType Release -JobFile .github\workflows\createpom_win19.job

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v1
        with: # running setup-java again overwrites the settings.xml
          java-version: 11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Install local file to be used within Javadoc section of generated POM 
        shell: bash
        run: mvn install:install-file -Dfile=./bin/net5.0/JCOBridge.jar -DgroupId=JCOBridge -DartifactId=JCOBridge -Dversion=2.4.0 -Dpackaging=jar -DgeneratePom=true

      - name: Publish net5.0 to Apache Maven Central
        shell: bash
        run: mvn --file ./netreflected/src/net5.0.xml --no-transfer-progress --batch-mode -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }} deploy
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Publish net6.0 to Apache Maven Central
        shell: bash
        run: mvn --file ./netreflected/src/net6.0.xml --no-transfer-progress --batch-mode -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }} deploy
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Publish net461 to Apache Maven Central
        shell: bash
        run: mvn --file ./netreflected/src/net461.xml --no-transfer-progress --batch-mode -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }} deploy
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Build Java files
        run: |
          dotnet bin\netcoreapp3.1\JCOReflectorCLI.dll -JobType Build -JobFile .github\workflows\build_win19.job
          dotnet bin\net5.0\JCOReflectorCLI.dll -JobType Build -JobFile .github\workflows\build_win19.job
          dotnet bin\net6.0\JCOReflectorCLI.dll -JobType Build -JobFile .github\workflows\build_win19.job
          .\bin\net461\JCOReflectorCLI -JobType Build -JobFile .github\workflows\build_win19.job
          
      - name: Build JAR files
        run: |
          dotnet .\bin\netcoreapp3.1\JCOReflectorCLI.dll -JobType CreateJars -JobFile .github\workflows\createjars_core3.1_win19.job
          dotnet .\bin\net5.0\JCOReflectorCLI.dll -JobType CreateJars -JobFile .github\workflows\createjars_core5.0_win19.job
          dotnet .\bin\net6.0\JCOReflectorCLI.dll -JobType CreateJars -JobFile .github\workflows\createjars_core6.0_win19.job
          .\bin\net461\JCOReflectorCLI -JobType CreateJars -JobFile .github\workflows\createjars_framework_win19.job

      - name: Compress release files
        run: | 
          Compress-Archive -Path .\bin\netcoreapp3.1\* -DestinationPath .\bin\netcoreapp3.1.zip
          Compress-Archive -Path .\bin\net5.0\* -DestinationPath .\bin\net5.0.zip
          Compress-Archive -Path .\bin\net6.0\* -DestinationPath .\bin\net6.0.zip
          Compress-Archive -Path .\bin\net461\* -DestinationPath .\bin\net461.zip
          
      - name: Compress documentation files
        run: | 
          Compress-Archive -Path .\netreflected\docs\netcoreapp3.1\* -DestinationPath .\netcoreapp3.1.docs.zip
          Compress-Archive -Path .\netreflected\docs\net5.0\* -DestinationPath .\net5.0.docs.zip
          Compress-Archive -Path .\netreflected\docs\net6.0\* -DestinationPath .\net6.0.docs.zip
          Compress-Archive -Path .\netreflected\docs\net461\* -DestinationPath .\net461.docs.zip

      - name: Build NuGet Packages
        run: dotnet build --no-incremental --configuration Release /p:Platform="Any CPU" src\JCOReflectorCLI.sln

      - name: Upload netcoreapp3.1 binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .\bin\netcoreapp3.1.zip
          asset_name: netcoreapp3.1.zip
          tag: ${{ github.ref }}
          overwrite: true
          
      - name: Upload net5.0 binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .\bin\net5.0.zip
          asset_name: net5.0.zip
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload net6.0 binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .\bin\net6.0.zip
          asset_name: net6.0.zip
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload net461 binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .\bin\net461.zip
          asset_name: net461.zip
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload netcoreapp3.1 binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .\netcoreapp3.1.docs.zip
          asset_name: netcoreapp3.1.docs.zip
          tag: ${{ github.ref }}
          overwrite: true
          
      - name: Upload net5.0 binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .\net5.0.docs.zip
          asset_name: net5.0.docs.zip
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload net6.0 binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .\net6.0.docs.zip
          asset_name: net6.0.docs.zip
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload net461 binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: .\net461.docs.zip
          asset_name: net461.docs.zip
          tag: ${{ github.ref }}
          overwrite: true
          
      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.x'
          
      - name: Publish to NuGet
        run: |
          nuget push .\bin\*.nupkg -ApiKey ${{ secrets.MASES_NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json -SkipDuplicate
          nuget push .\bin\*.snupkg -ApiKey ${{ secrets.MASES_NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json -SkipDuplicate
