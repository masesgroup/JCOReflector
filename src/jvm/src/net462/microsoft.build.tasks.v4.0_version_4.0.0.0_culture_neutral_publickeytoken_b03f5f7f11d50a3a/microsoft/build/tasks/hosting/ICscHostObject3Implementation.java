/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package microsoft.build.tasks.hosting;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import microsoft.build.tasks.hosting.ICscHostObject2;
import microsoft.build.tasks.hosting.ICscHostObject2Implementation;
import microsoft.build.tasks.hosting.ICscHostObject;
import microsoft.build.tasks.hosting.ICscHostObjectImplementation;
import microsoft.build.framework.ITaskHost;
import microsoft.build.framework.ITaskHostImplementation;
import microsoft.build.framework.ITaskItem;
import microsoft.build.framework.ITaskItemImplementation;


/**
 * The base .NET class managing Microsoft.Build.Tasks.Hosting.ICscHostObject3, Microsoft.Build.Tasks.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/Microsoft.Build.Tasks.Hosting.ICscHostObject3" target="_top">https://docs.microsoft.com/en-us/dotnet/api/Microsoft.Build.Tasks.Hosting.ICscHostObject3</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class ICscHostObject3Implementation extends NetObject implements ICscHostObject3 {
    /**
     * Fully assembly qualified name: Microsoft.Build.Tasks.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
     */
    public static final String assemblyFullName = "Microsoft.Build.Tasks.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
    /**
     * Assembly name: Microsoft.Build.Tasks.v4.0
     */
    public static final String assemblyShortName = "Microsoft.Build.Tasks.v4.0";
    /**
     * Qualified class name: Microsoft.Build.Tasks.Hosting.ICscHostObject3
     */
    public static final String className = "Microsoft.Build.Tasks.Hosting.ICscHostObject3";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public ICscHostObject3Implementation(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link ICscHostObject3}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link ICscHostObject3} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static ICscHostObject3 ToICscHostObject3(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new ICscHostObject3Implementation(from.getJCOInstance());
    }

    // Methods section
    
    public boolean Compile() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectCompile = null;
        try {
            retObjectCompile = classInstance.Invoke("Compile");
            return (boolean)retObjectCompile;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectCompile != null ? retObjectCompile.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean EndInitialization(JCORefOut errorMessage, JCORefOut<java.util.concurrent.atomic.AtomicInteger> errorCode) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectEndInitialization = null;
        try {
            retObjectEndInitialization = classInstance.Invoke("EndInitialization", errorMessage.getJCRefOut(), errorCode.getJCRefOut());
            return (boolean)retObjectEndInitialization;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectEndInitialization != null ? retObjectEndInitialization.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean IsDesignTime() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectIsDesignTime = null;
        try {
            retObjectIsDesignTime = classInstance.Invoke("IsDesignTime");
            return (boolean)retObjectIsDesignTime;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectIsDesignTime != null ? retObjectIsDesignTime.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean IsUpToDate() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectIsUpToDate = null;
        try {
            retObjectIsUpToDate = classInstance.Invoke("IsUpToDate");
            return (boolean)retObjectIsUpToDate;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectIsUpToDate != null ? retObjectIsUpToDate.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetAdditionalLibPaths(java.lang.String[] additionalLibPaths) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetAdditionalLibPaths = null;
        try {
            retObjectSetAdditionalLibPaths = classInstance.Invoke("SetAdditionalLibPaths", (java.lang.Object)additionalLibPaths);
            return (boolean)retObjectSetAdditionalLibPaths;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetAdditionalLibPaths != null ? retObjectSetAdditionalLibPaths.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetAdditionalLibPaths(JCORefOut dupParam0) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetAdditionalLibPaths = null;
        try {
            retObjectSetAdditionalLibPaths = classInstance.Invoke("SetAdditionalLibPaths", (java.lang.Object)dupParam0.getJCRefOut());
            return (boolean)retObjectSetAdditionalLibPaths;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetAdditionalLibPaths != null ? retObjectSetAdditionalLibPaths.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetAddModules(java.lang.String[] addModules) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetAddModules = null;
        try {
            retObjectSetAddModules = classInstance.Invoke("SetAddModules", (java.lang.Object)addModules);
            return (boolean)retObjectSetAddModules;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetAddModules != null ? retObjectSetAddModules.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetAddModules(JCORefOut dupParam0) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetAddModules = null;
        try {
            retObjectSetAddModules = classInstance.Invoke("SetAddModules", (java.lang.Object)dupParam0.getJCRefOut());
            return (boolean)retObjectSetAddModules;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetAddModules != null ? retObjectSetAddModules.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetAllowUnsafeBlocks(boolean allowUnsafeBlocks) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetAllowUnsafeBlocks = null;
        try {
            retObjectSetAllowUnsafeBlocks = classInstance.Invoke("SetAllowUnsafeBlocks", allowUnsafeBlocks);
            return (boolean)retObjectSetAllowUnsafeBlocks;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetAllowUnsafeBlocks != null ? retObjectSetAllowUnsafeBlocks.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetApplicationConfiguration(java.lang.String applicationConfiguration) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetApplicationConfiguration = null;
        try {
            retObjectSetApplicationConfiguration = classInstance.Invoke("SetApplicationConfiguration", applicationConfiguration);
            return (boolean)retObjectSetApplicationConfiguration;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetApplicationConfiguration != null ? retObjectSetApplicationConfiguration.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetBaseAddress(java.lang.String baseAddress) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetBaseAddress = null;
        try {
            retObjectSetBaseAddress = classInstance.Invoke("SetBaseAddress", baseAddress);
            return (boolean)retObjectSetBaseAddress;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetBaseAddress != null ? retObjectSetBaseAddress.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetCheckForOverflowUnderflow(boolean checkForOverflowUnderflow) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetCheckForOverflowUnderflow = null;
        try {
            retObjectSetCheckForOverflowUnderflow = classInstance.Invoke("SetCheckForOverflowUnderflow", checkForOverflowUnderflow);
            return (boolean)retObjectSetCheckForOverflowUnderflow;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetCheckForOverflowUnderflow != null ? retObjectSetCheckForOverflowUnderflow.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetCodePage(int codePage) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetCodePage = null;
        try {
            retObjectSetCodePage = classInstance.Invoke("SetCodePage", codePage);
            return (boolean)retObjectSetCodePage;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetCodePage != null ? retObjectSetCodePage.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetDebugType(java.lang.String debugType) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetDebugType = null;
        try {
            retObjectSetDebugType = classInstance.Invoke("SetDebugType", debugType);
            return (boolean)retObjectSetDebugType;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetDebugType != null ? retObjectSetDebugType.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetDefineConstants(java.lang.String defineConstants) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetDefineConstants = null;
        try {
            retObjectSetDefineConstants = classInstance.Invoke("SetDefineConstants", defineConstants);
            return (boolean)retObjectSetDefineConstants;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetDefineConstants != null ? retObjectSetDefineConstants.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetDelaySign(boolean delaySignExplicitlySet, boolean delaySign) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetDelaySign = null;
        try {
            retObjectSetDelaySign = classInstance.Invoke("SetDelaySign", delaySignExplicitlySet, delaySign);
            return (boolean)retObjectSetDelaySign;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetDelaySign != null ? retObjectSetDelaySign.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetDisabledWarnings(java.lang.String disabledWarnings) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetDisabledWarnings = null;
        try {
            retObjectSetDisabledWarnings = classInstance.Invoke("SetDisabledWarnings", disabledWarnings);
            return (boolean)retObjectSetDisabledWarnings;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetDisabledWarnings != null ? retObjectSetDisabledWarnings.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetDocumentationFile(java.lang.String documentationFile) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetDocumentationFile = null;
        try {
            retObjectSetDocumentationFile = classInstance.Invoke("SetDocumentationFile", documentationFile);
            return (boolean)retObjectSetDocumentationFile;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetDocumentationFile != null ? retObjectSetDocumentationFile.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetEmitDebugInformation(boolean emitDebugInformation) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetEmitDebugInformation = null;
        try {
            retObjectSetEmitDebugInformation = classInstance.Invoke("SetEmitDebugInformation", emitDebugInformation);
            return (boolean)retObjectSetEmitDebugInformation;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetEmitDebugInformation != null ? retObjectSetEmitDebugInformation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetErrorReport(java.lang.String errorReport) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetErrorReport = null;
        try {
            retObjectSetErrorReport = classInstance.Invoke("SetErrorReport", errorReport);
            return (boolean)retObjectSetErrorReport;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetErrorReport != null ? retObjectSetErrorReport.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetFileAlignment(int fileAlignment) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetFileAlignment = null;
        try {
            retObjectSetFileAlignment = classInstance.Invoke("SetFileAlignment", fileAlignment);
            return (boolean)retObjectSetFileAlignment;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetFileAlignment != null ? retObjectSetFileAlignment.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetGenerateFullPaths(boolean generateFullPaths) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetGenerateFullPaths = null;
        try {
            retObjectSetGenerateFullPaths = classInstance.Invoke("SetGenerateFullPaths", generateFullPaths);
            return (boolean)retObjectSetGenerateFullPaths;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetGenerateFullPaths != null ? retObjectSetGenerateFullPaths.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetKeyContainer(java.lang.String keyContainer) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetKeyContainer = null;
        try {
            retObjectSetKeyContainer = classInstance.Invoke("SetKeyContainer", keyContainer);
            return (boolean)retObjectSetKeyContainer;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetKeyContainer != null ? retObjectSetKeyContainer.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetKeyFile(java.lang.String keyFile) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetKeyFile = null;
        try {
            retObjectSetKeyFile = classInstance.Invoke("SetKeyFile", keyFile);
            return (boolean)retObjectSetKeyFile;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetKeyFile != null ? retObjectSetKeyFile.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetLangVersion(java.lang.String langVersion) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetLangVersion = null;
        try {
            retObjectSetLangVersion = classInstance.Invoke("SetLangVersion", langVersion);
            return (boolean)retObjectSetLangVersion;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetLangVersion != null ? retObjectSetLangVersion.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetLinkResources(ITaskItem[] linkResources) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetLinkResources = null;
        try {
            retObjectSetLinkResources = classInstance.Invoke("SetLinkResources", (java.lang.Object)toObjectFromArray(linkResources));
            return (boolean)retObjectSetLinkResources;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetLinkResources != null ? retObjectSetLinkResources.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetMainEntryPoint(java.lang.String targetType, java.lang.String mainEntryPoint) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetMainEntryPoint = null;
        try {
            retObjectSetMainEntryPoint = classInstance.Invoke("SetMainEntryPoint", targetType, mainEntryPoint);
            return (boolean)retObjectSetMainEntryPoint;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetMainEntryPoint != null ? retObjectSetMainEntryPoint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetModuleAssemblyName(java.lang.String moduleAssemblyName) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetModuleAssemblyName = null;
        try {
            retObjectSetModuleAssemblyName = classInstance.Invoke("SetModuleAssemblyName", moduleAssemblyName);
            return (boolean)retObjectSetModuleAssemblyName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetModuleAssemblyName != null ? retObjectSetModuleAssemblyName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetNoConfig(boolean noConfig) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetNoConfig = null;
        try {
            retObjectSetNoConfig = classInstance.Invoke("SetNoConfig", noConfig);
            return (boolean)retObjectSetNoConfig;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetNoConfig != null ? retObjectSetNoConfig.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetNoStandardLib(boolean noStandardLib) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetNoStandardLib = null;
        try {
            retObjectSetNoStandardLib = classInstance.Invoke("SetNoStandardLib", noStandardLib);
            return (boolean)retObjectSetNoStandardLib;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetNoStandardLib != null ? retObjectSetNoStandardLib.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetOptimize(boolean optimize) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetOptimize = null;
        try {
            retObjectSetOptimize = classInstance.Invoke("SetOptimize", optimize);
            return (boolean)retObjectSetOptimize;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetOptimize != null ? retObjectSetOptimize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetOutputAssembly(java.lang.String outputAssembly) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetOutputAssembly = null;
        try {
            retObjectSetOutputAssembly = classInstance.Invoke("SetOutputAssembly", outputAssembly);
            return (boolean)retObjectSetOutputAssembly;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetOutputAssembly != null ? retObjectSetOutputAssembly.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetPdbFile(java.lang.String pdbFile) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetPdbFile = null;
        try {
            retObjectSetPdbFile = classInstance.Invoke("SetPdbFile", pdbFile);
            return (boolean)retObjectSetPdbFile;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetPdbFile != null ? retObjectSetPdbFile.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetPlatform(java.lang.String platform) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetPlatform = null;
        try {
            retObjectSetPlatform = classInstance.Invoke("SetPlatform", platform);
            return (boolean)retObjectSetPlatform;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetPlatform != null ? retObjectSetPlatform.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetReferences(ITaskItem[] references) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetReferences = null;
        try {
            retObjectSetReferences = classInstance.Invoke("SetReferences", (java.lang.Object)toObjectFromArray(references));
            return (boolean)retObjectSetReferences;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetReferences != null ? retObjectSetReferences.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetResources(ITaskItem[] resources) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetResources = null;
        try {
            retObjectSetResources = classInstance.Invoke("SetResources", (java.lang.Object)toObjectFromArray(resources));
            return (boolean)retObjectSetResources;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetResources != null ? retObjectSetResources.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetResponseFiles(ITaskItem[] responseFiles) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetResponseFiles = null;
        try {
            retObjectSetResponseFiles = classInstance.Invoke("SetResponseFiles", (java.lang.Object)toObjectFromArray(responseFiles));
            return (boolean)retObjectSetResponseFiles;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetResponseFiles != null ? retObjectSetResponseFiles.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetSources(ITaskItem[] sources) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetSources = null;
        try {
            retObjectSetSources = classInstance.Invoke("SetSources", (java.lang.Object)toObjectFromArray(sources));
            return (boolean)retObjectSetSources;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetSources != null ? retObjectSetSources.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetTargetType(java.lang.String targetType) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetTargetType = null;
        try {
            retObjectSetTargetType = classInstance.Invoke("SetTargetType", targetType);
            return (boolean)retObjectSetTargetType;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetTargetType != null ? retObjectSetTargetType.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetTreatWarningsAsErrors(boolean treatWarningsAsErrors) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetTreatWarningsAsErrors = null;
        try {
            retObjectSetTreatWarningsAsErrors = classInstance.Invoke("SetTreatWarningsAsErrors", treatWarningsAsErrors);
            return (boolean)retObjectSetTreatWarningsAsErrors;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetTreatWarningsAsErrors != null ? retObjectSetTreatWarningsAsErrors.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetWarningLevel(int warningLevel) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetWarningLevel = null;
        try {
            retObjectSetWarningLevel = classInstance.Invoke("SetWarningLevel", warningLevel);
            return (boolean)retObjectSetWarningLevel;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetWarningLevel != null ? retObjectSetWarningLevel.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetWarningsAsErrors(java.lang.String warningsAsErrors) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetWarningsAsErrors = null;
        try {
            retObjectSetWarningsAsErrors = classInstance.Invoke("SetWarningsAsErrors", warningsAsErrors);
            return (boolean)retObjectSetWarningsAsErrors;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetWarningsAsErrors != null ? retObjectSetWarningsAsErrors.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetWarningsNotAsErrors(java.lang.String warningsNotAsErrors) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetWarningsNotAsErrors = null;
        try {
            retObjectSetWarningsNotAsErrors = classInstance.Invoke("SetWarningsNotAsErrors", warningsNotAsErrors);
            return (boolean)retObjectSetWarningsNotAsErrors;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetWarningsNotAsErrors != null ? retObjectSetWarningsNotAsErrors.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetWin32Icon(java.lang.String win32Icon) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetWin32Icon = null;
        try {
            retObjectSetWin32Icon = classInstance.Invoke("SetWin32Icon", win32Icon);
            return (boolean)retObjectSetWin32Icon;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetWin32Icon != null ? retObjectSetWin32Icon.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetWin32Manifest(java.lang.String win32Manifest) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetWin32Manifest = null;
        try {
            retObjectSetWin32Manifest = classInstance.Invoke("SetWin32Manifest", win32Manifest);
            return (boolean)retObjectSetWin32Manifest;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetWin32Manifest != null ? retObjectSetWin32Manifest.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SetWin32Resource(java.lang.String win32Resource) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSetWin32Resource = null;
        try {
            retObjectSetWin32Resource = classInstance.Invoke("SetWin32Resource", win32Resource);
            return (boolean)retObjectSetWin32Resource;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSetWin32Resource != null ? retObjectSetWin32Resource.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void BeginInitialization() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("BeginInitialization");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    


    // Instance Events section
    

}