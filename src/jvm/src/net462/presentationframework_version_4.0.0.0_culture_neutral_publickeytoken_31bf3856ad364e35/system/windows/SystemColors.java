/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.windows;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.windows.media.Color;
import system.windows.media.SolidColorBrush;
import system.windows.ResourceKey;


/**
 * The base .NET class managing System.Windows.SystemColors, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Windows.SystemColors" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Windows.SystemColors</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class SystemColors extends NetObject  {
    /**
     * Fully assembly qualified name: PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
     */
    public static final String assemblyFullName = "PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35";
    /**
     * Assembly name: PresentationFramework
     */
    public static final String assemblyShortName = "PresentationFramework";
    /**
     * Qualified class name: System.Windows.SystemColors
     */
    public static final String className = "System.Windows.SystemColors";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public SystemColors(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link SystemColors}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link SystemColors} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static SystemColors cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new SystemColors(from.getJCOInstance());
    }

    // Constructors section
    
    public SystemColors() throws Throwable {
    }

    
    // Methods section
    

    
    // Properties section
    
    public static Color getActiveBorderColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveBorderColor = null;
        try {
            retObjectActiveBorderColor = classType.Get("ActiveBorderColor");
            JCObject val = (JCObject)retObjectActiveBorderColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveBorderColor != null ? retObjectActiveBorderColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getActiveCaptionColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveCaptionColor = null;
        try {
            retObjectActiveCaptionColor = classType.Get("ActiveCaptionColor");
            JCObject val = (JCObject)retObjectActiveCaptionColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveCaptionColor != null ? retObjectActiveCaptionColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getActiveCaptionTextColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveCaptionTextColor = null;
        try {
            retObjectActiveCaptionTextColor = classType.Get("ActiveCaptionTextColor");
            JCObject val = (JCObject)retObjectActiveCaptionTextColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveCaptionTextColor != null ? retObjectActiveCaptionTextColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getAppWorkspaceColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectAppWorkspaceColor = null;
        try {
            retObjectAppWorkspaceColor = classType.Get("AppWorkspaceColor");
            JCObject val = (JCObject)retObjectAppWorkspaceColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectAppWorkspaceColor != null ? retObjectAppWorkspaceColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getControlColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlColor = null;
        try {
            retObjectControlColor = classType.Get("ControlColor");
            JCObject val = (JCObject)retObjectControlColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlColor != null ? retObjectControlColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getControlDarkColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlDarkColor = null;
        try {
            retObjectControlDarkColor = classType.Get("ControlDarkColor");
            JCObject val = (JCObject)retObjectControlDarkColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlDarkColor != null ? retObjectControlDarkColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getControlDarkDarkColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlDarkDarkColor = null;
        try {
            retObjectControlDarkDarkColor = classType.Get("ControlDarkDarkColor");
            JCObject val = (JCObject)retObjectControlDarkDarkColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlDarkDarkColor != null ? retObjectControlDarkDarkColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getControlLightColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlLightColor = null;
        try {
            retObjectControlLightColor = classType.Get("ControlLightColor");
            JCObject val = (JCObject)retObjectControlLightColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlLightColor != null ? retObjectControlLightColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getControlLightLightColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlLightLightColor = null;
        try {
            retObjectControlLightLightColor = classType.Get("ControlLightLightColor");
            JCObject val = (JCObject)retObjectControlLightLightColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlLightLightColor != null ? retObjectControlLightLightColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getControlTextColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlTextColor = null;
        try {
            retObjectControlTextColor = classType.Get("ControlTextColor");
            JCObject val = (JCObject)retObjectControlTextColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlTextColor != null ? retObjectControlTextColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getDesktopColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDesktopColor = null;
        try {
            retObjectDesktopColor = classType.Get("DesktopColor");
            JCObject val = (JCObject)retObjectDesktopColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDesktopColor != null ? retObjectDesktopColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getGradientActiveCaptionColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGradientActiveCaptionColor = null;
        try {
            retObjectGradientActiveCaptionColor = classType.Get("GradientActiveCaptionColor");
            JCObject val = (JCObject)retObjectGradientActiveCaptionColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGradientActiveCaptionColor != null ? retObjectGradientActiveCaptionColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getGradientInactiveCaptionColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGradientInactiveCaptionColor = null;
        try {
            retObjectGradientInactiveCaptionColor = classType.Get("GradientInactiveCaptionColor");
            JCObject val = (JCObject)retObjectGradientInactiveCaptionColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGradientInactiveCaptionColor != null ? retObjectGradientInactiveCaptionColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getGrayTextColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGrayTextColor = null;
        try {
            retObjectGrayTextColor = classType.Get("GrayTextColor");
            JCObject val = (JCObject)retObjectGrayTextColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGrayTextColor != null ? retObjectGrayTextColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getHighlightColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighlightColor = null;
        try {
            retObjectHighlightColor = classType.Get("HighlightColor");
            JCObject val = (JCObject)retObjectHighlightColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHighlightColor != null ? retObjectHighlightColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getHighlightTextColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighlightTextColor = null;
        try {
            retObjectHighlightTextColor = classType.Get("HighlightTextColor");
            JCObject val = (JCObject)retObjectHighlightTextColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHighlightTextColor != null ? retObjectHighlightTextColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getHotTrackColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHotTrackColor = null;
        try {
            retObjectHotTrackColor = classType.Get("HotTrackColor");
            JCObject val = (JCObject)retObjectHotTrackColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHotTrackColor != null ? retObjectHotTrackColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getInactiveBorderColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveBorderColor = null;
        try {
            retObjectInactiveBorderColor = classType.Get("InactiveBorderColor");
            JCObject val = (JCObject)retObjectInactiveBorderColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveBorderColor != null ? retObjectInactiveBorderColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getInactiveCaptionColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveCaptionColor = null;
        try {
            retObjectInactiveCaptionColor = classType.Get("InactiveCaptionColor");
            JCObject val = (JCObject)retObjectInactiveCaptionColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveCaptionColor != null ? retObjectInactiveCaptionColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getInactiveCaptionTextColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveCaptionTextColor = null;
        try {
            retObjectInactiveCaptionTextColor = classType.Get("InactiveCaptionTextColor");
            JCObject val = (JCObject)retObjectInactiveCaptionTextColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveCaptionTextColor != null ? retObjectInactiveCaptionTextColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getInfoColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInfoColor = null;
        try {
            retObjectInfoColor = classType.Get("InfoColor");
            JCObject val = (JCObject)retObjectInfoColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInfoColor != null ? retObjectInfoColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getInfoTextColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInfoTextColor = null;
        try {
            retObjectInfoTextColor = classType.Get("InfoTextColor");
            JCObject val = (JCObject)retObjectInfoTextColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInfoTextColor != null ? retObjectInfoTextColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getMenuBarColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuBarColor = null;
        try {
            retObjectMenuBarColor = classType.Get("MenuBarColor");
            JCObject val = (JCObject)retObjectMenuBarColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuBarColor != null ? retObjectMenuBarColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getMenuColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuColor = null;
        try {
            retObjectMenuColor = classType.Get("MenuColor");
            JCObject val = (JCObject)retObjectMenuColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuColor != null ? retObjectMenuColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getMenuHighlightColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuHighlightColor = null;
        try {
            retObjectMenuHighlightColor = classType.Get("MenuHighlightColor");
            JCObject val = (JCObject)retObjectMenuHighlightColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuHighlightColor != null ? retObjectMenuHighlightColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getMenuTextColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuTextColor = null;
        try {
            retObjectMenuTextColor = classType.Get("MenuTextColor");
            JCObject val = (JCObject)retObjectMenuTextColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuTextColor != null ? retObjectMenuTextColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getScrollBarColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectScrollBarColor = null;
        try {
            retObjectScrollBarColor = classType.Get("ScrollBarColor");
            JCObject val = (JCObject)retObjectScrollBarColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectScrollBarColor != null ? retObjectScrollBarColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getWindowColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowColor = null;
        try {
            retObjectWindowColor = classType.Get("WindowColor");
            JCObject val = (JCObject)retObjectWindowColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowColor != null ? retObjectWindowColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getWindowFrameColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowFrameColor = null;
        try {
            retObjectWindowFrameColor = classType.Get("WindowFrameColor");
            JCObject val = (JCObject)retObjectWindowFrameColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowFrameColor != null ? retObjectWindowFrameColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getWindowTextColor() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowTextColor = null;
        try {
            retObjectWindowTextColor = classType.Get("WindowTextColor");
            JCObject val = (JCObject)retObjectWindowTextColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowTextColor != null ? retObjectWindowTextColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getActiveBorderBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveBorderBrush = null;
        try {
            retObjectActiveBorderBrush = classType.Get("ActiveBorderBrush");
            JCObject val = (JCObject)retObjectActiveBorderBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveBorderBrush != null ? retObjectActiveBorderBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getActiveCaptionBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveCaptionBrush = null;
        try {
            retObjectActiveCaptionBrush = classType.Get("ActiveCaptionBrush");
            JCObject val = (JCObject)retObjectActiveCaptionBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveCaptionBrush != null ? retObjectActiveCaptionBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getActiveCaptionTextBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveCaptionTextBrush = null;
        try {
            retObjectActiveCaptionTextBrush = classType.Get("ActiveCaptionTextBrush");
            JCObject val = (JCObject)retObjectActiveCaptionTextBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveCaptionTextBrush != null ? retObjectActiveCaptionTextBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getAppWorkspaceBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectAppWorkspaceBrush = null;
        try {
            retObjectAppWorkspaceBrush = classType.Get("AppWorkspaceBrush");
            JCObject val = (JCObject)retObjectAppWorkspaceBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectAppWorkspaceBrush != null ? retObjectAppWorkspaceBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getControlBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlBrush = null;
        try {
            retObjectControlBrush = classType.Get("ControlBrush");
            JCObject val = (JCObject)retObjectControlBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlBrush != null ? retObjectControlBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getControlDarkBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlDarkBrush = null;
        try {
            retObjectControlDarkBrush = classType.Get("ControlDarkBrush");
            JCObject val = (JCObject)retObjectControlDarkBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlDarkBrush != null ? retObjectControlDarkBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getControlDarkDarkBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlDarkDarkBrush = null;
        try {
            retObjectControlDarkDarkBrush = classType.Get("ControlDarkDarkBrush");
            JCObject val = (JCObject)retObjectControlDarkDarkBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlDarkDarkBrush != null ? retObjectControlDarkDarkBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getControlLightBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlLightBrush = null;
        try {
            retObjectControlLightBrush = classType.Get("ControlLightBrush");
            JCObject val = (JCObject)retObjectControlLightBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlLightBrush != null ? retObjectControlLightBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getControlLightLightBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlLightLightBrush = null;
        try {
            retObjectControlLightLightBrush = classType.Get("ControlLightLightBrush");
            JCObject val = (JCObject)retObjectControlLightLightBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlLightLightBrush != null ? retObjectControlLightLightBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getControlTextBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlTextBrush = null;
        try {
            retObjectControlTextBrush = classType.Get("ControlTextBrush");
            JCObject val = (JCObject)retObjectControlTextBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlTextBrush != null ? retObjectControlTextBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getDesktopBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDesktopBrush = null;
        try {
            retObjectDesktopBrush = classType.Get("DesktopBrush");
            JCObject val = (JCObject)retObjectDesktopBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDesktopBrush != null ? retObjectDesktopBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getGradientActiveCaptionBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGradientActiveCaptionBrush = null;
        try {
            retObjectGradientActiveCaptionBrush = classType.Get("GradientActiveCaptionBrush");
            JCObject val = (JCObject)retObjectGradientActiveCaptionBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGradientActiveCaptionBrush != null ? retObjectGradientActiveCaptionBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getGradientInactiveCaptionBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGradientInactiveCaptionBrush = null;
        try {
            retObjectGradientInactiveCaptionBrush = classType.Get("GradientInactiveCaptionBrush");
            JCObject val = (JCObject)retObjectGradientInactiveCaptionBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGradientInactiveCaptionBrush != null ? retObjectGradientInactiveCaptionBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getGrayTextBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGrayTextBrush = null;
        try {
            retObjectGrayTextBrush = classType.Get("GrayTextBrush");
            JCObject val = (JCObject)retObjectGrayTextBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGrayTextBrush != null ? retObjectGrayTextBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getHighlightBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighlightBrush = null;
        try {
            retObjectHighlightBrush = classType.Get("HighlightBrush");
            JCObject val = (JCObject)retObjectHighlightBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHighlightBrush != null ? retObjectHighlightBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getHighlightTextBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighlightTextBrush = null;
        try {
            retObjectHighlightTextBrush = classType.Get("HighlightTextBrush");
            JCObject val = (JCObject)retObjectHighlightTextBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHighlightTextBrush != null ? retObjectHighlightTextBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getHotTrackBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHotTrackBrush = null;
        try {
            retObjectHotTrackBrush = classType.Get("HotTrackBrush");
            JCObject val = (JCObject)retObjectHotTrackBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHotTrackBrush != null ? retObjectHotTrackBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getInactiveBorderBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveBorderBrush = null;
        try {
            retObjectInactiveBorderBrush = classType.Get("InactiveBorderBrush");
            JCObject val = (JCObject)retObjectInactiveBorderBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveBorderBrush != null ? retObjectInactiveBorderBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getInactiveCaptionBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveCaptionBrush = null;
        try {
            retObjectInactiveCaptionBrush = classType.Get("InactiveCaptionBrush");
            JCObject val = (JCObject)retObjectInactiveCaptionBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveCaptionBrush != null ? retObjectInactiveCaptionBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getInactiveCaptionTextBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveCaptionTextBrush = null;
        try {
            retObjectInactiveCaptionTextBrush = classType.Get("InactiveCaptionTextBrush");
            JCObject val = (JCObject)retObjectInactiveCaptionTextBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveCaptionTextBrush != null ? retObjectInactiveCaptionTextBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getInactiveSelectionHighlightBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception, system.InvalidOperationException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveSelectionHighlightBrush = null;
        try {
            retObjectInactiveSelectionHighlightBrush = classType.Get("InactiveSelectionHighlightBrush");
            JCObject val = (JCObject)retObjectInactiveSelectionHighlightBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveSelectionHighlightBrush != null ? retObjectInactiveSelectionHighlightBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getInactiveSelectionHighlightTextBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception, system.InvalidOperationException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveSelectionHighlightTextBrush = null;
        try {
            retObjectInactiveSelectionHighlightTextBrush = classType.Get("InactiveSelectionHighlightTextBrush");
            JCObject val = (JCObject)retObjectInactiveSelectionHighlightTextBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveSelectionHighlightTextBrush != null ? retObjectInactiveSelectionHighlightTextBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getInfoBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInfoBrush = null;
        try {
            retObjectInfoBrush = classType.Get("InfoBrush");
            JCObject val = (JCObject)retObjectInfoBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInfoBrush != null ? retObjectInfoBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getInfoTextBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInfoTextBrush = null;
        try {
            retObjectInfoTextBrush = classType.Get("InfoTextBrush");
            JCObject val = (JCObject)retObjectInfoTextBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInfoTextBrush != null ? retObjectInfoTextBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getMenuBarBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuBarBrush = null;
        try {
            retObjectMenuBarBrush = classType.Get("MenuBarBrush");
            JCObject val = (JCObject)retObjectMenuBarBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuBarBrush != null ? retObjectMenuBarBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getMenuBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuBrush = null;
        try {
            retObjectMenuBrush = classType.Get("MenuBrush");
            JCObject val = (JCObject)retObjectMenuBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuBrush != null ? retObjectMenuBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getMenuHighlightBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuHighlightBrush = null;
        try {
            retObjectMenuHighlightBrush = classType.Get("MenuHighlightBrush");
            JCObject val = (JCObject)retObjectMenuHighlightBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuHighlightBrush != null ? retObjectMenuHighlightBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getMenuTextBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuTextBrush = null;
        try {
            retObjectMenuTextBrush = classType.Get("MenuTextBrush");
            JCObject val = (JCObject)retObjectMenuTextBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuTextBrush != null ? retObjectMenuTextBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getScrollBarBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectScrollBarBrush = null;
        try {
            retObjectScrollBarBrush = classType.Get("ScrollBarBrush");
            JCObject val = (JCObject)retObjectScrollBarBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectScrollBarBrush != null ? retObjectScrollBarBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getWindowBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowBrush = null;
        try {
            retObjectWindowBrush = classType.Get("WindowBrush");
            JCObject val = (JCObject)retObjectWindowBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowBrush != null ? retObjectWindowBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getWindowFrameBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowFrameBrush = null;
        try {
            retObjectWindowFrameBrush = classType.Get("WindowFrameBrush");
            JCObject val = (JCObject)retObjectWindowFrameBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowFrameBrush != null ? retObjectWindowFrameBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SolidColorBrush getWindowTextBrush() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowTextBrush = null;
        try {
            retObjectWindowTextBrush = classType.Get("WindowTextBrush");
            JCObject val = (JCObject)retObjectWindowTextBrush;
            return new SolidColorBrush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowTextBrush != null ? retObjectWindowTextBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getActiveBorderBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveBorderBrushKey = null;
        try {
            retObjectActiveBorderBrushKey = classType.Get("ActiveBorderBrushKey");
            JCObject val = (JCObject)retObjectActiveBorderBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveBorderBrushKey != null ? retObjectActiveBorderBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getActiveBorderColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveBorderColorKey = null;
        try {
            retObjectActiveBorderColorKey = classType.Get("ActiveBorderColorKey");
            JCObject val = (JCObject)retObjectActiveBorderColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveBorderColorKey != null ? retObjectActiveBorderColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getActiveCaptionBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveCaptionBrushKey = null;
        try {
            retObjectActiveCaptionBrushKey = classType.Get("ActiveCaptionBrushKey");
            JCObject val = (JCObject)retObjectActiveCaptionBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveCaptionBrushKey != null ? retObjectActiveCaptionBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getActiveCaptionColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveCaptionColorKey = null;
        try {
            retObjectActiveCaptionColorKey = classType.Get("ActiveCaptionColorKey");
            JCObject val = (JCObject)retObjectActiveCaptionColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveCaptionColorKey != null ? retObjectActiveCaptionColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getActiveCaptionTextBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveCaptionTextBrushKey = null;
        try {
            retObjectActiveCaptionTextBrushKey = classType.Get("ActiveCaptionTextBrushKey");
            JCObject val = (JCObject)retObjectActiveCaptionTextBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveCaptionTextBrushKey != null ? retObjectActiveCaptionTextBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getActiveCaptionTextColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveCaptionTextColorKey = null;
        try {
            retObjectActiveCaptionTextColorKey = classType.Get("ActiveCaptionTextColorKey");
            JCObject val = (JCObject)retObjectActiveCaptionTextColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectActiveCaptionTextColorKey != null ? retObjectActiveCaptionTextColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getAppWorkspaceBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectAppWorkspaceBrushKey = null;
        try {
            retObjectAppWorkspaceBrushKey = classType.Get("AppWorkspaceBrushKey");
            JCObject val = (JCObject)retObjectAppWorkspaceBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectAppWorkspaceBrushKey != null ? retObjectAppWorkspaceBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getAppWorkspaceColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectAppWorkspaceColorKey = null;
        try {
            retObjectAppWorkspaceColorKey = classType.Get("AppWorkspaceColorKey");
            JCObject val = (JCObject)retObjectAppWorkspaceColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectAppWorkspaceColorKey != null ? retObjectAppWorkspaceColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlBrushKey = null;
        try {
            retObjectControlBrushKey = classType.Get("ControlBrushKey");
            JCObject val = (JCObject)retObjectControlBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlBrushKey != null ? retObjectControlBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlColorKey = null;
        try {
            retObjectControlColorKey = classType.Get("ControlColorKey");
            JCObject val = (JCObject)retObjectControlColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlColorKey != null ? retObjectControlColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlDarkBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlDarkBrushKey = null;
        try {
            retObjectControlDarkBrushKey = classType.Get("ControlDarkBrushKey");
            JCObject val = (JCObject)retObjectControlDarkBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlDarkBrushKey != null ? retObjectControlDarkBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlDarkColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlDarkColorKey = null;
        try {
            retObjectControlDarkColorKey = classType.Get("ControlDarkColorKey");
            JCObject val = (JCObject)retObjectControlDarkColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlDarkColorKey != null ? retObjectControlDarkColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlDarkDarkBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlDarkDarkBrushKey = null;
        try {
            retObjectControlDarkDarkBrushKey = classType.Get("ControlDarkDarkBrushKey");
            JCObject val = (JCObject)retObjectControlDarkDarkBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlDarkDarkBrushKey != null ? retObjectControlDarkDarkBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlDarkDarkColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlDarkDarkColorKey = null;
        try {
            retObjectControlDarkDarkColorKey = classType.Get("ControlDarkDarkColorKey");
            JCObject val = (JCObject)retObjectControlDarkDarkColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlDarkDarkColorKey != null ? retObjectControlDarkDarkColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlLightBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlLightBrushKey = null;
        try {
            retObjectControlLightBrushKey = classType.Get("ControlLightBrushKey");
            JCObject val = (JCObject)retObjectControlLightBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlLightBrushKey != null ? retObjectControlLightBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlLightColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlLightColorKey = null;
        try {
            retObjectControlLightColorKey = classType.Get("ControlLightColorKey");
            JCObject val = (JCObject)retObjectControlLightColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlLightColorKey != null ? retObjectControlLightColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlLightLightBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlLightLightBrushKey = null;
        try {
            retObjectControlLightLightBrushKey = classType.Get("ControlLightLightBrushKey");
            JCObject val = (JCObject)retObjectControlLightLightBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlLightLightBrushKey != null ? retObjectControlLightLightBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlLightLightColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlLightLightColorKey = null;
        try {
            retObjectControlLightLightColorKey = classType.Get("ControlLightLightColorKey");
            JCObject val = (JCObject)retObjectControlLightLightColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlLightLightColorKey != null ? retObjectControlLightLightColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlTextBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlTextBrushKey = null;
        try {
            retObjectControlTextBrushKey = classType.Get("ControlTextBrushKey");
            JCObject val = (JCObject)retObjectControlTextBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlTextBrushKey != null ? retObjectControlTextBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getControlTextColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectControlTextColorKey = null;
        try {
            retObjectControlTextColorKey = classType.Get("ControlTextColorKey");
            JCObject val = (JCObject)retObjectControlTextColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectControlTextColorKey != null ? retObjectControlTextColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getDesktopBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDesktopBrushKey = null;
        try {
            retObjectDesktopBrushKey = classType.Get("DesktopBrushKey");
            JCObject val = (JCObject)retObjectDesktopBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDesktopBrushKey != null ? retObjectDesktopBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getDesktopColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDesktopColorKey = null;
        try {
            retObjectDesktopColorKey = classType.Get("DesktopColorKey");
            JCObject val = (JCObject)retObjectDesktopColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDesktopColorKey != null ? retObjectDesktopColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getGradientActiveCaptionBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGradientActiveCaptionBrushKey = null;
        try {
            retObjectGradientActiveCaptionBrushKey = classType.Get("GradientActiveCaptionBrushKey");
            JCObject val = (JCObject)retObjectGradientActiveCaptionBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGradientActiveCaptionBrushKey != null ? retObjectGradientActiveCaptionBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getGradientActiveCaptionColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGradientActiveCaptionColorKey = null;
        try {
            retObjectGradientActiveCaptionColorKey = classType.Get("GradientActiveCaptionColorKey");
            JCObject val = (JCObject)retObjectGradientActiveCaptionColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGradientActiveCaptionColorKey != null ? retObjectGradientActiveCaptionColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getGradientInactiveCaptionBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGradientInactiveCaptionBrushKey = null;
        try {
            retObjectGradientInactiveCaptionBrushKey = classType.Get("GradientInactiveCaptionBrushKey");
            JCObject val = (JCObject)retObjectGradientInactiveCaptionBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGradientInactiveCaptionBrushKey != null ? retObjectGradientInactiveCaptionBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getGradientInactiveCaptionColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGradientInactiveCaptionColorKey = null;
        try {
            retObjectGradientInactiveCaptionColorKey = classType.Get("GradientInactiveCaptionColorKey");
            JCObject val = (JCObject)retObjectGradientInactiveCaptionColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGradientInactiveCaptionColorKey != null ? retObjectGradientInactiveCaptionColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getGrayTextBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGrayTextBrushKey = null;
        try {
            retObjectGrayTextBrushKey = classType.Get("GrayTextBrushKey");
            JCObject val = (JCObject)retObjectGrayTextBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGrayTextBrushKey != null ? retObjectGrayTextBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getGrayTextColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGrayTextColorKey = null;
        try {
            retObjectGrayTextColorKey = classType.Get("GrayTextColorKey");
            JCObject val = (JCObject)retObjectGrayTextColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGrayTextColorKey != null ? retObjectGrayTextColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHighlightBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighlightBrushKey = null;
        try {
            retObjectHighlightBrushKey = classType.Get("HighlightBrushKey");
            JCObject val = (JCObject)retObjectHighlightBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHighlightBrushKey != null ? retObjectHighlightBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHighlightColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighlightColorKey = null;
        try {
            retObjectHighlightColorKey = classType.Get("HighlightColorKey");
            JCObject val = (JCObject)retObjectHighlightColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHighlightColorKey != null ? retObjectHighlightColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHighlightTextBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighlightTextBrushKey = null;
        try {
            retObjectHighlightTextBrushKey = classType.Get("HighlightTextBrushKey");
            JCObject val = (JCObject)retObjectHighlightTextBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHighlightTextBrushKey != null ? retObjectHighlightTextBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHighlightTextColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighlightTextColorKey = null;
        try {
            retObjectHighlightTextColorKey = classType.Get("HighlightTextColorKey");
            JCObject val = (JCObject)retObjectHighlightTextColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHighlightTextColorKey != null ? retObjectHighlightTextColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHotTrackBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHotTrackBrushKey = null;
        try {
            retObjectHotTrackBrushKey = classType.Get("HotTrackBrushKey");
            JCObject val = (JCObject)retObjectHotTrackBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHotTrackBrushKey != null ? retObjectHotTrackBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHotTrackColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHotTrackColorKey = null;
        try {
            retObjectHotTrackColorKey = classType.Get("HotTrackColorKey");
            JCObject val = (JCObject)retObjectHotTrackColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHotTrackColorKey != null ? retObjectHotTrackColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInactiveBorderBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveBorderBrushKey = null;
        try {
            retObjectInactiveBorderBrushKey = classType.Get("InactiveBorderBrushKey");
            JCObject val = (JCObject)retObjectInactiveBorderBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveBorderBrushKey != null ? retObjectInactiveBorderBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInactiveBorderColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveBorderColorKey = null;
        try {
            retObjectInactiveBorderColorKey = classType.Get("InactiveBorderColorKey");
            JCObject val = (JCObject)retObjectInactiveBorderColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveBorderColorKey != null ? retObjectInactiveBorderColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInactiveCaptionBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveCaptionBrushKey = null;
        try {
            retObjectInactiveCaptionBrushKey = classType.Get("InactiveCaptionBrushKey");
            JCObject val = (JCObject)retObjectInactiveCaptionBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveCaptionBrushKey != null ? retObjectInactiveCaptionBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInactiveCaptionColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveCaptionColorKey = null;
        try {
            retObjectInactiveCaptionColorKey = classType.Get("InactiveCaptionColorKey");
            JCObject val = (JCObject)retObjectInactiveCaptionColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveCaptionColorKey != null ? retObjectInactiveCaptionColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInactiveCaptionTextBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveCaptionTextBrushKey = null;
        try {
            retObjectInactiveCaptionTextBrushKey = classType.Get("InactiveCaptionTextBrushKey");
            JCObject val = (JCObject)retObjectInactiveCaptionTextBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveCaptionTextBrushKey != null ? retObjectInactiveCaptionTextBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInactiveCaptionTextColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveCaptionTextColorKey = null;
        try {
            retObjectInactiveCaptionTextColorKey = classType.Get("InactiveCaptionTextColorKey");
            JCObject val = (JCObject)retObjectInactiveCaptionTextColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveCaptionTextColorKey != null ? retObjectInactiveCaptionTextColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInactiveSelectionHighlightBrushKey() throws Throwable, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveSelectionHighlightBrushKey = null;
        try {
            retObjectInactiveSelectionHighlightBrushKey = classType.Get("InactiveSelectionHighlightBrushKey");
            JCObject val = (JCObject)retObjectInactiveSelectionHighlightBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveSelectionHighlightBrushKey != null ? retObjectInactiveSelectionHighlightBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInactiveSelectionHighlightTextBrushKey() throws Throwable, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInactiveSelectionHighlightTextBrushKey = null;
        try {
            retObjectInactiveSelectionHighlightTextBrushKey = classType.Get("InactiveSelectionHighlightTextBrushKey");
            JCObject val = (JCObject)retObjectInactiveSelectionHighlightTextBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInactiveSelectionHighlightTextBrushKey != null ? retObjectInactiveSelectionHighlightTextBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInfoBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInfoBrushKey = null;
        try {
            retObjectInfoBrushKey = classType.Get("InfoBrushKey");
            JCObject val = (JCObject)retObjectInfoBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInfoBrushKey != null ? retObjectInfoBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInfoColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInfoColorKey = null;
        try {
            retObjectInfoColorKey = classType.Get("InfoColorKey");
            JCObject val = (JCObject)retObjectInfoColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInfoColorKey != null ? retObjectInfoColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInfoTextBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInfoTextBrushKey = null;
        try {
            retObjectInfoTextBrushKey = classType.Get("InfoTextBrushKey");
            JCObject val = (JCObject)retObjectInfoTextBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInfoTextBrushKey != null ? retObjectInfoTextBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getInfoTextColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInfoTextColorKey = null;
        try {
            retObjectInfoTextColorKey = classType.Get("InfoTextColorKey");
            JCObject val = (JCObject)retObjectInfoTextColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInfoTextColorKey != null ? retObjectInfoTextColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuBarBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuBarBrushKey = null;
        try {
            retObjectMenuBarBrushKey = classType.Get("MenuBarBrushKey");
            JCObject val = (JCObject)retObjectMenuBarBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuBarBrushKey != null ? retObjectMenuBarBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuBarColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuBarColorKey = null;
        try {
            retObjectMenuBarColorKey = classType.Get("MenuBarColorKey");
            JCObject val = (JCObject)retObjectMenuBarColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuBarColorKey != null ? retObjectMenuBarColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuBrushKey = null;
        try {
            retObjectMenuBrushKey = classType.Get("MenuBrushKey");
            JCObject val = (JCObject)retObjectMenuBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuBrushKey != null ? retObjectMenuBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuColorKey = null;
        try {
            retObjectMenuColorKey = classType.Get("MenuColorKey");
            JCObject val = (JCObject)retObjectMenuColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuColorKey != null ? retObjectMenuColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuHighlightBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuHighlightBrushKey = null;
        try {
            retObjectMenuHighlightBrushKey = classType.Get("MenuHighlightBrushKey");
            JCObject val = (JCObject)retObjectMenuHighlightBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuHighlightBrushKey != null ? retObjectMenuHighlightBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuHighlightColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuHighlightColorKey = null;
        try {
            retObjectMenuHighlightColorKey = classType.Get("MenuHighlightColorKey");
            JCObject val = (JCObject)retObjectMenuHighlightColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuHighlightColorKey != null ? retObjectMenuHighlightColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuTextBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuTextBrushKey = null;
        try {
            retObjectMenuTextBrushKey = classType.Get("MenuTextBrushKey");
            JCObject val = (JCObject)retObjectMenuTextBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuTextBrushKey != null ? retObjectMenuTextBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuTextColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuTextColorKey = null;
        try {
            retObjectMenuTextColorKey = classType.Get("MenuTextColorKey");
            JCObject val = (JCObject)retObjectMenuTextColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuTextColorKey != null ? retObjectMenuTextColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getScrollBarBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectScrollBarBrushKey = null;
        try {
            retObjectScrollBarBrushKey = classType.Get("ScrollBarBrushKey");
            JCObject val = (JCObject)retObjectScrollBarBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectScrollBarBrushKey != null ? retObjectScrollBarBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getScrollBarColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectScrollBarColorKey = null;
        try {
            retObjectScrollBarColorKey = classType.Get("ScrollBarColorKey");
            JCObject val = (JCObject)retObjectScrollBarColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectScrollBarColorKey != null ? retObjectScrollBarColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWindowBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowBrushKey = null;
        try {
            retObjectWindowBrushKey = classType.Get("WindowBrushKey");
            JCObject val = (JCObject)retObjectWindowBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowBrushKey != null ? retObjectWindowBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWindowColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowColorKey = null;
        try {
            retObjectWindowColorKey = classType.Get("WindowColorKey");
            JCObject val = (JCObject)retObjectWindowColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowColorKey != null ? retObjectWindowColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWindowFrameBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowFrameBrushKey = null;
        try {
            retObjectWindowFrameBrushKey = classType.Get("WindowFrameBrushKey");
            JCObject val = (JCObject)retObjectWindowFrameBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowFrameBrushKey != null ? retObjectWindowFrameBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWindowFrameColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowFrameColorKey = null;
        try {
            retObjectWindowFrameColorKey = classType.Get("WindowFrameColorKey");
            JCObject val = (JCObject)retObjectWindowFrameColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowFrameColorKey != null ? retObjectWindowFrameColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWindowTextBrushKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowTextBrushKey = null;
        try {
            retObjectWindowTextBrushKey = classType.Get("WindowTextBrushKey");
            JCObject val = (JCObject)retObjectWindowTextBrushKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowTextBrushKey != null ? retObjectWindowTextBrushKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWindowTextColorKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowTextColorKey = null;
        try {
            retObjectWindowTextColorKey = classType.Get("WindowTextColorKey");
            JCObject val = (JCObject)retObjectWindowTextColorKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowTextColorKey != null ? retObjectWindowTextColorKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}