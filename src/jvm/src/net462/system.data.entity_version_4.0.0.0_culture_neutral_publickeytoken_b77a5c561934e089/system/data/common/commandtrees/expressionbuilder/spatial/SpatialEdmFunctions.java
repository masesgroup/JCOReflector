/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.data.common.commandtrees.expressionbuilder.spatial;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.data.common.commandtrees.DbFunctionExpression;
import system.data.common.commandtrees.DbExpression;


/**
 * The base .NET class managing System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions, System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class SpatialEdmFunctions extends NetObject  {
    /**
     * Fully assembly qualified name: System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
     */
    public static final String assemblyFullName = "System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089";
    /**
     * Assembly name: System.Data.Entity
     */
    public static final String assemblyShortName = "System.Data.Entity";
    /**
     * Qualified class name: System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions
     */
    public static final String className = "System.Data.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public SpatialEdmFunctions(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link SpatialEdmFunctions}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link SpatialEdmFunctions} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static SpatialEdmFunctions cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new SpatialEdmFunctions(from.getJCOInstance());
    }

    // Constructors section
    
    public SpatialEdmFunctions() throws Throwable {
    }

    
    // Methods section
    
    public static DbFunctionExpression Area(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectArea = null;
        try {
            retObjectArea = classType.Invoke("Area", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objArea = (JCObject)retObjectArea;
            return new DbFunctionExpression(objArea);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectArea != null ? retObjectArea.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression AsBinary(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectAsBinary = null;
        try {
            retObjectAsBinary = classType.Invoke("AsBinary", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objAsBinary = (JCObject)retObjectAsBinary;
            return new DbFunctionExpression(objAsBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectAsBinary != null ? retObjectAsBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression AsGml(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectAsGml = null;
        try {
            retObjectAsGml = classType.Invoke("AsGml", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objAsGml = (JCObject)retObjectAsGml;
            return new DbFunctionExpression(objAsGml);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectAsGml != null ? retObjectAsGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression AsText(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectAsText = null;
        try {
            retObjectAsText = classType.Invoke("AsText", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objAsText = (JCObject)retObjectAsText;
            return new DbFunctionExpression(objAsText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectAsText != null ? retObjectAsText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression Centroid(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCentroid = null;
        try {
            retObjectCentroid = classType.Invoke("Centroid", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objCentroid = (JCObject)retObjectCentroid;
            return new DbFunctionExpression(objCentroid);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCentroid != null ? retObjectCentroid.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression CoordinateSystemId(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCoordinateSystemId = null;
        try {
            retObjectCoordinateSystemId = classType.Invoke("CoordinateSystemId", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objCoordinateSystemId = (JCObject)retObjectCoordinateSystemId;
            return new DbFunctionExpression(objCoordinateSystemId);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCoordinateSystemId != null ? retObjectCoordinateSystemId.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression Distance(DbExpression spatialValue1, DbExpression spatialValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDistance = null;
        try {
            retObjectDistance = classType.Invoke("Distance", spatialValue1 == null ? null : spatialValue1.getJCOInstance(), spatialValue2 == null ? null : spatialValue2.getJCOInstance());
            JCObject objDistance = (JCObject)retObjectDistance;
            return new DbFunctionExpression(objDistance);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDistance != null ? retObjectDistance.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression Elevation(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectElevation = null;
        try {
            retObjectElevation = classType.Invoke("Elevation", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objElevation = (JCObject)retObjectElevation;
            return new DbFunctionExpression(objElevation);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectElevation != null ? retObjectElevation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression EndPoint(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectEndPoint = null;
        try {
            retObjectEndPoint = classType.Invoke("EndPoint", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objEndPoint = (JCObject)retObjectEndPoint;
            return new DbFunctionExpression(objEndPoint);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectEndPoint != null ? retObjectEndPoint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression ExteriorRing(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectExteriorRing = null;
        try {
            retObjectExteriorRing = classType.Invoke("ExteriorRing", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objExteriorRing = (JCObject)retObjectExteriorRing;
            return new DbFunctionExpression(objExteriorRing);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectExteriorRing != null ? retObjectExteriorRing.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyCollectionFromBinary(DbExpression geographyCollectionWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyCollectionFromBinary = null;
        try {
            retObjectGeographyCollectionFromBinary = classType.Invoke("GeographyCollectionFromBinary", geographyCollectionWellKnownBinaryValue == null ? null : geographyCollectionWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyCollectionFromBinary = (JCObject)retObjectGeographyCollectionFromBinary;
            return new DbFunctionExpression(objGeographyCollectionFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyCollectionFromBinary != null ? retObjectGeographyCollectionFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyCollectionFromText(DbExpression geographyCollectionWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyCollectionFromText = null;
        try {
            retObjectGeographyCollectionFromText = classType.Invoke("GeographyCollectionFromText", geographyCollectionWellKnownText == null ? null : geographyCollectionWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyCollectionFromText = (JCObject)retObjectGeographyCollectionFromText;
            return new DbFunctionExpression(objGeographyCollectionFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyCollectionFromText != null ? retObjectGeographyCollectionFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyFromBinary(DbExpression wellKnownBinaryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyFromBinary = null;
        try {
            retObjectGeographyFromBinary = classType.Invoke("GeographyFromBinary", wellKnownBinaryValue == null ? null : wellKnownBinaryValue.getJCOInstance());
            JCObject objGeographyFromBinary = (JCObject)retObjectGeographyFromBinary;
            return new DbFunctionExpression(objGeographyFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromBinary != null ? retObjectGeographyFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyFromBinary(DbExpression wellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyFromBinary = null;
        try {
            retObjectGeographyFromBinary = classType.Invoke("GeographyFromBinary", wellKnownBinaryValue == null ? null : wellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyFromBinary = (JCObject)retObjectGeographyFromBinary;
            return new DbFunctionExpression(objGeographyFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromBinary != null ? retObjectGeographyFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyFromGml(DbExpression geographyMarkup) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyFromGml = null;
        try {
            retObjectGeographyFromGml = classType.Invoke("GeographyFromGml", geographyMarkup == null ? null : geographyMarkup.getJCOInstance());
            JCObject objGeographyFromGml = (JCObject)retObjectGeographyFromGml;
            return new DbFunctionExpression(objGeographyFromGml);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromGml != null ? retObjectGeographyFromGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyFromGml(DbExpression geographyMarkup, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyFromGml = null;
        try {
            retObjectGeographyFromGml = classType.Invoke("GeographyFromGml", geographyMarkup == null ? null : geographyMarkup.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyFromGml = (JCObject)retObjectGeographyFromGml;
            return new DbFunctionExpression(objGeographyFromGml);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromGml != null ? retObjectGeographyFromGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyFromText(DbExpression wellKnownText) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyFromText = null;
        try {
            retObjectGeographyFromText = classType.Invoke("GeographyFromText", wellKnownText == null ? null : wellKnownText.getJCOInstance());
            JCObject objGeographyFromText = (JCObject)retObjectGeographyFromText;
            return new DbFunctionExpression(objGeographyFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromText != null ? retObjectGeographyFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyFromText(DbExpression wellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyFromText = null;
        try {
            retObjectGeographyFromText = classType.Invoke("GeographyFromText", wellKnownText == null ? null : wellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyFromText = (JCObject)retObjectGeographyFromText;
            return new DbFunctionExpression(objGeographyFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromText != null ? retObjectGeographyFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyLineFromBinary(DbExpression lineWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyLineFromBinary = null;
        try {
            retObjectGeographyLineFromBinary = classType.Invoke("GeographyLineFromBinary", lineWellKnownBinaryValue == null ? null : lineWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyLineFromBinary = (JCObject)retObjectGeographyLineFromBinary;
            return new DbFunctionExpression(objGeographyLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyLineFromBinary != null ? retObjectGeographyLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyLineFromText(DbExpression lineWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyLineFromText = null;
        try {
            retObjectGeographyLineFromText = classType.Invoke("GeographyLineFromText", lineWellKnownText == null ? null : lineWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyLineFromText = (JCObject)retObjectGeographyLineFromText;
            return new DbFunctionExpression(objGeographyLineFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyLineFromText != null ? retObjectGeographyLineFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyMultiLineFromBinary(DbExpression multiLineWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyMultiLineFromBinary = null;
        try {
            retObjectGeographyMultiLineFromBinary = classType.Invoke("GeographyMultiLineFromBinary", multiLineWellKnownBinaryValue == null ? null : multiLineWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyMultiLineFromBinary = (JCObject)retObjectGeographyMultiLineFromBinary;
            return new DbFunctionExpression(objGeographyMultiLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiLineFromBinary != null ? retObjectGeographyMultiLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyMultiLineFromText(DbExpression multiLineWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyMultiLineFromText = null;
        try {
            retObjectGeographyMultiLineFromText = classType.Invoke("GeographyMultiLineFromText", multiLineWellKnownText == null ? null : multiLineWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyMultiLineFromText = (JCObject)retObjectGeographyMultiLineFromText;
            return new DbFunctionExpression(objGeographyMultiLineFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiLineFromText != null ? retObjectGeographyMultiLineFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyMultiPointFromBinary(DbExpression multiPointWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyMultiPointFromBinary = null;
        try {
            retObjectGeographyMultiPointFromBinary = classType.Invoke("GeographyMultiPointFromBinary", multiPointWellKnownBinaryValue == null ? null : multiPointWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyMultiPointFromBinary = (JCObject)retObjectGeographyMultiPointFromBinary;
            return new DbFunctionExpression(objGeographyMultiPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiPointFromBinary != null ? retObjectGeographyMultiPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyMultiPointFromText(DbExpression multiPointWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyMultiPointFromText = null;
        try {
            retObjectGeographyMultiPointFromText = classType.Invoke("GeographyMultiPointFromText", multiPointWellKnownText == null ? null : multiPointWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyMultiPointFromText = (JCObject)retObjectGeographyMultiPointFromText;
            return new DbFunctionExpression(objGeographyMultiPointFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiPointFromText != null ? retObjectGeographyMultiPointFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyMultiPolygonFromBinary(DbExpression multiPolygonWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyMultiPolygonFromBinary = null;
        try {
            retObjectGeographyMultiPolygonFromBinary = classType.Invoke("GeographyMultiPolygonFromBinary", multiPolygonWellKnownBinaryValue == null ? null : multiPolygonWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyMultiPolygonFromBinary = (JCObject)retObjectGeographyMultiPolygonFromBinary;
            return new DbFunctionExpression(objGeographyMultiPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiPolygonFromBinary != null ? retObjectGeographyMultiPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyMultiPolygonFromText(DbExpression multiPolygonWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyMultiPolygonFromText = null;
        try {
            retObjectGeographyMultiPolygonFromText = classType.Invoke("GeographyMultiPolygonFromText", multiPolygonWellKnownText == null ? null : multiPolygonWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyMultiPolygonFromText = (JCObject)retObjectGeographyMultiPolygonFromText;
            return new DbFunctionExpression(objGeographyMultiPolygonFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiPolygonFromText != null ? retObjectGeographyMultiPolygonFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyPointFromBinary(DbExpression pointWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyPointFromBinary = null;
        try {
            retObjectGeographyPointFromBinary = classType.Invoke("GeographyPointFromBinary", pointWellKnownBinaryValue == null ? null : pointWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyPointFromBinary = (JCObject)retObjectGeographyPointFromBinary;
            return new DbFunctionExpression(objGeographyPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyPointFromBinary != null ? retObjectGeographyPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyPointFromText(DbExpression pointWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyPointFromText = null;
        try {
            retObjectGeographyPointFromText = classType.Invoke("GeographyPointFromText", pointWellKnownText == null ? null : pointWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyPointFromText = (JCObject)retObjectGeographyPointFromText;
            return new DbFunctionExpression(objGeographyPointFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyPointFromText != null ? retObjectGeographyPointFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyPolygonFromBinary(DbExpression polygonWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyPolygonFromBinary = null;
        try {
            retObjectGeographyPolygonFromBinary = classType.Invoke("GeographyPolygonFromBinary", polygonWellKnownBinaryValue == null ? null : polygonWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyPolygonFromBinary = (JCObject)retObjectGeographyPolygonFromBinary;
            return new DbFunctionExpression(objGeographyPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyPolygonFromBinary != null ? retObjectGeographyPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeographyPolygonFromText(DbExpression polygonWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeographyPolygonFromText = null;
        try {
            retObjectGeographyPolygonFromText = classType.Invoke("GeographyPolygonFromText", polygonWellKnownText == null ? null : polygonWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeographyPolygonFromText = (JCObject)retObjectGeographyPolygonFromText;
            return new DbFunctionExpression(objGeographyPolygonFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyPolygonFromText != null ? retObjectGeographyPolygonFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryCollectionFromBinary(DbExpression geometryCollectionWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryCollectionFromBinary = null;
        try {
            retObjectGeometryCollectionFromBinary = classType.Invoke("GeometryCollectionFromBinary", geometryCollectionWellKnownBinaryValue == null ? null : geometryCollectionWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryCollectionFromBinary = (JCObject)retObjectGeometryCollectionFromBinary;
            return new DbFunctionExpression(objGeometryCollectionFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryCollectionFromBinary != null ? retObjectGeometryCollectionFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryCollectionFromText(DbExpression geometryCollectionWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryCollectionFromText = null;
        try {
            retObjectGeometryCollectionFromText = classType.Invoke("GeometryCollectionFromText", geometryCollectionWellKnownText == null ? null : geometryCollectionWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryCollectionFromText = (JCObject)retObjectGeometryCollectionFromText;
            return new DbFunctionExpression(objGeometryCollectionFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryCollectionFromText != null ? retObjectGeometryCollectionFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryFromBinary(DbExpression wellKnownBinaryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryFromBinary = null;
        try {
            retObjectGeometryFromBinary = classType.Invoke("GeometryFromBinary", wellKnownBinaryValue == null ? null : wellKnownBinaryValue.getJCOInstance());
            JCObject objGeometryFromBinary = (JCObject)retObjectGeometryFromBinary;
            return new DbFunctionExpression(objGeometryFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromBinary != null ? retObjectGeometryFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryFromBinary(DbExpression wellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryFromBinary = null;
        try {
            retObjectGeometryFromBinary = classType.Invoke("GeometryFromBinary", wellKnownBinaryValue == null ? null : wellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryFromBinary = (JCObject)retObjectGeometryFromBinary;
            return new DbFunctionExpression(objGeometryFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromBinary != null ? retObjectGeometryFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryFromGml(DbExpression geometryMarkup) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryFromGml = null;
        try {
            retObjectGeometryFromGml = classType.Invoke("GeometryFromGml", geometryMarkup == null ? null : geometryMarkup.getJCOInstance());
            JCObject objGeometryFromGml = (JCObject)retObjectGeometryFromGml;
            return new DbFunctionExpression(objGeometryFromGml);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromGml != null ? retObjectGeometryFromGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryFromGml(DbExpression geometryMarkup, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryFromGml = null;
        try {
            retObjectGeometryFromGml = classType.Invoke("GeometryFromGml", geometryMarkup == null ? null : geometryMarkup.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryFromGml = (JCObject)retObjectGeometryFromGml;
            return new DbFunctionExpression(objGeometryFromGml);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromGml != null ? retObjectGeometryFromGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryFromText(DbExpression wellKnownText) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryFromText = null;
        try {
            retObjectGeometryFromText = classType.Invoke("GeometryFromText", wellKnownText == null ? null : wellKnownText.getJCOInstance());
            JCObject objGeometryFromText = (JCObject)retObjectGeometryFromText;
            return new DbFunctionExpression(objGeometryFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromText != null ? retObjectGeometryFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryFromText(DbExpression wellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryFromText = null;
        try {
            retObjectGeometryFromText = classType.Invoke("GeometryFromText", wellKnownText == null ? null : wellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryFromText = (JCObject)retObjectGeometryFromText;
            return new DbFunctionExpression(objGeometryFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromText != null ? retObjectGeometryFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryLineFromBinary(DbExpression lineWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryLineFromBinary = null;
        try {
            retObjectGeometryLineFromBinary = classType.Invoke("GeometryLineFromBinary", lineWellKnownBinaryValue == null ? null : lineWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryLineFromBinary = (JCObject)retObjectGeometryLineFromBinary;
            return new DbFunctionExpression(objGeometryLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryLineFromBinary != null ? retObjectGeometryLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryLineFromText(DbExpression lineWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryLineFromText = null;
        try {
            retObjectGeometryLineFromText = classType.Invoke("GeometryLineFromText", lineWellKnownText == null ? null : lineWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryLineFromText = (JCObject)retObjectGeometryLineFromText;
            return new DbFunctionExpression(objGeometryLineFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryLineFromText != null ? retObjectGeometryLineFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryMultiLineFromBinary(DbExpression multiLineWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryMultiLineFromBinary = null;
        try {
            retObjectGeometryMultiLineFromBinary = classType.Invoke("GeometryMultiLineFromBinary", multiLineWellKnownBinaryValue == null ? null : multiLineWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryMultiLineFromBinary = (JCObject)retObjectGeometryMultiLineFromBinary;
            return new DbFunctionExpression(objGeometryMultiLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiLineFromBinary != null ? retObjectGeometryMultiLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryMultiLineFromText(DbExpression multiLineWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryMultiLineFromText = null;
        try {
            retObjectGeometryMultiLineFromText = classType.Invoke("GeometryMultiLineFromText", multiLineWellKnownText == null ? null : multiLineWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryMultiLineFromText = (JCObject)retObjectGeometryMultiLineFromText;
            return new DbFunctionExpression(objGeometryMultiLineFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiLineFromText != null ? retObjectGeometryMultiLineFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryMultiPointFromBinary(DbExpression multiPointWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryMultiPointFromBinary = null;
        try {
            retObjectGeometryMultiPointFromBinary = classType.Invoke("GeometryMultiPointFromBinary", multiPointWellKnownBinaryValue == null ? null : multiPointWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryMultiPointFromBinary = (JCObject)retObjectGeometryMultiPointFromBinary;
            return new DbFunctionExpression(objGeometryMultiPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiPointFromBinary != null ? retObjectGeometryMultiPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryMultiPointFromText(DbExpression multiPointWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryMultiPointFromText = null;
        try {
            retObjectGeometryMultiPointFromText = classType.Invoke("GeometryMultiPointFromText", multiPointWellKnownText == null ? null : multiPointWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryMultiPointFromText = (JCObject)retObjectGeometryMultiPointFromText;
            return new DbFunctionExpression(objGeometryMultiPointFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiPointFromText != null ? retObjectGeometryMultiPointFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryMultiPolygonFromBinary(DbExpression multiPolygonWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryMultiPolygonFromBinary = null;
        try {
            retObjectGeometryMultiPolygonFromBinary = classType.Invoke("GeometryMultiPolygonFromBinary", multiPolygonWellKnownBinaryValue == null ? null : multiPolygonWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryMultiPolygonFromBinary = (JCObject)retObjectGeometryMultiPolygonFromBinary;
            return new DbFunctionExpression(objGeometryMultiPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiPolygonFromBinary != null ? retObjectGeometryMultiPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryMultiPolygonFromText(DbExpression multiPolygonWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryMultiPolygonFromText = null;
        try {
            retObjectGeometryMultiPolygonFromText = classType.Invoke("GeometryMultiPolygonFromText", multiPolygonWellKnownText == null ? null : multiPolygonWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryMultiPolygonFromText = (JCObject)retObjectGeometryMultiPolygonFromText;
            return new DbFunctionExpression(objGeometryMultiPolygonFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiPolygonFromText != null ? retObjectGeometryMultiPolygonFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryPointFromBinary(DbExpression pointWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryPointFromBinary = null;
        try {
            retObjectGeometryPointFromBinary = classType.Invoke("GeometryPointFromBinary", pointWellKnownBinaryValue == null ? null : pointWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryPointFromBinary = (JCObject)retObjectGeometryPointFromBinary;
            return new DbFunctionExpression(objGeometryPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryPointFromBinary != null ? retObjectGeometryPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryPointFromText(DbExpression pointWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryPointFromText = null;
        try {
            retObjectGeometryPointFromText = classType.Invoke("GeometryPointFromText", pointWellKnownText == null ? null : pointWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryPointFromText = (JCObject)retObjectGeometryPointFromText;
            return new DbFunctionExpression(objGeometryPointFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryPointFromText != null ? retObjectGeometryPointFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryPolygonFromBinary(DbExpression polygonWellKnownBinaryValue, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryPolygonFromBinary = null;
        try {
            retObjectGeometryPolygonFromBinary = classType.Invoke("GeometryPolygonFromBinary", polygonWellKnownBinaryValue == null ? null : polygonWellKnownBinaryValue.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryPolygonFromBinary = (JCObject)retObjectGeometryPolygonFromBinary;
            return new DbFunctionExpression(objGeometryPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryPolygonFromBinary != null ? retObjectGeometryPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression GeometryPolygonFromText(DbExpression polygonWellKnownText, DbExpression coordinateSystemId) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGeometryPolygonFromText = null;
        try {
            retObjectGeometryPolygonFromText = classType.Invoke("GeometryPolygonFromText", polygonWellKnownText == null ? null : polygonWellKnownText.getJCOInstance(), coordinateSystemId == null ? null : coordinateSystemId.getJCOInstance());
            JCObject objGeometryPolygonFromText = (JCObject)retObjectGeometryPolygonFromText;
            return new DbFunctionExpression(objGeometryPolygonFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryPolygonFromText != null ? retObjectGeometryPolygonFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression InteriorRingAt(DbExpression geometryValue, DbExpression indexValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInteriorRingAt = null;
        try {
            retObjectInteriorRingAt = classType.Invoke("InteriorRingAt", geometryValue == null ? null : geometryValue.getJCOInstance(), indexValue == null ? null : indexValue.getJCOInstance());
            JCObject objInteriorRingAt = (JCObject)retObjectInteriorRingAt;
            return new DbFunctionExpression(objInteriorRingAt);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInteriorRingAt != null ? retObjectInteriorRingAt.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression InteriorRingCount(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectInteriorRingCount = null;
        try {
            retObjectInteriorRingCount = classType.Invoke("InteriorRingCount", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objInteriorRingCount = (JCObject)retObjectInteriorRingCount;
            return new DbFunctionExpression(objInteriorRingCount);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInteriorRingCount != null ? retObjectInteriorRingCount.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression IsClosedSpatial(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsClosedSpatial = null;
        try {
            retObjectIsClosedSpatial = classType.Invoke("IsClosedSpatial", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objIsClosedSpatial = (JCObject)retObjectIsClosedSpatial;
            return new DbFunctionExpression(objIsClosedSpatial);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsClosedSpatial != null ? retObjectIsClosedSpatial.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression IsEmptySpatial(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsEmptySpatial = null;
        try {
            retObjectIsEmptySpatial = classType.Invoke("IsEmptySpatial", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objIsEmptySpatial = (JCObject)retObjectIsEmptySpatial;
            return new DbFunctionExpression(objIsEmptySpatial);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsEmptySpatial != null ? retObjectIsEmptySpatial.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression IsRing(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsRing = null;
        try {
            retObjectIsRing = classType.Invoke("IsRing", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objIsRing = (JCObject)retObjectIsRing;
            return new DbFunctionExpression(objIsRing);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsRing != null ? retObjectIsRing.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression IsSimpleGeometry(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsSimpleGeometry = null;
        try {
            retObjectIsSimpleGeometry = classType.Invoke("IsSimpleGeometry", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objIsSimpleGeometry = (JCObject)retObjectIsSimpleGeometry;
            return new DbFunctionExpression(objIsSimpleGeometry);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsSimpleGeometry != null ? retObjectIsSimpleGeometry.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression IsValidGeometry(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsValidGeometry = null;
        try {
            retObjectIsValidGeometry = classType.Invoke("IsValidGeometry", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objIsValidGeometry = (JCObject)retObjectIsValidGeometry;
            return new DbFunctionExpression(objIsValidGeometry);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsValidGeometry != null ? retObjectIsValidGeometry.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression Latitude(DbExpression geographyValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectLatitude = null;
        try {
            retObjectLatitude = classType.Invoke("Latitude", geographyValue == null ? null : geographyValue.getJCOInstance());
            JCObject objLatitude = (JCObject)retObjectLatitude;
            return new DbFunctionExpression(objLatitude);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectLatitude != null ? retObjectLatitude.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression Longitude(DbExpression geographyValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectLongitude = null;
        try {
            retObjectLongitude = classType.Invoke("Longitude", geographyValue == null ? null : geographyValue.getJCOInstance());
            JCObject objLongitude = (JCObject)retObjectLongitude;
            return new DbFunctionExpression(objLongitude);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectLongitude != null ? retObjectLongitude.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression Measure(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMeasure = null;
        try {
            retObjectMeasure = classType.Invoke("Measure", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objMeasure = (JCObject)retObjectMeasure;
            return new DbFunctionExpression(objMeasure);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMeasure != null ? retObjectMeasure.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression PointAt(DbExpression spatialValue, DbExpression indexValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPointAt = null;
        try {
            retObjectPointAt = classType.Invoke("PointAt", spatialValue == null ? null : spatialValue.getJCOInstance(), indexValue == null ? null : indexValue.getJCOInstance());
            JCObject objPointAt = (JCObject)retObjectPointAt;
            return new DbFunctionExpression(objPointAt);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPointAt != null ? retObjectPointAt.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression PointCount(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPointCount = null;
        try {
            retObjectPointCount = classType.Invoke("PointCount", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objPointCount = (JCObject)retObjectPointCount;
            return new DbFunctionExpression(objPointCount);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPointCount != null ? retObjectPointCount.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression PointOnSurface(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPointOnSurface = null;
        try {
            retObjectPointOnSurface = classType.Invoke("PointOnSurface", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objPointOnSurface = (JCObject)retObjectPointOnSurface;
            return new DbFunctionExpression(objPointOnSurface);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPointOnSurface != null ? retObjectPointOnSurface.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialBoundary(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialBoundary = null;
        try {
            retObjectSpatialBoundary = classType.Invoke("SpatialBoundary", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objSpatialBoundary = (JCObject)retObjectSpatialBoundary;
            return new DbFunctionExpression(objSpatialBoundary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialBoundary != null ? retObjectSpatialBoundary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialBuffer(DbExpression spatialValue, DbExpression distance) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialBuffer = null;
        try {
            retObjectSpatialBuffer = classType.Invoke("SpatialBuffer", spatialValue == null ? null : spatialValue.getJCOInstance(), distance == null ? null : distance.getJCOInstance());
            JCObject objSpatialBuffer = (JCObject)retObjectSpatialBuffer;
            return new DbFunctionExpression(objSpatialBuffer);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialBuffer != null ? retObjectSpatialBuffer.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialContains(DbExpression geometryValue1, DbExpression geometryValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialContains = null;
        try {
            retObjectSpatialContains = classType.Invoke("SpatialContains", geometryValue1 == null ? null : geometryValue1.getJCOInstance(), geometryValue2 == null ? null : geometryValue2.getJCOInstance());
            JCObject objSpatialContains = (JCObject)retObjectSpatialContains;
            return new DbFunctionExpression(objSpatialContains);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialContains != null ? retObjectSpatialContains.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialConvexHull(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialConvexHull = null;
        try {
            retObjectSpatialConvexHull = classType.Invoke("SpatialConvexHull", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objSpatialConvexHull = (JCObject)retObjectSpatialConvexHull;
            return new DbFunctionExpression(objSpatialConvexHull);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialConvexHull != null ? retObjectSpatialConvexHull.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialCrosses(DbExpression geometryValue1, DbExpression geometryValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialCrosses = null;
        try {
            retObjectSpatialCrosses = classType.Invoke("SpatialCrosses", geometryValue1 == null ? null : geometryValue1.getJCOInstance(), geometryValue2 == null ? null : geometryValue2.getJCOInstance());
            JCObject objSpatialCrosses = (JCObject)retObjectSpatialCrosses;
            return new DbFunctionExpression(objSpatialCrosses);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialCrosses != null ? retObjectSpatialCrosses.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialDifference(DbExpression spatialValue1, DbExpression spatialValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialDifference = null;
        try {
            retObjectSpatialDifference = classType.Invoke("SpatialDifference", spatialValue1 == null ? null : spatialValue1.getJCOInstance(), spatialValue2 == null ? null : spatialValue2.getJCOInstance());
            JCObject objSpatialDifference = (JCObject)retObjectSpatialDifference;
            return new DbFunctionExpression(objSpatialDifference);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialDifference != null ? retObjectSpatialDifference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialDimension(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialDimension = null;
        try {
            retObjectSpatialDimension = classType.Invoke("SpatialDimension", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objSpatialDimension = (JCObject)retObjectSpatialDimension;
            return new DbFunctionExpression(objSpatialDimension);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialDimension != null ? retObjectSpatialDimension.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialDisjoint(DbExpression spatialValue1, DbExpression spatialValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialDisjoint = null;
        try {
            retObjectSpatialDisjoint = classType.Invoke("SpatialDisjoint", spatialValue1 == null ? null : spatialValue1.getJCOInstance(), spatialValue2 == null ? null : spatialValue2.getJCOInstance());
            JCObject objSpatialDisjoint = (JCObject)retObjectSpatialDisjoint;
            return new DbFunctionExpression(objSpatialDisjoint);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialDisjoint != null ? retObjectSpatialDisjoint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialElementAt(DbExpression spatialValue, DbExpression indexValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialElementAt = null;
        try {
            retObjectSpatialElementAt = classType.Invoke("SpatialElementAt", spatialValue == null ? null : spatialValue.getJCOInstance(), indexValue == null ? null : indexValue.getJCOInstance());
            JCObject objSpatialElementAt = (JCObject)retObjectSpatialElementAt;
            return new DbFunctionExpression(objSpatialElementAt);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialElementAt != null ? retObjectSpatialElementAt.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialElementCount(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialElementCount = null;
        try {
            retObjectSpatialElementCount = classType.Invoke("SpatialElementCount", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objSpatialElementCount = (JCObject)retObjectSpatialElementCount;
            return new DbFunctionExpression(objSpatialElementCount);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialElementCount != null ? retObjectSpatialElementCount.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialEnvelope(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialEnvelope = null;
        try {
            retObjectSpatialEnvelope = classType.Invoke("SpatialEnvelope", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objSpatialEnvelope = (JCObject)retObjectSpatialEnvelope;
            return new DbFunctionExpression(objSpatialEnvelope);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialEnvelope != null ? retObjectSpatialEnvelope.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialEquals(DbExpression spatialValue1, DbExpression spatialValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialEquals = null;
        try {
            retObjectSpatialEquals = classType.Invoke("SpatialEquals", spatialValue1 == null ? null : spatialValue1.getJCOInstance(), spatialValue2 == null ? null : spatialValue2.getJCOInstance());
            JCObject objSpatialEquals = (JCObject)retObjectSpatialEquals;
            return new DbFunctionExpression(objSpatialEquals);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialEquals != null ? retObjectSpatialEquals.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialIntersection(DbExpression spatialValue1, DbExpression spatialValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialIntersection = null;
        try {
            retObjectSpatialIntersection = classType.Invoke("SpatialIntersection", spatialValue1 == null ? null : spatialValue1.getJCOInstance(), spatialValue2 == null ? null : spatialValue2.getJCOInstance());
            JCObject objSpatialIntersection = (JCObject)retObjectSpatialIntersection;
            return new DbFunctionExpression(objSpatialIntersection);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialIntersection != null ? retObjectSpatialIntersection.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialIntersects(DbExpression spatialValue1, DbExpression spatialValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialIntersects = null;
        try {
            retObjectSpatialIntersects = classType.Invoke("SpatialIntersects", spatialValue1 == null ? null : spatialValue1.getJCOInstance(), spatialValue2 == null ? null : spatialValue2.getJCOInstance());
            JCObject objSpatialIntersects = (JCObject)retObjectSpatialIntersects;
            return new DbFunctionExpression(objSpatialIntersects);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialIntersects != null ? retObjectSpatialIntersects.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialLength(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialLength = null;
        try {
            retObjectSpatialLength = classType.Invoke("SpatialLength", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objSpatialLength = (JCObject)retObjectSpatialLength;
            return new DbFunctionExpression(objSpatialLength);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialLength != null ? retObjectSpatialLength.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialOverlaps(DbExpression geometryValue1, DbExpression geometryValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialOverlaps = null;
        try {
            retObjectSpatialOverlaps = classType.Invoke("SpatialOverlaps", geometryValue1 == null ? null : geometryValue1.getJCOInstance(), geometryValue2 == null ? null : geometryValue2.getJCOInstance());
            JCObject objSpatialOverlaps = (JCObject)retObjectSpatialOverlaps;
            return new DbFunctionExpression(objSpatialOverlaps);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialOverlaps != null ? retObjectSpatialOverlaps.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialRelate(DbExpression geometryValue1, DbExpression geometryValue2, DbExpression intersectionPatternMatrix) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialRelate = null;
        try {
            retObjectSpatialRelate = classType.Invoke("SpatialRelate", geometryValue1 == null ? null : geometryValue1.getJCOInstance(), geometryValue2 == null ? null : geometryValue2.getJCOInstance(), intersectionPatternMatrix == null ? null : intersectionPatternMatrix.getJCOInstance());
            JCObject objSpatialRelate = (JCObject)retObjectSpatialRelate;
            return new DbFunctionExpression(objSpatialRelate);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialRelate != null ? retObjectSpatialRelate.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialSymmetricDifference(DbExpression spatialValue1, DbExpression spatialValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialSymmetricDifference = null;
        try {
            retObjectSpatialSymmetricDifference = classType.Invoke("SpatialSymmetricDifference", spatialValue1 == null ? null : spatialValue1.getJCOInstance(), spatialValue2 == null ? null : spatialValue2.getJCOInstance());
            JCObject objSpatialSymmetricDifference = (JCObject)retObjectSpatialSymmetricDifference;
            return new DbFunctionExpression(objSpatialSymmetricDifference);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialSymmetricDifference != null ? retObjectSpatialSymmetricDifference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialTouches(DbExpression geometryValue1, DbExpression geometryValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialTouches = null;
        try {
            retObjectSpatialTouches = classType.Invoke("SpatialTouches", geometryValue1 == null ? null : geometryValue1.getJCOInstance(), geometryValue2 == null ? null : geometryValue2.getJCOInstance());
            JCObject objSpatialTouches = (JCObject)retObjectSpatialTouches;
            return new DbFunctionExpression(objSpatialTouches);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialTouches != null ? retObjectSpatialTouches.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialTypeName(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialTypeName = null;
        try {
            retObjectSpatialTypeName = classType.Invoke("SpatialTypeName", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objSpatialTypeName = (JCObject)retObjectSpatialTypeName;
            return new DbFunctionExpression(objSpatialTypeName);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialTypeName != null ? retObjectSpatialTypeName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialUnion(DbExpression spatialValue1, DbExpression spatialValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialUnion = null;
        try {
            retObjectSpatialUnion = classType.Invoke("SpatialUnion", spatialValue1 == null ? null : spatialValue1.getJCOInstance(), spatialValue2 == null ? null : spatialValue2.getJCOInstance());
            JCObject objSpatialUnion = (JCObject)retObjectSpatialUnion;
            return new DbFunctionExpression(objSpatialUnion);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialUnion != null ? retObjectSpatialUnion.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression SpatialWithin(DbExpression geometryValue1, DbExpression geometryValue2) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSpatialWithin = null;
        try {
            retObjectSpatialWithin = classType.Invoke("SpatialWithin", geometryValue1 == null ? null : geometryValue1.getJCOInstance(), geometryValue2 == null ? null : geometryValue2.getJCOInstance());
            JCObject objSpatialWithin = (JCObject)retObjectSpatialWithin;
            return new DbFunctionExpression(objSpatialWithin);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSpatialWithin != null ? retObjectSpatialWithin.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression StartPoint(DbExpression spatialValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStartPoint = null;
        try {
            retObjectStartPoint = classType.Invoke("StartPoint", spatialValue == null ? null : spatialValue.getJCOInstance());
            JCObject objStartPoint = (JCObject)retObjectStartPoint;
            return new DbFunctionExpression(objStartPoint);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStartPoint != null ? retObjectStartPoint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression XCoordinate(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectXCoordinate = null;
        try {
            retObjectXCoordinate = classType.Invoke("XCoordinate", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objXCoordinate = (JCObject)retObjectXCoordinate;
            return new DbFunctionExpression(objXCoordinate);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectXCoordinate != null ? retObjectXCoordinate.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DbFunctionExpression YCoordinate(DbExpression geometryValue) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.data.EntitySqlException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectYCoordinate = null;
        try {
            retObjectYCoordinate = classType.Invoke("YCoordinate", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objYCoordinate = (JCObject)retObjectYCoordinate;
            return new DbFunctionExpression(objYCoordinate);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectYCoordinate != null ? retObjectYCoordinate.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    


    // Instance Events section
    

}