/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.data.spatial;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.data.spatial.DbGeometry;
import system.data.spatial.DbGeography;
import system.data.spatial.DbGeographyWellKnownValue;
import system.data.spatial.DbGeometryWellKnownValue;
import system.data.spatial.DbSpatialServices;


/**
 * The base .NET class managing System.Data.Spatial.DbSpatialServices, System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Data.Spatial.DbSpatialServices" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Data.Spatial.DbSpatialServices</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class DbSpatialServices extends NetObject  {
    /**
     * Fully assembly qualified name: System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
     */
    public static final String assemblyFullName = "System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089";
    /**
     * Assembly name: System.Data.Entity
     */
    public static final String assemblyShortName = "System.Data.Entity";
    /**
     * Qualified class name: System.Data.Spatial.DbSpatialServices
     */
    public static final String className = "System.Data.Spatial.DbSpatialServices";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public DbSpatialServices(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link DbSpatialServices}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link DbSpatialServices} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static DbSpatialServices cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new DbSpatialServices(from.getJCOInstance());
    }

    // Constructors section
    
    public DbSpatialServices() throws Throwable {
    }

    
    // Methods section
    
    public boolean Contains(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectContains = null;
        try {
            retObjectContains = classInstance.Invoke("Contains", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            return (boolean)retObjectContains;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectContains != null ? retObjectContains.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean Crosses(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectCrosses = null;
        try {
            retObjectCrosses = classInstance.Invoke("Crosses", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            return (boolean)retObjectCrosses;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectCrosses != null ? retObjectCrosses.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean Disjoint(DbGeography geographyValue, DbGeography otherGeography) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDisjoint = null;
        try {
            retObjectDisjoint = classInstance.Invoke("Disjoint", geographyValue == null ? null : geographyValue.getJCOInstance(), otherGeography == null ? null : otherGeography.getJCOInstance());
            return (boolean)retObjectDisjoint;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectDisjoint != null ? retObjectDisjoint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean Disjoint(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDisjoint = null;
        try {
            retObjectDisjoint = classInstance.Invoke("Disjoint", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            return (boolean)retObjectDisjoint;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectDisjoint != null ? retObjectDisjoint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean GetIsEmpty(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetIsEmpty = null;
        try {
            retObjectGetIsEmpty = classInstance.Invoke("GetIsEmpty", geographyValue == null ? null : geographyValue.getJCOInstance());
            return (boolean)retObjectGetIsEmpty;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectGetIsEmpty != null ? retObjectGetIsEmpty.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean GetIsEmpty(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetIsEmpty = null;
        try {
            retObjectGetIsEmpty = classInstance.Invoke("GetIsEmpty", geometryValue == null ? null : geometryValue.getJCOInstance());
            return (boolean)retObjectGetIsEmpty;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectGetIsEmpty != null ? retObjectGetIsEmpty.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean GetIsSimple(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetIsSimple = null;
        try {
            retObjectGetIsSimple = classInstance.Invoke("GetIsSimple", geometryValue == null ? null : geometryValue.getJCOInstance());
            return (boolean)retObjectGetIsSimple;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectGetIsSimple != null ? retObjectGetIsSimple.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean GetIsValid(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetIsValid = null;
        try {
            retObjectGetIsValid = classInstance.Invoke("GetIsValid", geometryValue == null ? null : geometryValue.getJCOInstance());
            return (boolean)retObjectGetIsValid;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectGetIsValid != null ? retObjectGetIsValid.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean Intersects(DbGeography geographyValue, DbGeography otherGeography) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectIntersects = null;
        try {
            retObjectIntersects = classInstance.Invoke("Intersects", geographyValue == null ? null : geographyValue.getJCOInstance(), otherGeography == null ? null : otherGeography.getJCOInstance());
            return (boolean)retObjectIntersects;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectIntersects != null ? retObjectIntersects.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean Intersects(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectIntersects = null;
        try {
            retObjectIntersects = classInstance.Invoke("Intersects", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            return (boolean)retObjectIntersects;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectIntersects != null ? retObjectIntersects.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean Overlaps(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectOverlaps = null;
        try {
            retObjectOverlaps = classInstance.Invoke("Overlaps", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            return (boolean)retObjectOverlaps;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectOverlaps != null ? retObjectOverlaps.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean Relate(DbGeometry geometryValue, DbGeometry otherGeometry, java.lang.String matrix) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectRelate = null;
        try {
            retObjectRelate = classInstance.Invoke("Relate", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance(), matrix);
            return (boolean)retObjectRelate;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectRelate != null ? retObjectRelate.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SpatialEquals(DbGeography geographyValue, DbGeography otherGeography) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSpatialEquals = null;
        try {
            retObjectSpatialEquals = classInstance.Invoke("SpatialEquals", geographyValue == null ? null : geographyValue.getJCOInstance(), otherGeography == null ? null : otherGeography.getJCOInstance());
            return (boolean)retObjectSpatialEquals;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSpatialEquals != null ? retObjectSpatialEquals.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean SpatialEquals(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSpatialEquals = null;
        try {
            retObjectSpatialEquals = classInstance.Invoke("SpatialEquals", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            return (boolean)retObjectSpatialEquals;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectSpatialEquals != null ? retObjectSpatialEquals.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean Touches(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectTouches = null;
        try {
            retObjectTouches = classInstance.Invoke("Touches", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            return (boolean)retObjectTouches;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectTouches != null ? retObjectTouches.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean Within(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectWithin = null;
        try {
            retObjectWithin = classInstance.Invoke("Within", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            return (boolean)retObjectWithin;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectWithin != null ? retObjectWithin.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public byte[] AsBinary(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAsBinary = null;
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            retObjectAsBinary = classInstance.Invoke("AsBinary", geographyValue == null ? null : geographyValue.getJCOInstance());
            JCObject resultingObjects = (JCObject)retObjectAsBinary;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            byte[] resultingArray = new byte[resultingArrayList.size()];
            for(int indexAsBinary = 0; indexAsBinary < resultingArrayList.size(); indexAsBinary++ ) {
				resultingArray[indexAsBinary] = (byte)resultingArrayList.get(indexAsBinary);
            }
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into byte", retObjectAsBinary != null ? retObjectAsBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public byte[] AsBinary(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAsBinary = null;
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            retObjectAsBinary = classInstance.Invoke("AsBinary", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject resultingObjects = (JCObject)retObjectAsBinary;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            byte[] resultingArray = new byte[resultingArrayList.size()];
            for(int indexAsBinary = 0; indexAsBinary < resultingArrayList.size(); indexAsBinary++ ) {
				resultingArray[indexAsBinary] = (byte)resultingArrayList.get(indexAsBinary);
            }
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into byte", retObjectAsBinary != null ? retObjectAsBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public double Distance(DbGeography geographyValue, DbGeography otherGeography) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDistance = null;
        try {
            retObjectDistance = classInstance.Invoke("Distance", geographyValue == null ? null : geographyValue.getJCOInstance(), otherGeography == null ? null : otherGeography.getJCOInstance());
            return (double)retObjectDistance;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectDistanceNumber = (java.lang.Number)retObjectDistance;
                return retObjectDistanceNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into double and, as fallback solution, into java.lang.Number", retObjectDistance != null ? retObjectDistance.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public double Distance(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDistance = null;
        try {
            retObjectDistance = classInstance.Invoke("Distance", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            return (double)retObjectDistance;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectDistanceNumber = (java.lang.Number)retObjectDistance;
                return retObjectDistanceNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into double and, as fallback solution, into java.lang.Number", retObjectDistance != null ? retObjectDistance.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetCoordinateSystemId(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetCoordinateSystemId = null;
        try {
            retObjectGetCoordinateSystemId = classInstance.Invoke("GetCoordinateSystemId", geographyValue == null ? null : geographyValue.getJCOInstance());
            return (int)retObjectGetCoordinateSystemId;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetCoordinateSystemIdNumber = (java.lang.Number)retObjectGetCoordinateSystemId;
                return retObjectGetCoordinateSystemIdNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetCoordinateSystemId != null ? retObjectGetCoordinateSystemId.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetCoordinateSystemId(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetCoordinateSystemId = null;
        try {
            retObjectGetCoordinateSystemId = classInstance.Invoke("GetCoordinateSystemId", geometryValue == null ? null : geometryValue.getJCOInstance());
            return (int)retObjectGetCoordinateSystemId;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetCoordinateSystemIdNumber = (java.lang.Number)retObjectGetCoordinateSystemId;
                return retObjectGetCoordinateSystemIdNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetCoordinateSystemId != null ? retObjectGetCoordinateSystemId.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetDimension(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetDimension = null;
        try {
            retObjectGetDimension = classInstance.Invoke("GetDimension", geographyValue == null ? null : geographyValue.getJCOInstance());
            return (int)retObjectGetDimension;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetDimensionNumber = (java.lang.Number)retObjectGetDimension;
                return retObjectGetDimensionNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetDimension != null ? retObjectGetDimension.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetDimension(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetDimension = null;
        try {
            retObjectGetDimension = classInstance.Invoke("GetDimension", geometryValue == null ? null : geometryValue.getJCOInstance());
            return (int)retObjectGetDimension;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetDimensionNumber = (java.lang.Number)retObjectGetDimension;
                return retObjectGetDimensionNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetDimension != null ? retObjectGetDimension.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography Buffer(DbGeography geographyValue, double distance) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectBuffer = null;
        try {
            retObjectBuffer = classInstance.Invoke("Buffer", geographyValue == null ? null : geographyValue.getJCOInstance(), distance);
            JCObject objBuffer = (JCObject)retObjectBuffer;
            return new DbGeography(objBuffer);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBuffer != null ? retObjectBuffer.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography Difference(DbGeography geographyValue, DbGeography otherGeography) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDifference = null;
        try {
            retObjectDifference = classInstance.Invoke("Difference", geographyValue == null ? null : geographyValue.getJCOInstance(), otherGeography == null ? null : otherGeography.getJCOInstance());
            JCObject objDifference = (JCObject)retObjectDifference;
            return new DbGeography(objDifference);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDifference != null ? retObjectDifference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography ElementAt(DbGeography geographyValue, int index) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectElementAt = null;
        try {
            retObjectElementAt = classInstance.Invoke("ElementAt", geographyValue == null ? null : geographyValue.getJCOInstance(), index);
            JCObject objElementAt = (JCObject)retObjectElementAt;
            return new DbGeography(objElementAt);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectElementAt != null ? retObjectElementAt.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyCollectionFromBinary(byte[] geographyCollectionWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyCollectionFromBinary = null;
        try {
            retObjectGeographyCollectionFromBinary = classInstance.Invoke("GeographyCollectionFromBinary", geographyCollectionWellKnownBinary, coordinateSystemId);
            JCObject objGeographyCollectionFromBinary = (JCObject)retObjectGeographyCollectionFromBinary;
            return new DbGeography(objGeographyCollectionFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyCollectionFromBinary != null ? retObjectGeographyCollectionFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyCollectionFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyCollectionFromBinary = null;
        try {
            retObjectGeographyCollectionFromBinary = classInstance.Invoke("GeographyCollectionFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeographyCollectionFromBinary = (JCObject)retObjectGeographyCollectionFromBinary;
            return new DbGeography(objGeographyCollectionFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyCollectionFromBinary != null ? retObjectGeographyCollectionFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyCollectionFromText(java.lang.String geographyCollectionWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyCollectionFromText = null;
        try {
            retObjectGeographyCollectionFromText = classInstance.Invoke("GeographyCollectionFromText", geographyCollectionWellKnownText, coordinateSystemId);
            JCObject objGeographyCollectionFromText = (JCObject)retObjectGeographyCollectionFromText;
            return new DbGeography(objGeographyCollectionFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyCollectionFromText != null ? retObjectGeographyCollectionFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyFromBinary(byte[] wellKnownBinary) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyFromBinary = null;
        try {
            retObjectGeographyFromBinary = classInstance.Invoke("GeographyFromBinary", (java.lang.Object)wellKnownBinary);
            JCObject objGeographyFromBinary = (JCObject)retObjectGeographyFromBinary;
            return new DbGeography(objGeographyFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromBinary != null ? retObjectGeographyFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyFromBinary(JCORefOut dupParam0) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyFromBinary = null;
        try {
            retObjectGeographyFromBinary = classInstance.Invoke("GeographyFromBinary", (java.lang.Object)dupParam0.getJCRefOut());
            JCObject objGeographyFromBinary = (JCObject)retObjectGeographyFromBinary;
            return new DbGeography(objGeographyFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromBinary != null ? retObjectGeographyFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyFromBinary(byte[] wellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyFromBinary = null;
        try {
            retObjectGeographyFromBinary = classInstance.Invoke("GeographyFromBinary", wellKnownBinary, coordinateSystemId);
            JCObject objGeographyFromBinary = (JCObject)retObjectGeographyFromBinary;
            return new DbGeography(objGeographyFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromBinary != null ? retObjectGeographyFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyFromBinary = null;
        try {
            retObjectGeographyFromBinary = classInstance.Invoke("GeographyFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeographyFromBinary = (JCObject)retObjectGeographyFromBinary;
            return new DbGeography(objGeographyFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromBinary != null ? retObjectGeographyFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyFromGml(java.lang.String geographyMarkup) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyFromGml = null;
        try {
            retObjectGeographyFromGml = classInstance.Invoke("GeographyFromGml", geographyMarkup);
            JCObject objGeographyFromGml = (JCObject)retObjectGeographyFromGml;
            return new DbGeography(objGeographyFromGml);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromGml != null ? retObjectGeographyFromGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyFromGml(java.lang.String geographyMarkup, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyFromGml = null;
        try {
            retObjectGeographyFromGml = classInstance.Invoke("GeographyFromGml", geographyMarkup, coordinateSystemId);
            JCObject objGeographyFromGml = (JCObject)retObjectGeographyFromGml;
            return new DbGeography(objGeographyFromGml);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromGml != null ? retObjectGeographyFromGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyFromProviderValue(NetObject providerValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyFromProviderValue = null;
        try {
            retObjectGeographyFromProviderValue = classInstance.Invoke("GeographyFromProviderValue", providerValue == null ? null : providerValue.getJCOInstance());
            JCObject objGeographyFromProviderValue = (JCObject)retObjectGeographyFromProviderValue;
            return new DbGeography(objGeographyFromProviderValue);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromProviderValue != null ? retObjectGeographyFromProviderValue.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyFromText(java.lang.String wellKnownText) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyFromText = null;
        try {
            retObjectGeographyFromText = classInstance.Invoke("GeographyFromText", wellKnownText);
            JCObject objGeographyFromText = (JCObject)retObjectGeographyFromText;
            return new DbGeography(objGeographyFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromText != null ? retObjectGeographyFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyFromText(java.lang.String wellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyFromText = null;
        try {
            retObjectGeographyFromText = classInstance.Invoke("GeographyFromText", wellKnownText, coordinateSystemId);
            JCObject objGeographyFromText = (JCObject)retObjectGeographyFromText;
            return new DbGeography(objGeographyFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyFromText != null ? retObjectGeographyFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyLineFromBinary(byte[] lineWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyLineFromBinary = null;
        try {
            retObjectGeographyLineFromBinary = classInstance.Invoke("GeographyLineFromBinary", lineWellKnownBinary, coordinateSystemId);
            JCObject objGeographyLineFromBinary = (JCObject)retObjectGeographyLineFromBinary;
            return new DbGeography(objGeographyLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyLineFromBinary != null ? retObjectGeographyLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyLineFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyLineFromBinary = null;
        try {
            retObjectGeographyLineFromBinary = classInstance.Invoke("GeographyLineFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeographyLineFromBinary = (JCObject)retObjectGeographyLineFromBinary;
            return new DbGeography(objGeographyLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyLineFromBinary != null ? retObjectGeographyLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyLineFromText(java.lang.String lineWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyLineFromText = null;
        try {
            retObjectGeographyLineFromText = classInstance.Invoke("GeographyLineFromText", lineWellKnownText, coordinateSystemId);
            JCObject objGeographyLineFromText = (JCObject)retObjectGeographyLineFromText;
            return new DbGeography(objGeographyLineFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyLineFromText != null ? retObjectGeographyLineFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyMultiLineFromBinary(byte[] multiLineWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyMultiLineFromBinary = null;
        try {
            retObjectGeographyMultiLineFromBinary = classInstance.Invoke("GeographyMultiLineFromBinary", multiLineWellKnownBinary, coordinateSystemId);
            JCObject objGeographyMultiLineFromBinary = (JCObject)retObjectGeographyMultiLineFromBinary;
            return new DbGeography(objGeographyMultiLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiLineFromBinary != null ? retObjectGeographyMultiLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyMultiLineFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyMultiLineFromBinary = null;
        try {
            retObjectGeographyMultiLineFromBinary = classInstance.Invoke("GeographyMultiLineFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeographyMultiLineFromBinary = (JCObject)retObjectGeographyMultiLineFromBinary;
            return new DbGeography(objGeographyMultiLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiLineFromBinary != null ? retObjectGeographyMultiLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyMultiLineFromText(java.lang.String multiLineWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyMultiLineFromText = null;
        try {
            retObjectGeographyMultiLineFromText = classInstance.Invoke("GeographyMultiLineFromText", multiLineWellKnownText, coordinateSystemId);
            JCObject objGeographyMultiLineFromText = (JCObject)retObjectGeographyMultiLineFromText;
            return new DbGeography(objGeographyMultiLineFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiLineFromText != null ? retObjectGeographyMultiLineFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyMultiPointFromBinary(byte[] multiPointWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyMultiPointFromBinary = null;
        try {
            retObjectGeographyMultiPointFromBinary = classInstance.Invoke("GeographyMultiPointFromBinary", multiPointWellKnownBinary, coordinateSystemId);
            JCObject objGeographyMultiPointFromBinary = (JCObject)retObjectGeographyMultiPointFromBinary;
            return new DbGeography(objGeographyMultiPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiPointFromBinary != null ? retObjectGeographyMultiPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyMultiPointFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyMultiPointFromBinary = null;
        try {
            retObjectGeographyMultiPointFromBinary = classInstance.Invoke("GeographyMultiPointFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeographyMultiPointFromBinary = (JCObject)retObjectGeographyMultiPointFromBinary;
            return new DbGeography(objGeographyMultiPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiPointFromBinary != null ? retObjectGeographyMultiPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyMultiPointFromText(java.lang.String multiPointWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyMultiPointFromText = null;
        try {
            retObjectGeographyMultiPointFromText = classInstance.Invoke("GeographyMultiPointFromText", multiPointWellKnownText, coordinateSystemId);
            JCObject objGeographyMultiPointFromText = (JCObject)retObjectGeographyMultiPointFromText;
            return new DbGeography(objGeographyMultiPointFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiPointFromText != null ? retObjectGeographyMultiPointFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyMultiPolygonFromBinary(byte[] multiPolygonWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyMultiPolygonFromBinary = null;
        try {
            retObjectGeographyMultiPolygonFromBinary = classInstance.Invoke("GeographyMultiPolygonFromBinary", multiPolygonWellKnownBinary, coordinateSystemId);
            JCObject objGeographyMultiPolygonFromBinary = (JCObject)retObjectGeographyMultiPolygonFromBinary;
            return new DbGeography(objGeographyMultiPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiPolygonFromBinary != null ? retObjectGeographyMultiPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyMultiPolygonFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyMultiPolygonFromBinary = null;
        try {
            retObjectGeographyMultiPolygonFromBinary = classInstance.Invoke("GeographyMultiPolygonFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeographyMultiPolygonFromBinary = (JCObject)retObjectGeographyMultiPolygonFromBinary;
            return new DbGeography(objGeographyMultiPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiPolygonFromBinary != null ? retObjectGeographyMultiPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyMultiPolygonFromText(java.lang.String multiPolygonWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyMultiPolygonFromText = null;
        try {
            retObjectGeographyMultiPolygonFromText = classInstance.Invoke("GeographyMultiPolygonFromText", multiPolygonWellKnownText, coordinateSystemId);
            JCObject objGeographyMultiPolygonFromText = (JCObject)retObjectGeographyMultiPolygonFromText;
            return new DbGeography(objGeographyMultiPolygonFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyMultiPolygonFromText != null ? retObjectGeographyMultiPolygonFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyPointFromBinary(byte[] pointWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyPointFromBinary = null;
        try {
            retObjectGeographyPointFromBinary = classInstance.Invoke("GeographyPointFromBinary", pointWellKnownBinary, coordinateSystemId);
            JCObject objGeographyPointFromBinary = (JCObject)retObjectGeographyPointFromBinary;
            return new DbGeography(objGeographyPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyPointFromBinary != null ? retObjectGeographyPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyPointFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyPointFromBinary = null;
        try {
            retObjectGeographyPointFromBinary = classInstance.Invoke("GeographyPointFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeographyPointFromBinary = (JCObject)retObjectGeographyPointFromBinary;
            return new DbGeography(objGeographyPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyPointFromBinary != null ? retObjectGeographyPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyPointFromText(java.lang.String pointWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyPointFromText = null;
        try {
            retObjectGeographyPointFromText = classInstance.Invoke("GeographyPointFromText", pointWellKnownText, coordinateSystemId);
            JCObject objGeographyPointFromText = (JCObject)retObjectGeographyPointFromText;
            return new DbGeography(objGeographyPointFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyPointFromText != null ? retObjectGeographyPointFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyPolygonFromBinary(byte[] polygonWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyPolygonFromBinary = null;
        try {
            retObjectGeographyPolygonFromBinary = classInstance.Invoke("GeographyPolygonFromBinary", polygonWellKnownBinary, coordinateSystemId);
            JCObject objGeographyPolygonFromBinary = (JCObject)retObjectGeographyPolygonFromBinary;
            return new DbGeography(objGeographyPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyPolygonFromBinary != null ? retObjectGeographyPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyPolygonFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyPolygonFromBinary = null;
        try {
            retObjectGeographyPolygonFromBinary = classInstance.Invoke("GeographyPolygonFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeographyPolygonFromBinary = (JCObject)retObjectGeographyPolygonFromBinary;
            return new DbGeography(objGeographyPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyPolygonFromBinary != null ? retObjectGeographyPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GeographyPolygonFromText(java.lang.String polygonWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeographyPolygonFromText = null;
        try {
            retObjectGeographyPolygonFromText = classInstance.Invoke("GeographyPolygonFromText", polygonWellKnownText, coordinateSystemId);
            JCObject objGeographyPolygonFromText = (JCObject)retObjectGeographyPolygonFromText;
            return new DbGeography(objGeographyPolygonFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeographyPolygonFromText != null ? retObjectGeographyPolygonFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GetEndPoint(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetEndPoint = null;
        try {
            retObjectGetEndPoint = classInstance.Invoke("GetEndPoint", geographyValue == null ? null : geographyValue.getJCOInstance());
            JCObject objGetEndPoint = (JCObject)retObjectGetEndPoint;
            return new DbGeography(objGetEndPoint);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetEndPoint != null ? retObjectGetEndPoint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography GetStartPoint(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetStartPoint = null;
        try {
            retObjectGetStartPoint = classInstance.Invoke("GetStartPoint", geographyValue == null ? null : geographyValue.getJCOInstance());
            JCObject objGetStartPoint = (JCObject)retObjectGetStartPoint;
            return new DbGeography(objGetStartPoint);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetStartPoint != null ? retObjectGetStartPoint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography Intersection(DbGeography geographyValue, DbGeography otherGeography) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectIntersection = null;
        try {
            retObjectIntersection = classInstance.Invoke("Intersection", geographyValue == null ? null : geographyValue.getJCOInstance(), otherGeography == null ? null : otherGeography.getJCOInstance());
            JCObject objIntersection = (JCObject)retObjectIntersection;
            return new DbGeography(objIntersection);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIntersection != null ? retObjectIntersection.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography PointAt(DbGeography geographyValue, int index) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectPointAt = null;
        try {
            retObjectPointAt = classInstance.Invoke("PointAt", geographyValue == null ? null : geographyValue.getJCOInstance(), index);
            JCObject objPointAt = (JCObject)retObjectPointAt;
            return new DbGeography(objPointAt);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPointAt != null ? retObjectPointAt.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography SymmetricDifference(DbGeography geographyValue, DbGeography otherGeography) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSymmetricDifference = null;
        try {
            retObjectSymmetricDifference = classInstance.Invoke("SymmetricDifference", geographyValue == null ? null : geographyValue.getJCOInstance(), otherGeography == null ? null : otherGeography.getJCOInstance());
            JCObject objSymmetricDifference = (JCObject)retObjectSymmetricDifference;
            return new DbGeography(objSymmetricDifference);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSymmetricDifference != null ? retObjectSymmetricDifference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeography Union(DbGeography geographyValue, DbGeography otherGeography) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectUnion = null;
        try {
            retObjectUnion = classInstance.Invoke("Union", geographyValue == null ? null : geographyValue.getJCOInstance(), otherGeography == null ? null : otherGeography.getJCOInstance());
            JCObject objUnion = (JCObject)retObjectUnion;
            return new DbGeography(objUnion);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectUnion != null ? retObjectUnion.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeographyWellKnownValue CreateWellKnownValue(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectCreateWellKnownValue = null;
        try {
            retObjectCreateWellKnownValue = classInstance.Invoke("CreateWellKnownValue", geographyValue == null ? null : geographyValue.getJCOInstance());
            JCObject objCreateWellKnownValue = (JCObject)retObjectCreateWellKnownValue;
            return new DbGeographyWellKnownValue(objCreateWellKnownValue);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCreateWellKnownValue != null ? retObjectCreateWellKnownValue.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry Buffer(DbGeometry geometryValue, double distance) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectBuffer = null;
        try {
            retObjectBuffer = classInstance.Invoke("Buffer", geometryValue == null ? null : geometryValue.getJCOInstance(), distance);
            JCObject objBuffer = (JCObject)retObjectBuffer;
            return new DbGeometry(objBuffer);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBuffer != null ? retObjectBuffer.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry Difference(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDifference = null;
        try {
            retObjectDifference = classInstance.Invoke("Difference", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            JCObject objDifference = (JCObject)retObjectDifference;
            return new DbGeometry(objDifference);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDifference != null ? retObjectDifference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry ElementAt(DbGeometry geometryValue, int index) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectElementAt = null;
        try {
            retObjectElementAt = classInstance.Invoke("ElementAt", geometryValue == null ? null : geometryValue.getJCOInstance(), index);
            JCObject objElementAt = (JCObject)retObjectElementAt;
            return new DbGeometry(objElementAt);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectElementAt != null ? retObjectElementAt.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryCollectionFromBinary(byte[] geometryCollectionWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryCollectionFromBinary = null;
        try {
            retObjectGeometryCollectionFromBinary = classInstance.Invoke("GeometryCollectionFromBinary", geometryCollectionWellKnownBinary, coordinateSystemId);
            JCObject objGeometryCollectionFromBinary = (JCObject)retObjectGeometryCollectionFromBinary;
            return new DbGeometry(objGeometryCollectionFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryCollectionFromBinary != null ? retObjectGeometryCollectionFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryCollectionFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryCollectionFromBinary = null;
        try {
            retObjectGeometryCollectionFromBinary = classInstance.Invoke("GeometryCollectionFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeometryCollectionFromBinary = (JCObject)retObjectGeometryCollectionFromBinary;
            return new DbGeometry(objGeometryCollectionFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryCollectionFromBinary != null ? retObjectGeometryCollectionFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryCollectionFromText(java.lang.String geometryCollectionWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryCollectionFromText = null;
        try {
            retObjectGeometryCollectionFromText = classInstance.Invoke("GeometryCollectionFromText", geometryCollectionWellKnownText, coordinateSystemId);
            JCObject objGeometryCollectionFromText = (JCObject)retObjectGeometryCollectionFromText;
            return new DbGeometry(objGeometryCollectionFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryCollectionFromText != null ? retObjectGeometryCollectionFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryFromBinary(byte[] wellKnownBinary) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryFromBinary = null;
        try {
            retObjectGeometryFromBinary = classInstance.Invoke("GeometryFromBinary", (java.lang.Object)wellKnownBinary);
            JCObject objGeometryFromBinary = (JCObject)retObjectGeometryFromBinary;
            return new DbGeometry(objGeometryFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromBinary != null ? retObjectGeometryFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryFromBinary(JCORefOut dupParam0) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryFromBinary = null;
        try {
            retObjectGeometryFromBinary = classInstance.Invoke("GeometryFromBinary", (java.lang.Object)dupParam0.getJCRefOut());
            JCObject objGeometryFromBinary = (JCObject)retObjectGeometryFromBinary;
            return new DbGeometry(objGeometryFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromBinary != null ? retObjectGeometryFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryFromBinary(byte[] wellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryFromBinary = null;
        try {
            retObjectGeometryFromBinary = classInstance.Invoke("GeometryFromBinary", wellKnownBinary, coordinateSystemId);
            JCObject objGeometryFromBinary = (JCObject)retObjectGeometryFromBinary;
            return new DbGeometry(objGeometryFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromBinary != null ? retObjectGeometryFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryFromBinary = null;
        try {
            retObjectGeometryFromBinary = classInstance.Invoke("GeometryFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeometryFromBinary = (JCObject)retObjectGeometryFromBinary;
            return new DbGeometry(objGeometryFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromBinary != null ? retObjectGeometryFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryFromGml(java.lang.String geometryMarkup) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryFromGml = null;
        try {
            retObjectGeometryFromGml = classInstance.Invoke("GeometryFromGml", geometryMarkup);
            JCObject objGeometryFromGml = (JCObject)retObjectGeometryFromGml;
            return new DbGeometry(objGeometryFromGml);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromGml != null ? retObjectGeometryFromGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryFromGml(java.lang.String geometryMarkup, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryFromGml = null;
        try {
            retObjectGeometryFromGml = classInstance.Invoke("GeometryFromGml", geometryMarkup, coordinateSystemId);
            JCObject objGeometryFromGml = (JCObject)retObjectGeometryFromGml;
            return new DbGeometry(objGeometryFromGml);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromGml != null ? retObjectGeometryFromGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryFromProviderValue(NetObject providerValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryFromProviderValue = null;
        try {
            retObjectGeometryFromProviderValue = classInstance.Invoke("GeometryFromProviderValue", providerValue == null ? null : providerValue.getJCOInstance());
            JCObject objGeometryFromProviderValue = (JCObject)retObjectGeometryFromProviderValue;
            return new DbGeometry(objGeometryFromProviderValue);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromProviderValue != null ? retObjectGeometryFromProviderValue.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryFromText(java.lang.String wellKnownText) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryFromText = null;
        try {
            retObjectGeometryFromText = classInstance.Invoke("GeometryFromText", wellKnownText);
            JCObject objGeometryFromText = (JCObject)retObjectGeometryFromText;
            return new DbGeometry(objGeometryFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromText != null ? retObjectGeometryFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryFromText(java.lang.String wellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryFromText = null;
        try {
            retObjectGeometryFromText = classInstance.Invoke("GeometryFromText", wellKnownText, coordinateSystemId);
            JCObject objGeometryFromText = (JCObject)retObjectGeometryFromText;
            return new DbGeometry(objGeometryFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryFromText != null ? retObjectGeometryFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryLineFromBinary(byte[] lineWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryLineFromBinary = null;
        try {
            retObjectGeometryLineFromBinary = classInstance.Invoke("GeometryLineFromBinary", lineWellKnownBinary, coordinateSystemId);
            JCObject objGeometryLineFromBinary = (JCObject)retObjectGeometryLineFromBinary;
            return new DbGeometry(objGeometryLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryLineFromBinary != null ? retObjectGeometryLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryLineFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryLineFromBinary = null;
        try {
            retObjectGeometryLineFromBinary = classInstance.Invoke("GeometryLineFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeometryLineFromBinary = (JCObject)retObjectGeometryLineFromBinary;
            return new DbGeometry(objGeometryLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryLineFromBinary != null ? retObjectGeometryLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryLineFromText(java.lang.String lineWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryLineFromText = null;
        try {
            retObjectGeometryLineFromText = classInstance.Invoke("GeometryLineFromText", lineWellKnownText, coordinateSystemId);
            JCObject objGeometryLineFromText = (JCObject)retObjectGeometryLineFromText;
            return new DbGeometry(objGeometryLineFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryLineFromText != null ? retObjectGeometryLineFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryMultiLineFromBinary(byte[] multiLineWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryMultiLineFromBinary = null;
        try {
            retObjectGeometryMultiLineFromBinary = classInstance.Invoke("GeometryMultiLineFromBinary", multiLineWellKnownBinary, coordinateSystemId);
            JCObject objGeometryMultiLineFromBinary = (JCObject)retObjectGeometryMultiLineFromBinary;
            return new DbGeometry(objGeometryMultiLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiLineFromBinary != null ? retObjectGeometryMultiLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryMultiLineFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryMultiLineFromBinary = null;
        try {
            retObjectGeometryMultiLineFromBinary = classInstance.Invoke("GeometryMultiLineFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeometryMultiLineFromBinary = (JCObject)retObjectGeometryMultiLineFromBinary;
            return new DbGeometry(objGeometryMultiLineFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiLineFromBinary != null ? retObjectGeometryMultiLineFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryMultiLineFromText(java.lang.String multiLineWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryMultiLineFromText = null;
        try {
            retObjectGeometryMultiLineFromText = classInstance.Invoke("GeometryMultiLineFromText", multiLineWellKnownText, coordinateSystemId);
            JCObject objGeometryMultiLineFromText = (JCObject)retObjectGeometryMultiLineFromText;
            return new DbGeometry(objGeometryMultiLineFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiLineFromText != null ? retObjectGeometryMultiLineFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryMultiPointFromBinary(byte[] multiPointWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryMultiPointFromBinary = null;
        try {
            retObjectGeometryMultiPointFromBinary = classInstance.Invoke("GeometryMultiPointFromBinary", multiPointWellKnownBinary, coordinateSystemId);
            JCObject objGeometryMultiPointFromBinary = (JCObject)retObjectGeometryMultiPointFromBinary;
            return new DbGeometry(objGeometryMultiPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiPointFromBinary != null ? retObjectGeometryMultiPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryMultiPointFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryMultiPointFromBinary = null;
        try {
            retObjectGeometryMultiPointFromBinary = classInstance.Invoke("GeometryMultiPointFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeometryMultiPointFromBinary = (JCObject)retObjectGeometryMultiPointFromBinary;
            return new DbGeometry(objGeometryMultiPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiPointFromBinary != null ? retObjectGeometryMultiPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryMultiPointFromText(java.lang.String multiPointWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryMultiPointFromText = null;
        try {
            retObjectGeometryMultiPointFromText = classInstance.Invoke("GeometryMultiPointFromText", multiPointWellKnownText, coordinateSystemId);
            JCObject objGeometryMultiPointFromText = (JCObject)retObjectGeometryMultiPointFromText;
            return new DbGeometry(objGeometryMultiPointFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiPointFromText != null ? retObjectGeometryMultiPointFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryMultiPolygonFromBinary(byte[] multiPolygonWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryMultiPolygonFromBinary = null;
        try {
            retObjectGeometryMultiPolygonFromBinary = classInstance.Invoke("GeometryMultiPolygonFromBinary", multiPolygonWellKnownBinary, coordinateSystemId);
            JCObject objGeometryMultiPolygonFromBinary = (JCObject)retObjectGeometryMultiPolygonFromBinary;
            return new DbGeometry(objGeometryMultiPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiPolygonFromBinary != null ? retObjectGeometryMultiPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryMultiPolygonFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryMultiPolygonFromBinary = null;
        try {
            retObjectGeometryMultiPolygonFromBinary = classInstance.Invoke("GeometryMultiPolygonFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeometryMultiPolygonFromBinary = (JCObject)retObjectGeometryMultiPolygonFromBinary;
            return new DbGeometry(objGeometryMultiPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiPolygonFromBinary != null ? retObjectGeometryMultiPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryMultiPolygonFromText(java.lang.String multiPolygonKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryMultiPolygonFromText = null;
        try {
            retObjectGeometryMultiPolygonFromText = classInstance.Invoke("GeometryMultiPolygonFromText", multiPolygonKnownText, coordinateSystemId);
            JCObject objGeometryMultiPolygonFromText = (JCObject)retObjectGeometryMultiPolygonFromText;
            return new DbGeometry(objGeometryMultiPolygonFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryMultiPolygonFromText != null ? retObjectGeometryMultiPolygonFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryPointFromBinary(byte[] pointWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryPointFromBinary = null;
        try {
            retObjectGeometryPointFromBinary = classInstance.Invoke("GeometryPointFromBinary", pointWellKnownBinary, coordinateSystemId);
            JCObject objGeometryPointFromBinary = (JCObject)retObjectGeometryPointFromBinary;
            return new DbGeometry(objGeometryPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryPointFromBinary != null ? retObjectGeometryPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryPointFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryPointFromBinary = null;
        try {
            retObjectGeometryPointFromBinary = classInstance.Invoke("GeometryPointFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeometryPointFromBinary = (JCObject)retObjectGeometryPointFromBinary;
            return new DbGeometry(objGeometryPointFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryPointFromBinary != null ? retObjectGeometryPointFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryPointFromText(java.lang.String pointWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryPointFromText = null;
        try {
            retObjectGeometryPointFromText = classInstance.Invoke("GeometryPointFromText", pointWellKnownText, coordinateSystemId);
            JCObject objGeometryPointFromText = (JCObject)retObjectGeometryPointFromText;
            return new DbGeometry(objGeometryPointFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryPointFromText != null ? retObjectGeometryPointFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryPolygonFromBinary(byte[] polygonWellKnownBinary, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryPolygonFromBinary = null;
        try {
            retObjectGeometryPolygonFromBinary = classInstance.Invoke("GeometryPolygonFromBinary", polygonWellKnownBinary, coordinateSystemId);
            JCObject objGeometryPolygonFromBinary = (JCObject)retObjectGeometryPolygonFromBinary;
            return new DbGeometry(objGeometryPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryPolygonFromBinary != null ? retObjectGeometryPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryPolygonFromBinary(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryPolygonFromBinary = null;
        try {
            retObjectGeometryPolygonFromBinary = classInstance.Invoke("GeometryPolygonFromBinary", dupParam0.getJCRefOut(), dupParam1);
            JCObject objGeometryPolygonFromBinary = (JCObject)retObjectGeometryPolygonFromBinary;
            return new DbGeometry(objGeometryPolygonFromBinary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryPolygonFromBinary != null ? retObjectGeometryPolygonFromBinary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GeometryPolygonFromText(java.lang.String polygonWellKnownText, int coordinateSystemId) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGeometryPolygonFromText = null;
        try {
            retObjectGeometryPolygonFromText = classInstance.Invoke("GeometryPolygonFromText", polygonWellKnownText, coordinateSystemId);
            JCObject objGeometryPolygonFromText = (JCObject)retObjectGeometryPolygonFromText;
            return new DbGeometry(objGeometryPolygonFromText);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGeometryPolygonFromText != null ? retObjectGeometryPolygonFromText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GetBoundary(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetBoundary = null;
        try {
            retObjectGetBoundary = classInstance.Invoke("GetBoundary", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objGetBoundary = (JCObject)retObjectGetBoundary;
            return new DbGeometry(objGetBoundary);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetBoundary != null ? retObjectGetBoundary.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GetCentroid(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetCentroid = null;
        try {
            retObjectGetCentroid = classInstance.Invoke("GetCentroid", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objGetCentroid = (JCObject)retObjectGetCentroid;
            return new DbGeometry(objGetCentroid);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetCentroid != null ? retObjectGetCentroid.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GetConvexHull(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetConvexHull = null;
        try {
            retObjectGetConvexHull = classInstance.Invoke("GetConvexHull", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objGetConvexHull = (JCObject)retObjectGetConvexHull;
            return new DbGeometry(objGetConvexHull);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetConvexHull != null ? retObjectGetConvexHull.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GetEndPoint(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetEndPoint = null;
        try {
            retObjectGetEndPoint = classInstance.Invoke("GetEndPoint", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objGetEndPoint = (JCObject)retObjectGetEndPoint;
            return new DbGeometry(objGetEndPoint);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetEndPoint != null ? retObjectGetEndPoint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GetEnvelope(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetEnvelope = null;
        try {
            retObjectGetEnvelope = classInstance.Invoke("GetEnvelope", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objGetEnvelope = (JCObject)retObjectGetEnvelope;
            return new DbGeometry(objGetEnvelope);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetEnvelope != null ? retObjectGetEnvelope.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GetExteriorRing(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetExteriorRing = null;
        try {
            retObjectGetExteriorRing = classInstance.Invoke("GetExteriorRing", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objGetExteriorRing = (JCObject)retObjectGetExteriorRing;
            return new DbGeometry(objGetExteriorRing);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetExteriorRing != null ? retObjectGetExteriorRing.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GetPointOnSurface(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetPointOnSurface = null;
        try {
            retObjectGetPointOnSurface = classInstance.Invoke("GetPointOnSurface", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objGetPointOnSurface = (JCObject)retObjectGetPointOnSurface;
            return new DbGeometry(objGetPointOnSurface);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetPointOnSurface != null ? retObjectGetPointOnSurface.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry GetStartPoint(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetStartPoint = null;
        try {
            retObjectGetStartPoint = classInstance.Invoke("GetStartPoint", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objGetStartPoint = (JCObject)retObjectGetStartPoint;
            return new DbGeometry(objGetStartPoint);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetStartPoint != null ? retObjectGetStartPoint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry InteriorRingAt(DbGeometry geometryValue, int index) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectInteriorRingAt = null;
        try {
            retObjectInteriorRingAt = classInstance.Invoke("InteriorRingAt", geometryValue == null ? null : geometryValue.getJCOInstance(), index);
            JCObject objInteriorRingAt = (JCObject)retObjectInteriorRingAt;
            return new DbGeometry(objInteriorRingAt);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectInteriorRingAt != null ? retObjectInteriorRingAt.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry Intersection(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectIntersection = null;
        try {
            retObjectIntersection = classInstance.Invoke("Intersection", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            JCObject objIntersection = (JCObject)retObjectIntersection;
            return new DbGeometry(objIntersection);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIntersection != null ? retObjectIntersection.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry PointAt(DbGeometry geometryValue, int index) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectPointAt = null;
        try {
            retObjectPointAt = classInstance.Invoke("PointAt", geometryValue == null ? null : geometryValue.getJCOInstance(), index);
            JCObject objPointAt = (JCObject)retObjectPointAt;
            return new DbGeometry(objPointAt);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPointAt != null ? retObjectPointAt.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry SymmetricDifference(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSymmetricDifference = null;
        try {
            retObjectSymmetricDifference = classInstance.Invoke("SymmetricDifference", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            JCObject objSymmetricDifference = (JCObject)retObjectSymmetricDifference;
            return new DbGeometry(objSymmetricDifference);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSymmetricDifference != null ? retObjectSymmetricDifference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometry Union(DbGeometry geometryValue, DbGeometry otherGeometry) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectUnion = null;
        try {
            retObjectUnion = classInstance.Invoke("Union", geometryValue == null ? null : geometryValue.getJCOInstance(), otherGeometry == null ? null : otherGeometry.getJCOInstance());
            JCObject objUnion = (JCObject)retObjectUnion;
            return new DbGeometry(objUnion);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectUnion != null ? retObjectUnion.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DbGeometryWellKnownValue CreateWellKnownValue(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectCreateWellKnownValue = null;
        try {
            retObjectCreateWellKnownValue = classInstance.Invoke("CreateWellKnownValue", geometryValue == null ? null : geometryValue.getJCOInstance());
            JCObject objCreateWellKnownValue = (JCObject)retObjectCreateWellKnownValue;
            return new DbGeometryWellKnownValue(objCreateWellKnownValue);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCreateWellKnownValue != null ? retObjectCreateWellKnownValue.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public NetObject CreateProviderValue(DbGeographyWellKnownValue wellKnownValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectCreateProviderValue = null;
        try {
            retObjectCreateProviderValue = classInstance.Invoke("CreateProviderValue", wellKnownValue == null ? null : wellKnownValue.getJCOInstance());
            JCObject objCreateProviderValue = (JCObject)retObjectCreateProviderValue;
            return new NetObject(objCreateProviderValue);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCreateProviderValue != null ? retObjectCreateProviderValue.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public NetObject CreateProviderValue(DbGeometryWellKnownValue wellKnownValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectCreateProviderValue = null;
        try {
            retObjectCreateProviderValue = classInstance.Invoke("CreateProviderValue", wellKnownValue == null ? null : wellKnownValue.getJCOInstance());
            JCObject objCreateProviderValue = (JCObject)retObjectCreateProviderValue;
            return new NetObject(objCreateProviderValue);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCreateProviderValue != null ? retObjectCreateProviderValue.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String AsGml(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAsGml = null;
        try {
            retObjectAsGml = classInstance.Invoke("AsGml", geographyValue == null ? null : geographyValue.getJCOInstance());
            return (java.lang.String)retObjectAsGml;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectAsGml != null ? retObjectAsGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String AsGml(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAsGml = null;
        try {
            retObjectAsGml = classInstance.Invoke("AsGml", geometryValue == null ? null : geometryValue.getJCOInstance());
            return (java.lang.String)retObjectAsGml;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectAsGml != null ? retObjectAsGml.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String AsText(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAsText = null;
        try {
            retObjectAsText = classInstance.Invoke("AsText", geographyValue == null ? null : geographyValue.getJCOInstance());
            return (java.lang.String)retObjectAsText;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectAsText != null ? retObjectAsText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String AsText(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAsText = null;
        try {
            retObjectAsText = classInstance.Invoke("AsText", geometryValue == null ? null : geometryValue.getJCOInstance());
            return (java.lang.String)retObjectAsText;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectAsText != null ? retObjectAsText.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String AsTextIncludingElevationAndMeasure(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAsTextIncludingElevationAndMeasure = null;
        try {
            retObjectAsTextIncludingElevationAndMeasure = classInstance.Invoke("AsTextIncludingElevationAndMeasure", geographyValue == null ? null : geographyValue.getJCOInstance());
            return (java.lang.String)retObjectAsTextIncludingElevationAndMeasure;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectAsTextIncludingElevationAndMeasure != null ? retObjectAsTextIncludingElevationAndMeasure.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String AsTextIncludingElevationAndMeasure(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAsTextIncludingElevationAndMeasure = null;
        try {
            retObjectAsTextIncludingElevationAndMeasure = classInstance.Invoke("AsTextIncludingElevationAndMeasure", geometryValue == null ? null : geometryValue.getJCOInstance());
            return (java.lang.String)retObjectAsTextIncludingElevationAndMeasure;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectAsTextIncludingElevationAndMeasure != null ? retObjectAsTextIncludingElevationAndMeasure.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetSpatialTypeName(DbGeography geographyValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetSpatialTypeName = null;
        try {
            retObjectGetSpatialTypeName = classInstance.Invoke("GetSpatialTypeName", geographyValue == null ? null : geographyValue.getJCOInstance());
            return (java.lang.String)retObjectGetSpatialTypeName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetSpatialTypeName != null ? retObjectGetSpatialTypeName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetSpatialTypeName(DbGeometry geometryValue) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetSpatialTypeName = null;
        try {
            retObjectGetSpatialTypeName = classInstance.Invoke("GetSpatialTypeName", geometryValue == null ? null : geometryValue.getJCOInstance());
            return (java.lang.String)retObjectGetSpatialTypeName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetSpatialTypeName != null ? retObjectGetSpatialTypeName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    
    public static DbSpatialServices getDefault() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDefault = null;
        try {
            retObjectDefault = classType.Get("Default");
            JCObject val = (JCObject)retObjectDefault;
            return new DbSpatialServices(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDefault != null ? retObjectDefault.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}