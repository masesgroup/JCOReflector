/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.web;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.IAsyncResult;
import system.IAsyncResultImplementation;
import system.DateTime;
import system.AsyncCallback;
import system.Guid;


/**
 * The base .NET class managing System.Web.HttpWorkerRequest, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Web.HttpWorkerRequest" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Web.HttpWorkerRequest</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class HttpWorkerRequest extends NetObject  {
    /**
     * Fully assembly qualified name: System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
     */
    public static final String assemblyFullName = "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
    /**
     * Assembly name: System.Web
     */
    public static final String assemblyShortName = "System.Web";
    /**
     * Qualified class name: System.Web.HttpWorkerRequest
     */
    public static final String className = "System.Web.HttpWorkerRequest";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public HttpWorkerRequest(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link HttpWorkerRequest}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link HttpWorkerRequest} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static HttpWorkerRequest cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new HttpWorkerRequest(from.getJCOInstance());
    }

    // Constructors section
    
    public HttpWorkerRequest() throws Throwable {
    }

    
    // Methods section
    
    public boolean HasEntityBody() throws Throwable, system.NullReferenceException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectHasEntityBody = null;
        try {
            retObjectHasEntityBody = classInstance.Invoke("HasEntityBody");
            return (boolean)retObjectHasEntityBody;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectHasEntityBody != null ? retObjectHasEntityBody.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean HeadersSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectHeadersSent = null;
        try {
            retObjectHeadersSent = classInstance.Invoke("HeadersSent");
            return (boolean)retObjectHeadersSent;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectHeadersSent != null ? retObjectHeadersSent.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean IsClientConnected() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectIsClientConnected = null;
        try {
            retObjectIsClientConnected = classInstance.Invoke("IsClientConnected");
            return (boolean)retObjectIsClientConnected;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectIsClientConnected != null ? retObjectIsClientConnected.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean IsEntireEntityBodyIsPreloaded() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectIsEntireEntityBodyIsPreloaded = null;
        try {
            retObjectIsEntireEntityBodyIsPreloaded = classInstance.Invoke("IsEntireEntityBodyIsPreloaded");
            return (boolean)retObjectIsEntireEntityBodyIsPreloaded;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectIsEntireEntityBodyIsPreloaded != null ? retObjectIsEntireEntityBodyIsPreloaded.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean IsSecure() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectIsSecure = null;
        try {
            retObjectIsSecure = classInstance.Invoke("IsSecure");
            return (boolean)retObjectIsSecure;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectIsSecure != null ? retObjectIsSecure.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public byte[] GetClientCertificate() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetClientCertificate = null;
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            retObjectGetClientCertificate = classInstance.Invoke("GetClientCertificate");
            JCObject resultingObjects = (JCObject)retObjectGetClientCertificate;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            byte[] resultingArray = new byte[resultingArrayList.size()];
            for(int indexGetClientCertificate = 0; indexGetClientCertificate < resultingArrayList.size(); indexGetClientCertificate++ ) {
				resultingArray[indexGetClientCertificate] = (byte)resultingArrayList.get(indexGetClientCertificate);
            }
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into byte", retObjectGetClientCertificate != null ? retObjectGetClientCertificate.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public byte[] GetClientCertificateBinaryIssuer() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetClientCertificateBinaryIssuer = null;
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            retObjectGetClientCertificateBinaryIssuer = classInstance.Invoke("GetClientCertificateBinaryIssuer");
            JCObject resultingObjects = (JCObject)retObjectGetClientCertificateBinaryIssuer;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            byte[] resultingArray = new byte[resultingArrayList.size()];
            for(int indexGetClientCertificateBinaryIssuer = 0; indexGetClientCertificateBinaryIssuer < resultingArrayList.size(); indexGetClientCertificateBinaryIssuer++ ) {
				resultingArray[indexGetClientCertificateBinaryIssuer] = (byte)resultingArrayList.get(indexGetClientCertificateBinaryIssuer);
            }
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into byte", retObjectGetClientCertificateBinaryIssuer != null ? retObjectGetClientCertificateBinaryIssuer.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public byte[] GetClientCertificatePublicKey() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetClientCertificatePublicKey = null;
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            retObjectGetClientCertificatePublicKey = classInstance.Invoke("GetClientCertificatePublicKey");
            JCObject resultingObjects = (JCObject)retObjectGetClientCertificatePublicKey;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            byte[] resultingArray = new byte[resultingArrayList.size()];
            for(int indexGetClientCertificatePublicKey = 0; indexGetClientCertificatePublicKey < resultingArrayList.size(); indexGetClientCertificatePublicKey++ ) {
				resultingArray[indexGetClientCertificatePublicKey] = (byte)resultingArrayList.get(indexGetClientCertificatePublicKey);
            }
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into byte", retObjectGetClientCertificatePublicKey != null ? retObjectGetClientCertificatePublicKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public byte[] GetPreloadedEntityBody() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetPreloadedEntityBody = null;
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            retObjectGetPreloadedEntityBody = classInstance.Invoke("GetPreloadedEntityBody");
            JCObject resultingObjects = (JCObject)retObjectGetPreloadedEntityBody;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            byte[] resultingArray = new byte[resultingArrayList.size()];
            for(int indexGetPreloadedEntityBody = 0; indexGetPreloadedEntityBody < resultingArrayList.size(); indexGetPreloadedEntityBody++ ) {
				resultingArray[indexGetPreloadedEntityBody] = (byte)resultingArrayList.get(indexGetPreloadedEntityBody);
            }
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into byte", retObjectGetPreloadedEntityBody != null ? retObjectGetPreloadedEntityBody.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public byte[] GetQueryStringRawBytes() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetQueryStringRawBytes = null;
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            retObjectGetQueryStringRawBytes = classInstance.Invoke("GetQueryStringRawBytes");
            JCObject resultingObjects = (JCObject)retObjectGetQueryStringRawBytes;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            byte[] resultingArray = new byte[resultingArrayList.size()];
            for(int indexGetQueryStringRawBytes = 0; indexGetQueryStringRawBytes < resultingArrayList.size(); indexGetQueryStringRawBytes++ ) {
				resultingArray[indexGetQueryStringRawBytes] = (byte)resultingArrayList.get(indexGetQueryStringRawBytes);
            }
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into byte", retObjectGetQueryStringRawBytes != null ? retObjectGetQueryStringRawBytes.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int EndRead(IAsyncResult asyncResult) throws Throwable, system.NotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectEndRead = null;
        try {
            retObjectEndRead = classInstance.Invoke("EndRead", asyncResult == null ? null : asyncResult.getJCOInstance());
            return (int)retObjectEndRead;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectEndReadNumber = (java.lang.Number)retObjectEndRead;
                return retObjectEndReadNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectEndRead != null ? retObjectEndRead.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetClientCertificateEncoding() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetClientCertificateEncoding = null;
        try {
            retObjectGetClientCertificateEncoding = classInstance.Invoke("GetClientCertificateEncoding");
            return (int)retObjectGetClientCertificateEncoding;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetClientCertificateEncodingNumber = (java.lang.Number)retObjectGetClientCertificateEncoding;
                return retObjectGetClientCertificateEncodingNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetClientCertificateEncoding != null ? retObjectGetClientCertificateEncoding.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int GetKnownRequestHeaderIndex(java.lang.String header) throws Throwable, system.ArgumentNullException, system.ObjectDisposedException, system.threading.AbandonedMutexException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetKnownRequestHeaderIndex = null;
        try {
            retObjectGetKnownRequestHeaderIndex = classType.Invoke("GetKnownRequestHeaderIndex", header);
            return (int)retObjectGetKnownRequestHeaderIndex;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetKnownRequestHeaderIndexNumber = (java.lang.Number)retObjectGetKnownRequestHeaderIndex;
                return retObjectGetKnownRequestHeaderIndexNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetKnownRequestHeaderIndex != null ? retObjectGetKnownRequestHeaderIndex.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int GetKnownResponseHeaderIndex(java.lang.String header) throws Throwable, system.ArgumentNullException, system.ObjectDisposedException, system.threading.AbandonedMutexException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetKnownResponseHeaderIndex = null;
        try {
            retObjectGetKnownResponseHeaderIndex = classType.Invoke("GetKnownResponseHeaderIndex", header);
            return (int)retObjectGetKnownResponseHeaderIndex;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetKnownResponseHeaderIndexNumber = (java.lang.Number)retObjectGetKnownResponseHeaderIndex;
                return retObjectGetKnownResponseHeaderIndexNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetKnownResponseHeaderIndex != null ? retObjectGetKnownResponseHeaderIndex.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetLocalPort() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetLocalPort = null;
        try {
            retObjectGetLocalPort = classInstance.Invoke("GetLocalPort");
            return (int)retObjectGetLocalPort;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetLocalPortNumber = (java.lang.Number)retObjectGetLocalPort;
                return retObjectGetLocalPortNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetLocalPort != null ? retObjectGetLocalPort.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetPreloadedEntityBody(byte[] buffer, int offset) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetPreloadedEntityBody = null;
        try {
            retObjectGetPreloadedEntityBody = classInstance.Invoke("GetPreloadedEntityBody", buffer, offset);
            return (int)retObjectGetPreloadedEntityBody;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetPreloadedEntityBodyNumber = (java.lang.Number)retObjectGetPreloadedEntityBody;
                return retObjectGetPreloadedEntityBodyNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetPreloadedEntityBody != null ? retObjectGetPreloadedEntityBody.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetPreloadedEntityBody(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetPreloadedEntityBody = null;
        try {
            retObjectGetPreloadedEntityBody = classInstance.Invoke("GetPreloadedEntityBody", dupParam0.getJCRefOut(), dupParam1);
            return (int)retObjectGetPreloadedEntityBody;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetPreloadedEntityBodyNumber = (java.lang.Number)retObjectGetPreloadedEntityBody;
                return retObjectGetPreloadedEntityBodyNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetPreloadedEntityBody != null ? retObjectGetPreloadedEntityBody.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetPreloadedEntityBodyLength() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetPreloadedEntityBodyLength = null;
        try {
            retObjectGetPreloadedEntityBodyLength = classInstance.Invoke("GetPreloadedEntityBodyLength");
            return (int)retObjectGetPreloadedEntityBodyLength;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetPreloadedEntityBodyLengthNumber = (java.lang.Number)retObjectGetPreloadedEntityBodyLength;
                return retObjectGetPreloadedEntityBodyLengthNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetPreloadedEntityBodyLength != null ? retObjectGetPreloadedEntityBodyLength.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetRemotePort() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetRemotePort = null;
        try {
            retObjectGetRemotePort = classInstance.Invoke("GetRemotePort");
            return (int)retObjectGetRemotePort;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetRemotePortNumber = (java.lang.Number)retObjectGetRemotePort;
                return retObjectGetRemotePortNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetRemotePort != null ? retObjectGetRemotePort.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetRequestReason() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetRequestReason = null;
        try {
            retObjectGetRequestReason = classInstance.Invoke("GetRequestReason");
            return (int)retObjectGetRequestReason;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetRequestReasonNumber = (java.lang.Number)retObjectGetRequestReason;
                return retObjectGetRequestReasonNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetRequestReason != null ? retObjectGetRequestReason.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int GetTotalEntityBodyLength() throws Throwable, system.ArgumentNullException, system.ArgumentException, system.InvalidOperationException, system.MissingMethodException, system.reflection.TargetInvocationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException, system.OutOfMemoryException, system.FormatException, system.OverflowException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetTotalEntityBodyLength = null;
        try {
            retObjectGetTotalEntityBodyLength = classInstance.Invoke("GetTotalEntityBodyLength");
            return (int)retObjectGetTotalEntityBodyLength;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetTotalEntityBodyLengthNumber = (java.lang.Number)retObjectGetTotalEntityBodyLength;
                return retObjectGetTotalEntityBodyLengthNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectGetTotalEntityBodyLength != null ? retObjectGetTotalEntityBodyLength.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int ReadEntityBody(byte[] buffer, int size) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReadEntityBody = null;
        try {
            retObjectReadEntityBody = classInstance.Invoke("ReadEntityBody", buffer, size);
            return (int)retObjectReadEntityBody;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReadEntityBodyNumber = (java.lang.Number)retObjectReadEntityBody;
                return retObjectReadEntityBodyNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectReadEntityBody != null ? retObjectReadEntityBody.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int ReadEntityBody(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReadEntityBody = null;
        try {
            retObjectReadEntityBody = classInstance.Invoke("ReadEntityBody", dupParam0.getJCRefOut(), dupParam1);
            return (int)retObjectReadEntityBody;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReadEntityBodyNumber = (java.lang.Number)retObjectReadEntityBody;
                return retObjectReadEntityBodyNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectReadEntityBody != null ? retObjectReadEntityBody.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int ReadEntityBody(byte[] buffer, int offset, int size) throws Throwable, system.ArgumentOutOfRangeException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReadEntityBody = null;
        try {
            retObjectReadEntityBody = classInstance.Invoke("ReadEntityBody", buffer, offset, size);
            return (int)retObjectReadEntityBody;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReadEntityBodyNumber = (java.lang.Number)retObjectReadEntityBody;
                return retObjectReadEntityBodyNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectReadEntityBody != null ? retObjectReadEntityBody.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int ReadEntityBody(JCORefOut dupParam0, int dupParam1, int dupParam2) throws Throwable, system.ArgumentOutOfRangeException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReadEntityBody = null;
        try {
            retObjectReadEntityBody = classInstance.Invoke("ReadEntityBody", dupParam0.getJCRefOut(), dupParam1, dupParam2);
            return (int)retObjectReadEntityBody;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReadEntityBodyNumber = (java.lang.Number)retObjectReadEntityBody;
                return retObjectReadEntityBodyNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectReadEntityBody != null ? retObjectReadEntityBody.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long GetBytesRead() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetBytesRead = null;
        try {
            retObjectGetBytesRead = classInstance.Invoke("GetBytesRead");
            return (long)retObjectGetBytesRead;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetBytesReadNumber = (java.lang.Number)retObjectGetBytesRead;
                return retObjectGetBytesReadNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectGetBytesRead != null ? retObjectGetBytesRead.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long GetConnectionID() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetConnectionID = null;
        try {
            retObjectGetConnectionID = classInstance.Invoke("GetConnectionID");
            return (long)retObjectGetConnectionID;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetConnectionIDNumber = (java.lang.Number)retObjectGetConnectionID;
                return retObjectGetConnectionIDNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectGetConnectionID != null ? retObjectGetConnectionID.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long GetUrlContextID() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetUrlContextID = null;
        try {
            retObjectGetUrlContextID = classInstance.Invoke("GetUrlContextID");
            return (long)retObjectGetUrlContextID;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetUrlContextIDNumber = (java.lang.Number)retObjectGetUrlContextID;
                return retObjectGetUrlContextIDNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectGetUrlContextID != null ? retObjectGetUrlContextID.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DateTime GetClientCertificateValidFrom() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.ArgumentException, system.InvalidTimeZoneException, system.OverflowException, system.NotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetClientCertificateValidFrom = null;
        try {
            retObjectGetClientCertificateValidFrom = classInstance.Invoke("GetClientCertificateValidFrom");
            JCObject objGetClientCertificateValidFrom = (JCObject)retObjectGetClientCertificateValidFrom;
            return new DateTime(objGetClientCertificateValidFrom);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetClientCertificateValidFrom != null ? retObjectGetClientCertificateValidFrom.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DateTime GetClientCertificateValidUntil() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.ArgumentException, system.InvalidTimeZoneException, system.OverflowException, system.NotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetClientCertificateValidUntil = null;
        try {
            retObjectGetClientCertificateValidUntil = classInstance.Invoke("GetClientCertificateValidUntil");
            JCObject objGetClientCertificateValidUntil = (JCObject)retObjectGetClientCertificateValidUntil;
            return new DateTime(objGetClientCertificateValidUntil);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetClientCertificateValidUntil != null ? retObjectGetClientCertificateValidUntil.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public IAsyncResult BeginFlush(AsyncCallback callback, NetObject state) throws Throwable, system.NotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectBeginFlush = null;
        try {
            retObjectBeginFlush = classInstance.Invoke("BeginFlush", callback, state == null ? null : state.getJCOInstance());
            JCObject objBeginFlush = (JCObject)retObjectBeginFlush;
            return new IAsyncResultImplementation(objBeginFlush);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBeginFlush != null ? retObjectBeginFlush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, NetObject state) throws Throwable, system.NotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectBeginRead = null;
        try {
            retObjectBeginRead = classInstance.Invoke("BeginRead", buffer, offset, count, callback, state == null ? null : state.getJCOInstance());
            JCObject objBeginRead = (JCObject)retObjectBeginRead;
            return new IAsyncResultImplementation(objBeginRead);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBeginRead != null ? retObjectBeginRead.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public IAsyncResult BeginRead(JCORefOut dupParam0, int dupParam1, int dupParam2, AsyncCallback dupParam3, NetObject dupParam4) throws Throwable, system.NotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectBeginRead = null;
        try {
            retObjectBeginRead = classInstance.Invoke("BeginRead", dupParam0.getJCRefOut(), dupParam1, dupParam2, dupParam3, dupParam4 == null ? null : dupParam4.getJCOInstance());
            JCObject objBeginRead = (JCObject)retObjectBeginRead;
            return new IAsyncResultImplementation(objBeginRead);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBeginRead != null ? retObjectBeginRead.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetAppPath() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetAppPath = null;
        try {
            retObjectGetAppPath = classInstance.Invoke("GetAppPath");
            return (java.lang.String)retObjectGetAppPath;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetAppPath != null ? retObjectGetAppPath.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetAppPathTranslated() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetAppPathTranslated = null;
        try {
            retObjectGetAppPathTranslated = classInstance.Invoke("GetAppPathTranslated");
            return (java.lang.String)retObjectGetAppPathTranslated;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetAppPathTranslated != null ? retObjectGetAppPathTranslated.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetAppPoolID() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetAppPoolID = null;
        try {
            retObjectGetAppPoolID = classInstance.Invoke("GetAppPoolID");
            return (java.lang.String)retObjectGetAppPoolID;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetAppPoolID != null ? retObjectGetAppPoolID.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetFilePath() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetFilePath = null;
        try {
            retObjectGetFilePath = classInstance.Invoke("GetFilePath");
            return (java.lang.String)retObjectGetFilePath;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetFilePath != null ? retObjectGetFilePath.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetFilePathTranslated() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetFilePathTranslated = null;
        try {
            retObjectGetFilePathTranslated = classInstance.Invoke("GetFilePathTranslated");
            return (java.lang.String)retObjectGetFilePathTranslated;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetFilePathTranslated != null ? retObjectGetFilePathTranslated.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetHttpVerbName() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetHttpVerbName = null;
        try {
            retObjectGetHttpVerbName = classInstance.Invoke("GetHttpVerbName");
            return (java.lang.String)retObjectGetHttpVerbName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetHttpVerbName != null ? retObjectGetHttpVerbName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetHttpVersion() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetHttpVersion = null;
        try {
            retObjectGetHttpVersion = classInstance.Invoke("GetHttpVersion");
            return (java.lang.String)retObjectGetHttpVersion;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetHttpVersion != null ? retObjectGetHttpVersion.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetKnownRequestHeader(int index) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetKnownRequestHeader = null;
        try {
            retObjectGetKnownRequestHeader = classInstance.Invoke("GetKnownRequestHeader", index);
            return (java.lang.String)retObjectGetKnownRequestHeader;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetKnownRequestHeader != null ? retObjectGetKnownRequestHeader.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String GetKnownRequestHeaderName(int index) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetKnownRequestHeaderName = null;
        try {
            retObjectGetKnownRequestHeaderName = classType.Invoke("GetKnownRequestHeaderName", index);
            return (java.lang.String)retObjectGetKnownRequestHeaderName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetKnownRequestHeaderName != null ? retObjectGetKnownRequestHeaderName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String GetKnownResponseHeaderName(int index) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetKnownResponseHeaderName = null;
        try {
            retObjectGetKnownResponseHeaderName = classType.Invoke("GetKnownResponseHeaderName", index);
            return (java.lang.String)retObjectGetKnownResponseHeaderName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetKnownResponseHeaderName != null ? retObjectGetKnownResponseHeaderName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetLocalAddress() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetLocalAddress = null;
        try {
            retObjectGetLocalAddress = classInstance.Invoke("GetLocalAddress");
            return (java.lang.String)retObjectGetLocalAddress;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetLocalAddress != null ? retObjectGetLocalAddress.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetPathInfo() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetPathInfo = null;
        try {
            retObjectGetPathInfo = classInstance.Invoke("GetPathInfo");
            return (java.lang.String)retObjectGetPathInfo;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetPathInfo != null ? retObjectGetPathInfo.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetProtocol() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetProtocol = null;
        try {
            retObjectGetProtocol = classInstance.Invoke("GetProtocol");
            return (java.lang.String)retObjectGetProtocol;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetProtocol != null ? retObjectGetProtocol.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetQueryString() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetQueryString = null;
        try {
            retObjectGetQueryString = classInstance.Invoke("GetQueryString");
            return (java.lang.String)retObjectGetQueryString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetQueryString != null ? retObjectGetQueryString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetRawUrl() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetRawUrl = null;
        try {
            retObjectGetRawUrl = classInstance.Invoke("GetRawUrl");
            return (java.lang.String)retObjectGetRawUrl;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetRawUrl != null ? retObjectGetRawUrl.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetRemoteAddress() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetRemoteAddress = null;
        try {
            retObjectGetRemoteAddress = classInstance.Invoke("GetRemoteAddress");
            return (java.lang.String)retObjectGetRemoteAddress;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetRemoteAddress != null ? retObjectGetRemoteAddress.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetRemoteName() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetRemoteName = null;
        try {
            retObjectGetRemoteName = classInstance.Invoke("GetRemoteName");
            return (java.lang.String)retObjectGetRemoteName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetRemoteName != null ? retObjectGetRemoteName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetServerName() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetServerName = null;
        try {
            retObjectGetServerName = classInstance.Invoke("GetServerName");
            return (java.lang.String)retObjectGetServerName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetServerName != null ? retObjectGetServerName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetServerVariable(java.lang.String name) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetServerVariable = null;
        try {
            retObjectGetServerVariable = classInstance.Invoke("GetServerVariable", name);
            return (java.lang.String)retObjectGetServerVariable;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetServerVariable != null ? retObjectGetServerVariable.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String GetStatusDescription(int code) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetStatusDescription = null;
        try {
            retObjectGetStatusDescription = classType.Invoke("GetStatusDescription", code);
            return (java.lang.String)retObjectGetStatusDescription;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetStatusDescription != null ? retObjectGetStatusDescription.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetUnknownRequestHeader(java.lang.String name) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetUnknownRequestHeader = null;
        try {
            retObjectGetUnknownRequestHeader = classInstance.Invoke("GetUnknownRequestHeader", name);
            return (java.lang.String)retObjectGetUnknownRequestHeader;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetUnknownRequestHeader != null ? retObjectGetUnknownRequestHeader.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetUriPath() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetUriPath = null;
        try {
            retObjectGetUriPath = classInstance.Invoke("GetUriPath");
            return (java.lang.String)retObjectGetUriPath;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetUriPath != null ? retObjectGetUriPath.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String MapPath(java.lang.String virtualPath) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMapPath = null;
        try {
            retObjectMapPath = classInstance.Invoke("MapPath", virtualPath);
            return (java.lang.String)retObjectMapPath;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectMapPath != null ? retObjectMapPath.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void CloseConnection() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("CloseConnection");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void EndFlush(IAsyncResult asyncResult) throws Throwable, system.NotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("EndFlush", asyncResult == null ? null : asyncResult.getJCOInstance());
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void EndOfRequest() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("EndOfRequest");
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void FlushResponse(boolean finalFlush) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("FlushResponse", finalFlush);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void SendCalculatedContentLength(int contentLength) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("SendCalculatedContentLength", contentLength);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void SendCalculatedContentLength(long contentLength) throws Throwable, system.OverflowException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("SendCalculatedContentLength", contentLength);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void SendKnownResponseHeader(int index, java.lang.String value) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("SendKnownResponseHeader", index, value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void SendResponseFromFile(java.lang.String filename, long offset, long length) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("SendResponseFromFile", filename, offset, length);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void SendResponseFromMemory(byte[] data, int length) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("SendResponseFromMemory", data, length);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void SendResponseFromMemory(JCORefOut dupParam0, int dupParam1) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("SendResponseFromMemory", dupParam0.getJCRefOut(), dupParam1);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void SendStatus(int statusCode, java.lang.String statusDescription) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("SendStatus", statusCode, statusDescription);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public void SendUnknownResponseHeader(java.lang.String name, java.lang.String value) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        try {
            classInstance.Invoke("SendUnknownResponseHeader", name, value);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    
    public boolean getSupportsAsyncFlush() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSupportsAsyncFlush = null;
        try {
            retObjectSupportsAsyncFlush = classInstance.Get("SupportsAsyncFlush");
            return (boolean)retObjectSupportsAsyncFlush;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectSupportsAsyncFlush != null ? retObjectSupportsAsyncFlush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public boolean getSupportsAsyncRead() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSupportsAsyncRead = null;
        try {
            retObjectSupportsAsyncRead = classInstance.Get("SupportsAsyncRead");
            return (boolean)retObjectSupportsAsyncRead;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectSupportsAsyncRead != null ? retObjectSupportsAsyncRead.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Guid getRequestTraceIdentifier() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectRequestTraceIdentifier = null;
        try {
            retObjectRequestTraceIdentifier = classInstance.Get("RequestTraceIdentifier");
            JCObject val = (JCObject)retObjectRequestTraceIdentifier;
            return new Guid(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectRequestTraceIdentifier != null ? retObjectRequestTraceIdentifier.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String getMachineConfigPath() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMachineConfigPath = null;
        try {
            retObjectMachineConfigPath = classInstance.Get("MachineConfigPath");
            return (java.lang.String)retObjectMachineConfigPath;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into java.lang.String", retObjectMachineConfigPath != null ? retObjectMachineConfigPath.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String getMachineInstallDirectory() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMachineInstallDirectory = null;
        try {
            retObjectMachineInstallDirectory = classInstance.Get("MachineInstallDirectory");
            return (java.lang.String)retObjectMachineInstallDirectory;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into java.lang.String", retObjectMachineInstallDirectory != null ? retObjectMachineInstallDirectory.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String getRootWebConfigPath() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectRootWebConfigPath = null;
        try {
            retObjectRootWebConfigPath = classInstance.Get("RootWebConfigPath");
            return (java.lang.String)retObjectRootWebConfigPath;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into java.lang.String", retObjectRootWebConfigPath != null ? retObjectRootWebConfigPath.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}