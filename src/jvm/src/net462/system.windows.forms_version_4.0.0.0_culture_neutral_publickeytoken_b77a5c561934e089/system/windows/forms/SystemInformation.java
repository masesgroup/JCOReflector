/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.windows.forms;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.drawing.Font;
import system.drawing.Size;
import system.drawing.Rectangle;
import system.windows.forms.ArrangeDirection;
import system.windows.forms.ArrangeStartingPosition;
import system.windows.forms.BootMode;
import system.windows.forms.LeftRightAlignment;
import system.windows.forms.PowerStatus;
import system.windows.forms.ScreenOrientation;


/**
 * The base .NET class managing System.Windows.Forms.SystemInformation, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Windows.Forms.SystemInformation" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Windows.Forms.SystemInformation</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class SystemInformation extends NetObject  {
    /**
     * Fully assembly qualified name: System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
     */
    public static final String assemblyFullName = "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089";
    /**
     * Assembly name: System.Windows.Forms
     */
    public static final String assemblyShortName = "System.Windows.Forms";
    /**
     * Qualified class name: System.Windows.Forms.SystemInformation
     */
    public static final String className = "System.Windows.Forms.SystemInformation";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public SystemInformation(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link SystemInformation}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link SystemInformation} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static SystemInformation cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new SystemInformation(from.getJCOInstance());
    }

    // Constructors section
    
    public SystemInformation() throws Throwable {
    }



    
    // Methods section
    
    public static int GetHorizontalScrollBarArrowWidthForDpi(int dpi) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.configuration.ConfigurationErrorsException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetHorizontalScrollBarArrowWidthForDpi = null;
        try {
            retObjectGetHorizontalScrollBarArrowWidthForDpi = classType.Invoke("GetHorizontalScrollBarArrowWidthForDpi", dpi);
            return (int)retObjectGetHorizontalScrollBarArrowWidthForDpi;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectGetHorizontalScrollBarArrowWidthForDpi_ToString = retObjectGetHorizontalScrollBarArrowWidthForDpi == null ? "null" : retObjectGetHorizontalScrollBarArrowWidthForDpi.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetHorizontalScrollBarArrowWidthForDpiNumber = (java.lang.Number)retObjectGetHorizontalScrollBarArrowWidthForDpi;
                return retObjectGetHorizontalScrollBarArrowWidthForDpiNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectGetHorizontalScrollBarArrowWidthForDpi != null ? retObjectGetHorizontalScrollBarArrowWidthForDpi.getClass() : "null", retObjectGetHorizontalScrollBarArrowWidthForDpi_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int GetHorizontalScrollBarHeightForDpi(int dpi) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.configuration.ConfigurationErrorsException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetHorizontalScrollBarHeightForDpi = null;
        try {
            retObjectGetHorizontalScrollBarHeightForDpi = classType.Invoke("GetHorizontalScrollBarHeightForDpi", dpi);
            return (int)retObjectGetHorizontalScrollBarHeightForDpi;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectGetHorizontalScrollBarHeightForDpi_ToString = retObjectGetHorizontalScrollBarHeightForDpi == null ? "null" : retObjectGetHorizontalScrollBarHeightForDpi.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetHorizontalScrollBarHeightForDpiNumber = (java.lang.Number)retObjectGetHorizontalScrollBarHeightForDpi;
                return retObjectGetHorizontalScrollBarHeightForDpiNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectGetHorizontalScrollBarHeightForDpi != null ? retObjectGetHorizontalScrollBarHeightForDpi.getClass() : "null", retObjectGetHorizontalScrollBarHeightForDpi_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int GetVerticalScrollBarWidthForDpi(int dpi) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.configuration.ConfigurationErrorsException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetVerticalScrollBarWidthForDpi = null;
        try {
            retObjectGetVerticalScrollBarWidthForDpi = classType.Invoke("GetVerticalScrollBarWidthForDpi", dpi);
            return (int)retObjectGetVerticalScrollBarWidthForDpi;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectGetVerticalScrollBarWidthForDpi_ToString = retObjectGetVerticalScrollBarWidthForDpi == null ? "null" : retObjectGetVerticalScrollBarWidthForDpi.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectGetVerticalScrollBarWidthForDpiNumber = (java.lang.Number)retObjectGetVerticalScrollBarWidthForDpi;
                return retObjectGetVerticalScrollBarWidthForDpiNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectGetVerticalScrollBarWidthForDpi != null ? retObjectGetVerticalScrollBarWidthForDpi.getClass() : "null", retObjectGetVerticalScrollBarWidthForDpi_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int VerticalScrollBarArrowHeightForDpi(int dpi) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalScrollBarArrowHeightForDpi = null;
        try {
            retObjectVerticalScrollBarArrowHeightForDpi = classType.Invoke("VerticalScrollBarArrowHeightForDpi", dpi);
            return (int)retObjectVerticalScrollBarArrowHeightForDpi;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVerticalScrollBarArrowHeightForDpi_ToString = retObjectVerticalScrollBarArrowHeightForDpi == null ? "null" : retObjectVerticalScrollBarArrowHeightForDpi.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVerticalScrollBarArrowHeightForDpiNumber = (java.lang.Number)retObjectVerticalScrollBarArrowHeightForDpi;
                return retObjectVerticalScrollBarArrowHeightForDpiNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectVerticalScrollBarArrowHeightForDpi != null ? retObjectVerticalScrollBarArrowHeightForDpi.getClass() : "null", retObjectVerticalScrollBarArrowHeightForDpi_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Font GetMenuFontForDpi(int dpi) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.configuration.ConfigurationErrorsException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.FormatException, system.security.SecurityException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetMenuFontForDpi = null;
        try {
            retObjectGetMenuFontForDpi = classType.Invoke("GetMenuFontForDpi", dpi);
            JCObject objGetMenuFontForDpi = (JCObject)retObjectGetMenuFontForDpi;
            return new Font(objGetMenuFontForDpi);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetMenuFontForDpi != null ? retObjectGetMenuFontForDpi.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size GetBorderSizeForDpi(int dpi) throws Throwable, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArgumentException, system.configuration.ConfigurationErrorsException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.InvalidOperationException, system.NotSupportedException, system.resources.MissingManifestResourceException, system.ObjectDisposedException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetBorderSizeForDpi = null;
        try {
            retObjectGetBorderSizeForDpi = classType.Invoke("GetBorderSizeForDpi", dpi);
            JCObject objGetBorderSizeForDpi = (JCObject)retObjectGetBorderSizeForDpi;
            return new Size(objGetBorderSizeForDpi);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetBorderSizeForDpi != null ? retObjectGetBorderSizeForDpi.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    
    public static boolean getDbcsEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDbcsEnabled = null;
        try {
            retObjectDbcsEnabled = classType.Get("DbcsEnabled");
            return (boolean)retObjectDbcsEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectDbcsEnabled != null ? retObjectDbcsEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getDebugOS() throws Throwable, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDebugOS = null;
        try {
            retObjectDebugOS = classType.Get("DebugOS");
            return (boolean)retObjectDebugOS;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectDebugOS != null ? retObjectDebugOS.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getDragFullWindows() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDragFullWindows = null;
        try {
            retObjectDragFullWindows = classType.Get("DragFullWindows");
            return (boolean)retObjectDragFullWindows;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectDragFullWindows != null ? retObjectDragFullWindows.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getHighContrast() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.NullReferenceException, system.MemberAccessException, system.IndexOutOfRangeException, system.resources.MissingManifestResourceException, system.NotImplementedException, system.ObjectDisposedException, system.InvalidOperationException, system.MulticastNotSupportedException, system.io.FileNotFoundException, system.io.DirectoryNotFoundException, system.UnauthorizedAccessException, system.io.IOException, system.io.PathTooLongException, system.io.DriveNotFoundException, system.OperationCanceledException, system.runtime.interopservices.ExternalException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighContrast = null;
        try {
            retObjectHighContrast = classType.Get("HighContrast");
            return (boolean)retObjectHighContrast;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectHighContrast != null ? retObjectHighContrast.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsActiveWindowTrackingEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsActiveWindowTrackingEnabled = null;
        try {
            retObjectIsActiveWindowTrackingEnabled = classType.Get("IsActiveWindowTrackingEnabled");
            return (boolean)retObjectIsActiveWindowTrackingEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsActiveWindowTrackingEnabled != null ? retObjectIsActiveWindowTrackingEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsComboBoxAnimationEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsComboBoxAnimationEnabled = null;
        try {
            retObjectIsComboBoxAnimationEnabled = classType.Get("IsComboBoxAnimationEnabled");
            return (boolean)retObjectIsComboBoxAnimationEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsComboBoxAnimationEnabled != null ? retObjectIsComboBoxAnimationEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsDropShadowEnabled() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsDropShadowEnabled = null;
        try {
            retObjectIsDropShadowEnabled = classType.Get("IsDropShadowEnabled");
            return (boolean)retObjectIsDropShadowEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsDropShadowEnabled != null ? retObjectIsDropShadowEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsFlatMenuEnabled() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsFlatMenuEnabled = null;
        try {
            retObjectIsFlatMenuEnabled = classType.Get("IsFlatMenuEnabled");
            return (boolean)retObjectIsFlatMenuEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsFlatMenuEnabled != null ? retObjectIsFlatMenuEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsFontSmoothingEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsFontSmoothingEnabled = null;
        try {
            retObjectIsFontSmoothingEnabled = classType.Get("IsFontSmoothingEnabled");
            return (boolean)retObjectIsFontSmoothingEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsFontSmoothingEnabled != null ? retObjectIsFontSmoothingEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsHotTrackingEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsHotTrackingEnabled = null;
        try {
            retObjectIsHotTrackingEnabled = classType.Get("IsHotTrackingEnabled");
            return (boolean)retObjectIsHotTrackingEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsHotTrackingEnabled != null ? retObjectIsHotTrackingEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsIconTitleWrappingEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsIconTitleWrappingEnabled = null;
        try {
            retObjectIsIconTitleWrappingEnabled = classType.Get("IsIconTitleWrappingEnabled");
            return (boolean)retObjectIsIconTitleWrappingEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsIconTitleWrappingEnabled != null ? retObjectIsIconTitleWrappingEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsKeyboardPreferred() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsKeyboardPreferred = null;
        try {
            retObjectIsKeyboardPreferred = classType.Get("IsKeyboardPreferred");
            return (boolean)retObjectIsKeyboardPreferred;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsKeyboardPreferred != null ? retObjectIsKeyboardPreferred.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsListBoxSmoothScrollingEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsListBoxSmoothScrollingEnabled = null;
        try {
            retObjectIsListBoxSmoothScrollingEnabled = classType.Get("IsListBoxSmoothScrollingEnabled");
            return (boolean)retObjectIsListBoxSmoothScrollingEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsListBoxSmoothScrollingEnabled != null ? retObjectIsListBoxSmoothScrollingEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsMenuAnimationEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMenuAnimationEnabled = null;
        try {
            retObjectIsMenuAnimationEnabled = classType.Get("IsMenuAnimationEnabled");
            return (boolean)retObjectIsMenuAnimationEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsMenuAnimationEnabled != null ? retObjectIsMenuAnimationEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsMenuFadeEnabled() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMenuFadeEnabled = null;
        try {
            retObjectIsMenuFadeEnabled = classType.Get("IsMenuFadeEnabled");
            return (boolean)retObjectIsMenuFadeEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsMenuFadeEnabled != null ? retObjectIsMenuFadeEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsMinimizeRestoreAnimationEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMinimizeRestoreAnimationEnabled = null;
        try {
            retObjectIsMinimizeRestoreAnimationEnabled = classType.Get("IsMinimizeRestoreAnimationEnabled");
            return (boolean)retObjectIsMinimizeRestoreAnimationEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsMinimizeRestoreAnimationEnabled != null ? retObjectIsMinimizeRestoreAnimationEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsSelectionFadeEnabled() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsSelectionFadeEnabled = null;
        try {
            retObjectIsSelectionFadeEnabled = classType.Get("IsSelectionFadeEnabled");
            return (boolean)retObjectIsSelectionFadeEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsSelectionFadeEnabled != null ? retObjectIsSelectionFadeEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsSnapToDefaultEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsSnapToDefaultEnabled = null;
        try {
            retObjectIsSnapToDefaultEnabled = classType.Get("IsSnapToDefaultEnabled");
            return (boolean)retObjectIsSnapToDefaultEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsSnapToDefaultEnabled != null ? retObjectIsSnapToDefaultEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsTitleBarGradientEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsTitleBarGradientEnabled = null;
        try {
            retObjectIsTitleBarGradientEnabled = classType.Get("IsTitleBarGradientEnabled");
            return (boolean)retObjectIsTitleBarGradientEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsTitleBarGradientEnabled != null ? retObjectIsTitleBarGradientEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsToolTipAnimationEnabled() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsToolTipAnimationEnabled = null;
        try {
            retObjectIsToolTipAnimationEnabled = classType.Get("IsToolTipAnimationEnabled");
            return (boolean)retObjectIsToolTipAnimationEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsToolTipAnimationEnabled != null ? retObjectIsToolTipAnimationEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getMenuAccessKeysUnderlined() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuAccessKeysUnderlined = null;
        try {
            retObjectMenuAccessKeysUnderlined = classType.Get("MenuAccessKeysUnderlined");
            return (boolean)retObjectMenuAccessKeysUnderlined;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectMenuAccessKeysUnderlined != null ? retObjectMenuAccessKeysUnderlined.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getMidEastEnabled() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMidEastEnabled = null;
        try {
            retObjectMidEastEnabled = classType.Get("MidEastEnabled");
            return (boolean)retObjectMidEastEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectMidEastEnabled != null ? retObjectMidEastEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getMonitorsSameDisplayFormat() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMonitorsSameDisplayFormat = null;
        try {
            retObjectMonitorsSameDisplayFormat = classType.Get("MonitorsSameDisplayFormat");
            return (boolean)retObjectMonitorsSameDisplayFormat;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectMonitorsSameDisplayFormat != null ? retObjectMonitorsSameDisplayFormat.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getMouseButtonsSwapped() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseButtonsSwapped = null;
        try {
            retObjectMouseButtonsSwapped = classType.Get("MouseButtonsSwapped");
            return (boolean)retObjectMouseButtonsSwapped;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectMouseButtonsSwapped != null ? retObjectMouseButtonsSwapped.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getMousePresent() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMousePresent = null;
        try {
            retObjectMousePresent = classType.Get("MousePresent");
            return (boolean)retObjectMousePresent;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectMousePresent != null ? retObjectMousePresent.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getMouseWheelPresent() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseWheelPresent = null;
        try {
            retObjectMouseWheelPresent = classType.Get("MouseWheelPresent");
            return (boolean)retObjectMouseWheelPresent;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectMouseWheelPresent != null ? retObjectMouseWheelPresent.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getNativeMouseWheelSupport() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectNativeMouseWheelSupport = null;
        try {
            retObjectNativeMouseWheelSupport = classType.Get("NativeMouseWheelSupport");
            return (boolean)retObjectNativeMouseWheelSupport;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectNativeMouseWheelSupport != null ? retObjectNativeMouseWheelSupport.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getNetwork() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectNetwork = null;
        try {
            retObjectNetwork = classType.Get("Network");
            return (boolean)retObjectNetwork;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectNetwork != null ? retObjectNetwork.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getPenWindows() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPenWindows = null;
        try {
            retObjectPenWindows = classType.Get("PenWindows");
            return (boolean)retObjectPenWindows;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectPenWindows != null ? retObjectPenWindows.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getRightAlignedMenus() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectRightAlignedMenus = null;
        try {
            retObjectRightAlignedMenus = classType.Get("RightAlignedMenus");
            return (boolean)retObjectRightAlignedMenus;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectRightAlignedMenus != null ? retObjectRightAlignedMenus.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getSecure() throws Throwable, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSecure = null;
        try {
            retObjectSecure = classType.Get("Secure");
            return (boolean)retObjectSecure;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectSecure != null ? retObjectSecure.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getShowSounds() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectShowSounds = null;
        try {
            retObjectShowSounds = classType.Get("ShowSounds");
            return (boolean)retObjectShowSounds;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectShowSounds != null ? retObjectShowSounds.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getTerminalServerSession() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectTerminalServerSession = null;
        try {
            retObjectTerminalServerSession = classType.Get("TerminalServerSession");
            return (boolean)retObjectTerminalServerSession;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectTerminalServerSession != null ? retObjectTerminalServerSession.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getUIEffectsEnabled() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUIEffectsEnabled = null;
        try {
            retObjectUIEffectsEnabled = classType.Get("UIEffectsEnabled");
            return (boolean)retObjectUIEffectsEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectUIEffectsEnabled != null ? retObjectUIEffectsEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getUserInteractive() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.MissingMethodException, system.reflection.TargetInvocationException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUserInteractive = null;
        try {
            retObjectUserInteractive = classType.Get("UserInteractive");
            return (boolean)retObjectUserInteractive;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectUserInteractive != null ? retObjectUserInteractive.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getActiveWindowTrackingDelay() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectActiveWindowTrackingDelay = null;
        try {
            retObjectActiveWindowTrackingDelay = classType.Get("ActiveWindowTrackingDelay");
            return (int)retObjectActiveWindowTrackingDelay;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectActiveWindowTrackingDelay_ToString = retObjectActiveWindowTrackingDelay == null ? "null" : retObjectActiveWindowTrackingDelay.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectActiveWindowTrackingDelayNumber = (java.lang.Number)retObjectActiveWindowTrackingDelay;
                return retObjectActiveWindowTrackingDelayNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectActiveWindowTrackingDelay != null ? retObjectActiveWindowTrackingDelay.getClass() : "null", retObjectActiveWindowTrackingDelay_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getBorderMultiplierFactor() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectBorderMultiplierFactor = null;
        try {
            retObjectBorderMultiplierFactor = classType.Get("BorderMultiplierFactor");
            return (int)retObjectBorderMultiplierFactor;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectBorderMultiplierFactor_ToString = retObjectBorderMultiplierFactor == null ? "null" : retObjectBorderMultiplierFactor.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectBorderMultiplierFactorNumber = (java.lang.Number)retObjectBorderMultiplierFactor;
                return retObjectBorderMultiplierFactorNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectBorderMultiplierFactor != null ? retObjectBorderMultiplierFactor.getClass() : "null", retObjectBorderMultiplierFactor_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getCaptionHeight() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionHeight = null;
        try {
            retObjectCaptionHeight = classType.Get("CaptionHeight");
            return (int)retObjectCaptionHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectCaptionHeight_ToString = retObjectCaptionHeight == null ? "null" : retObjectCaptionHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectCaptionHeightNumber = (java.lang.Number)retObjectCaptionHeight;
                return retObjectCaptionHeightNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectCaptionHeight != null ? retObjectCaptionHeight.getClass() : "null", retObjectCaptionHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getCaretBlinkTime() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaretBlinkTime = null;
        try {
            retObjectCaretBlinkTime = classType.Get("CaretBlinkTime");
            return (int)retObjectCaretBlinkTime;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectCaretBlinkTime_ToString = retObjectCaretBlinkTime == null ? "null" : retObjectCaretBlinkTime.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectCaretBlinkTimeNumber = (java.lang.Number)retObjectCaretBlinkTime;
                return retObjectCaretBlinkTimeNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectCaretBlinkTime != null ? retObjectCaretBlinkTime.getClass() : "null", retObjectCaretBlinkTime_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getCaretWidth() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException, system.NotImplementedException, system.NotSupportedException, system.globalization.CultureNotFoundException, system.resources.MissingManifestResourceException, system.ObjectDisposedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaretWidth = null;
        try {
            retObjectCaretWidth = classType.Get("CaretWidth");
            return (int)retObjectCaretWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectCaretWidth_ToString = retObjectCaretWidth == null ? "null" : retObjectCaretWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectCaretWidthNumber = (java.lang.Number)retObjectCaretWidth;
                return retObjectCaretWidthNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectCaretWidth != null ? retObjectCaretWidth.getClass() : "null", retObjectCaretWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getDoubleClickTime() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDoubleClickTime = null;
        try {
            retObjectDoubleClickTime = classType.Get("DoubleClickTime");
            return (int)retObjectDoubleClickTime;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectDoubleClickTime_ToString = retObjectDoubleClickTime == null ? "null" : retObjectDoubleClickTime.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectDoubleClickTimeNumber = (java.lang.Number)retObjectDoubleClickTime;
                return retObjectDoubleClickTimeNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectDoubleClickTime != null ? retObjectDoubleClickTime.getClass() : "null", retObjectDoubleClickTime_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getFontSmoothingContrast() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException, system.NotImplementedException, system.NotSupportedException, system.globalization.CultureNotFoundException, system.resources.MissingManifestResourceException, system.ObjectDisposedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFontSmoothingContrast = null;
        try {
            retObjectFontSmoothingContrast = classType.Get("FontSmoothingContrast");
            return (int)retObjectFontSmoothingContrast;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectFontSmoothingContrast_ToString = retObjectFontSmoothingContrast == null ? "null" : retObjectFontSmoothingContrast.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectFontSmoothingContrastNumber = (java.lang.Number)retObjectFontSmoothingContrast;
                return retObjectFontSmoothingContrastNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectFontSmoothingContrast != null ? retObjectFontSmoothingContrast.getClass() : "null", retObjectFontSmoothingContrast_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getFontSmoothingType() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException, system.NotImplementedException, system.NotSupportedException, system.globalization.CultureNotFoundException, system.resources.MissingManifestResourceException, system.ObjectDisposedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFontSmoothingType = null;
        try {
            retObjectFontSmoothingType = classType.Get("FontSmoothingType");
            return (int)retObjectFontSmoothingType;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectFontSmoothingType_ToString = retObjectFontSmoothingType == null ? "null" : retObjectFontSmoothingType.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectFontSmoothingTypeNumber = (java.lang.Number)retObjectFontSmoothingType;
                return retObjectFontSmoothingTypeNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectFontSmoothingType != null ? retObjectFontSmoothingType.getClass() : "null", retObjectFontSmoothingType_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getHorizontalFocusThickness() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException, system.NotImplementedException, system.NotSupportedException, system.globalization.CultureNotFoundException, system.resources.MissingManifestResourceException, system.ObjectDisposedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalFocusThickness = null;
        try {
            retObjectHorizontalFocusThickness = classType.Get("HorizontalFocusThickness");
            return (int)retObjectHorizontalFocusThickness;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectHorizontalFocusThickness_ToString = retObjectHorizontalFocusThickness == null ? "null" : retObjectHorizontalFocusThickness.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectHorizontalFocusThicknessNumber = (java.lang.Number)retObjectHorizontalFocusThickness;
                return retObjectHorizontalFocusThicknessNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectHorizontalFocusThickness != null ? retObjectHorizontalFocusThickness.getClass() : "null", retObjectHorizontalFocusThickness_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getHorizontalResizeBorderThickness() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalResizeBorderThickness = null;
        try {
            retObjectHorizontalResizeBorderThickness = classType.Get("HorizontalResizeBorderThickness");
            return (int)retObjectHorizontalResizeBorderThickness;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectHorizontalResizeBorderThickness_ToString = retObjectHorizontalResizeBorderThickness == null ? "null" : retObjectHorizontalResizeBorderThickness.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectHorizontalResizeBorderThicknessNumber = (java.lang.Number)retObjectHorizontalResizeBorderThickness;
                return retObjectHorizontalResizeBorderThicknessNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectHorizontalResizeBorderThickness != null ? retObjectHorizontalResizeBorderThickness.getClass() : "null", retObjectHorizontalResizeBorderThickness_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getHorizontalScrollBarArrowWidth() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalScrollBarArrowWidth = null;
        try {
            retObjectHorizontalScrollBarArrowWidth = classType.Get("HorizontalScrollBarArrowWidth");
            return (int)retObjectHorizontalScrollBarArrowWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectHorizontalScrollBarArrowWidth_ToString = retObjectHorizontalScrollBarArrowWidth == null ? "null" : retObjectHorizontalScrollBarArrowWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectHorizontalScrollBarArrowWidthNumber = (java.lang.Number)retObjectHorizontalScrollBarArrowWidth;
                return retObjectHorizontalScrollBarArrowWidthNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectHorizontalScrollBarArrowWidth != null ? retObjectHorizontalScrollBarArrowWidth.getClass() : "null", retObjectHorizontalScrollBarArrowWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getHorizontalScrollBarHeight() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalScrollBarHeight = null;
        try {
            retObjectHorizontalScrollBarHeight = classType.Get("HorizontalScrollBarHeight");
            return (int)retObjectHorizontalScrollBarHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectHorizontalScrollBarHeight_ToString = retObjectHorizontalScrollBarHeight == null ? "null" : retObjectHorizontalScrollBarHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectHorizontalScrollBarHeightNumber = (java.lang.Number)retObjectHorizontalScrollBarHeight;
                return retObjectHorizontalScrollBarHeightNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectHorizontalScrollBarHeight != null ? retObjectHorizontalScrollBarHeight.getClass() : "null", retObjectHorizontalScrollBarHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getHorizontalScrollBarThumbWidth() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalScrollBarThumbWidth = null;
        try {
            retObjectHorizontalScrollBarThumbWidth = classType.Get("HorizontalScrollBarThumbWidth");
            return (int)retObjectHorizontalScrollBarThumbWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectHorizontalScrollBarThumbWidth_ToString = retObjectHorizontalScrollBarThumbWidth == null ? "null" : retObjectHorizontalScrollBarThumbWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectHorizontalScrollBarThumbWidthNumber = (java.lang.Number)retObjectHorizontalScrollBarThumbWidth;
                return retObjectHorizontalScrollBarThumbWidthNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectHorizontalScrollBarThumbWidth != null ? retObjectHorizontalScrollBarThumbWidth.getClass() : "null", retObjectHorizontalScrollBarThumbWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getIconHorizontalSpacing() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconHorizontalSpacing = null;
        try {
            retObjectIconHorizontalSpacing = classType.Get("IconHorizontalSpacing");
            return (int)retObjectIconHorizontalSpacing;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectIconHorizontalSpacing_ToString = retObjectIconHorizontalSpacing == null ? "null" : retObjectIconHorizontalSpacing.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectIconHorizontalSpacingNumber = (java.lang.Number)retObjectIconHorizontalSpacing;
                return retObjectIconHorizontalSpacingNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectIconHorizontalSpacing != null ? retObjectIconHorizontalSpacing.getClass() : "null", retObjectIconHorizontalSpacing_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getIconVerticalSpacing() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconVerticalSpacing = null;
        try {
            retObjectIconVerticalSpacing = classType.Get("IconVerticalSpacing");
            return (int)retObjectIconVerticalSpacing;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectIconVerticalSpacing_ToString = retObjectIconVerticalSpacing == null ? "null" : retObjectIconVerticalSpacing.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectIconVerticalSpacingNumber = (java.lang.Number)retObjectIconVerticalSpacing;
                return retObjectIconVerticalSpacingNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectIconVerticalSpacing != null ? retObjectIconVerticalSpacing.getClass() : "null", retObjectIconVerticalSpacing_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getKanjiWindowHeight() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKanjiWindowHeight = null;
        try {
            retObjectKanjiWindowHeight = classType.Get("KanjiWindowHeight");
            return (int)retObjectKanjiWindowHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectKanjiWindowHeight_ToString = retObjectKanjiWindowHeight == null ? "null" : retObjectKanjiWindowHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectKanjiWindowHeightNumber = (java.lang.Number)retObjectKanjiWindowHeight;
                return retObjectKanjiWindowHeightNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectKanjiWindowHeight != null ? retObjectKanjiWindowHeight.getClass() : "null", retObjectKanjiWindowHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getKeyboardDelay() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKeyboardDelay = null;
        try {
            retObjectKeyboardDelay = classType.Get("KeyboardDelay");
            return (int)retObjectKeyboardDelay;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectKeyboardDelay_ToString = retObjectKeyboardDelay == null ? "null" : retObjectKeyboardDelay.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectKeyboardDelayNumber = (java.lang.Number)retObjectKeyboardDelay;
                return retObjectKeyboardDelayNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectKeyboardDelay != null ? retObjectKeyboardDelay.getClass() : "null", retObjectKeyboardDelay_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getKeyboardSpeed() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKeyboardSpeed = null;
        try {
            retObjectKeyboardSpeed = classType.Get("KeyboardSpeed");
            return (int)retObjectKeyboardSpeed;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectKeyboardSpeed_ToString = retObjectKeyboardSpeed == null ? "null" : retObjectKeyboardSpeed.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectKeyboardSpeedNumber = (java.lang.Number)retObjectKeyboardSpeed;
                return retObjectKeyboardSpeedNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectKeyboardSpeed != null ? retObjectKeyboardSpeed.getClass() : "null", retObjectKeyboardSpeed_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getMenuHeight() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuHeight = null;
        try {
            retObjectMenuHeight = classType.Get("MenuHeight");
            return (int)retObjectMenuHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuHeight_ToString = retObjectMenuHeight == null ? "null" : retObjectMenuHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuHeightNumber = (java.lang.Number)retObjectMenuHeight;
                return retObjectMenuHeightNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectMenuHeight != null ? retObjectMenuHeight.getClass() : "null", retObjectMenuHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getMenuShowDelay() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuShowDelay = null;
        try {
            retObjectMenuShowDelay = classType.Get("MenuShowDelay");
            return (int)retObjectMenuShowDelay;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuShowDelay_ToString = retObjectMenuShowDelay == null ? "null" : retObjectMenuShowDelay.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuShowDelayNumber = (java.lang.Number)retObjectMenuShowDelay;
                return retObjectMenuShowDelayNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectMenuShowDelay != null ? retObjectMenuShowDelay.getClass() : "null", retObjectMenuShowDelay_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getMonitorCount() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMonitorCount = null;
        try {
            retObjectMonitorCount = classType.Get("MonitorCount");
            return (int)retObjectMonitorCount;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMonitorCount_ToString = retObjectMonitorCount == null ? "null" : retObjectMonitorCount.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMonitorCountNumber = (java.lang.Number)retObjectMonitorCount;
                return retObjectMonitorCountNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectMonitorCount != null ? retObjectMonitorCount.getClass() : "null", retObjectMonitorCount_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getMouseButtons() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseButtons = null;
        try {
            retObjectMouseButtons = classType.Get("MouseButtons");
            return (int)retObjectMouseButtons;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMouseButtons_ToString = retObjectMouseButtons == null ? "null" : retObjectMouseButtons.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMouseButtonsNumber = (java.lang.Number)retObjectMouseButtons;
                return retObjectMouseButtonsNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectMouseButtons != null ? retObjectMouseButtons.getClass() : "null", retObjectMouseButtons_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getMouseHoverTime() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseHoverTime = null;
        try {
            retObjectMouseHoverTime = classType.Get("MouseHoverTime");
            return (int)retObjectMouseHoverTime;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMouseHoverTime_ToString = retObjectMouseHoverTime == null ? "null" : retObjectMouseHoverTime.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMouseHoverTimeNumber = (java.lang.Number)retObjectMouseHoverTime;
                return retObjectMouseHoverTimeNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectMouseHoverTime != null ? retObjectMouseHoverTime.getClass() : "null", retObjectMouseHoverTime_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getMouseSpeed() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseSpeed = null;
        try {
            retObjectMouseSpeed = classType.Get("MouseSpeed");
            return (int)retObjectMouseSpeed;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMouseSpeed_ToString = retObjectMouseSpeed == null ? "null" : retObjectMouseSpeed.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMouseSpeedNumber = (java.lang.Number)retObjectMouseSpeed;
                return retObjectMouseSpeedNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectMouseSpeed != null ? retObjectMouseSpeed.getClass() : "null", retObjectMouseSpeed_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getMouseWheelScrollDelta() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseWheelScrollDelta = null;
        try {
            retObjectMouseWheelScrollDelta = classType.Get("MouseWheelScrollDelta");
            return (int)retObjectMouseWheelScrollDelta;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMouseWheelScrollDelta_ToString = retObjectMouseWheelScrollDelta == null ? "null" : retObjectMouseWheelScrollDelta.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMouseWheelScrollDeltaNumber = (java.lang.Number)retObjectMouseWheelScrollDelta;
                return retObjectMouseWheelScrollDeltaNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectMouseWheelScrollDelta != null ? retObjectMouseWheelScrollDelta.getClass() : "null", retObjectMouseWheelScrollDelta_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getMouseWheelScrollLines() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseWheelScrollLines = null;
        try {
            retObjectMouseWheelScrollLines = classType.Get("MouseWheelScrollLines");
            return (int)retObjectMouseWheelScrollLines;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMouseWheelScrollLines_ToString = retObjectMouseWheelScrollLines == null ? "null" : retObjectMouseWheelScrollLines.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMouseWheelScrollLinesNumber = (java.lang.Number)retObjectMouseWheelScrollLines;
                return retObjectMouseWheelScrollLinesNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectMouseWheelScrollLines != null ? retObjectMouseWheelScrollLines.getClass() : "null", retObjectMouseWheelScrollLines_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getSizingBorderWidth() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSizingBorderWidth = null;
        try {
            retObjectSizingBorderWidth = classType.Get("SizingBorderWidth");
            return (int)retObjectSizingBorderWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectSizingBorderWidth_ToString = retObjectSizingBorderWidth == null ? "null" : retObjectSizingBorderWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectSizingBorderWidthNumber = (java.lang.Number)retObjectSizingBorderWidth;
                return retObjectSizingBorderWidthNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectSizingBorderWidth != null ? retObjectSizingBorderWidth.getClass() : "null", retObjectSizingBorderWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getToolWindowCaptionHeight() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToolWindowCaptionHeight = null;
        try {
            retObjectToolWindowCaptionHeight = classType.Get("ToolWindowCaptionHeight");
            return (int)retObjectToolWindowCaptionHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectToolWindowCaptionHeight_ToString = retObjectToolWindowCaptionHeight == null ? "null" : retObjectToolWindowCaptionHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToolWindowCaptionHeightNumber = (java.lang.Number)retObjectToolWindowCaptionHeight;
                return retObjectToolWindowCaptionHeightNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectToolWindowCaptionHeight != null ? retObjectToolWindowCaptionHeight.getClass() : "null", retObjectToolWindowCaptionHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getVerticalFocusThickness() throws Throwable, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.FormatException, system.NotImplementedException, system.NotSupportedException, system.globalization.CultureNotFoundException, system.resources.MissingManifestResourceException, system.ObjectDisposedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalFocusThickness = null;
        try {
            retObjectVerticalFocusThickness = classType.Get("VerticalFocusThickness");
            return (int)retObjectVerticalFocusThickness;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVerticalFocusThickness_ToString = retObjectVerticalFocusThickness == null ? "null" : retObjectVerticalFocusThickness.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVerticalFocusThicknessNumber = (java.lang.Number)retObjectVerticalFocusThickness;
                return retObjectVerticalFocusThicknessNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectVerticalFocusThickness != null ? retObjectVerticalFocusThickness.getClass() : "null", retObjectVerticalFocusThickness_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getVerticalResizeBorderThickness() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalResizeBorderThickness = null;
        try {
            retObjectVerticalResizeBorderThickness = classType.Get("VerticalResizeBorderThickness");
            return (int)retObjectVerticalResizeBorderThickness;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVerticalResizeBorderThickness_ToString = retObjectVerticalResizeBorderThickness == null ? "null" : retObjectVerticalResizeBorderThickness.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVerticalResizeBorderThicknessNumber = (java.lang.Number)retObjectVerticalResizeBorderThickness;
                return retObjectVerticalResizeBorderThicknessNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectVerticalResizeBorderThickness != null ? retObjectVerticalResizeBorderThickness.getClass() : "null", retObjectVerticalResizeBorderThickness_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getVerticalScrollBarArrowHeight() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalScrollBarArrowHeight = null;
        try {
            retObjectVerticalScrollBarArrowHeight = classType.Get("VerticalScrollBarArrowHeight");
            return (int)retObjectVerticalScrollBarArrowHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVerticalScrollBarArrowHeight_ToString = retObjectVerticalScrollBarArrowHeight == null ? "null" : retObjectVerticalScrollBarArrowHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVerticalScrollBarArrowHeightNumber = (java.lang.Number)retObjectVerticalScrollBarArrowHeight;
                return retObjectVerticalScrollBarArrowHeightNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectVerticalScrollBarArrowHeight != null ? retObjectVerticalScrollBarArrowHeight.getClass() : "null", retObjectVerticalScrollBarArrowHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getVerticalScrollBarThumbHeight() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalScrollBarThumbHeight = null;
        try {
            retObjectVerticalScrollBarThumbHeight = classType.Get("VerticalScrollBarThumbHeight");
            return (int)retObjectVerticalScrollBarThumbHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVerticalScrollBarThumbHeight_ToString = retObjectVerticalScrollBarThumbHeight == null ? "null" : retObjectVerticalScrollBarThumbHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVerticalScrollBarThumbHeightNumber = (java.lang.Number)retObjectVerticalScrollBarThumbHeight;
                return retObjectVerticalScrollBarThumbHeightNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectVerticalScrollBarThumbHeight != null ? retObjectVerticalScrollBarThumbHeight.getClass() : "null", retObjectVerticalScrollBarThumbHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getVerticalScrollBarWidth() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalScrollBarWidth = null;
        try {
            retObjectVerticalScrollBarWidth = classType.Get("VerticalScrollBarWidth");
            return (int)retObjectVerticalScrollBarWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVerticalScrollBarWidth_ToString = retObjectVerticalScrollBarWidth == null ? "null" : retObjectVerticalScrollBarWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVerticalScrollBarWidthNumber = (java.lang.Number)retObjectVerticalScrollBarWidth;
                return retObjectVerticalScrollBarWidthNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectVerticalScrollBarWidth != null ? retObjectVerticalScrollBarWidth.getClass() : "null", retObjectVerticalScrollBarWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Font getMenuFont() throws Throwable, system.ArgumentNullException, system.ArgumentException, system.FormatException, system.security.SecurityException, system.NotSupportedException, system.ObjectDisposedException, system.threading.AbandonedMutexException, system.NotImplementedException, system.resources.MissingManifestResourceException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFont = null;
        try {
            retObjectMenuFont = classType.Get("MenuFont");
            JCObject val = (JCObject)retObjectMenuFont;
            return new Font(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFont != null ? retObjectMenuFont.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Rectangle getVirtualScreen() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVirtualScreen = null;
        try {
            retObjectVirtualScreen = classType.Get("VirtualScreen");
            JCObject val = (JCObject)retObjectVirtualScreen;
            return new Rectangle(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectVirtualScreen != null ? retObjectVirtualScreen.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Rectangle getWorkingArea() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWorkingArea = null;
        try {
            retObjectWorkingArea = classType.Get("WorkingArea");
            JCObject val = (JCObject)retObjectWorkingArea;
            return new Rectangle(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWorkingArea != null ? retObjectWorkingArea.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getBorder3DSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectBorder3DSize = null;
        try {
            retObjectBorder3DSize = classType.Get("Border3DSize");
            JCObject val = (JCObject)retObjectBorder3DSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBorder3DSize != null ? retObjectBorder3DSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getBorderSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectBorderSize = null;
        try {
            retObjectBorderSize = classType.Get("BorderSize");
            JCObject val = (JCObject)retObjectBorderSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBorderSize != null ? retObjectBorderSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getCaptionButtonSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionButtonSize = null;
        try {
            retObjectCaptionButtonSize = classType.Get("CaptionButtonSize");
            JCObject val = (JCObject)retObjectCaptionButtonSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionButtonSize != null ? retObjectCaptionButtonSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getCursorSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCursorSize = null;
        try {
            retObjectCursorSize = classType.Get("CursorSize");
            JCObject val = (JCObject)retObjectCursorSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCursorSize != null ? retObjectCursorSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getDoubleClickSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDoubleClickSize = null;
        try {
            retObjectDoubleClickSize = classType.Get("DoubleClickSize");
            JCObject val = (JCObject)retObjectDoubleClickSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDoubleClickSize != null ? retObjectDoubleClickSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getDragSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDragSize = null;
        try {
            retObjectDragSize = classType.Get("DragSize");
            JCObject val = (JCObject)retObjectDragSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDragSize != null ? retObjectDragSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getFixedFrameBorderSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFixedFrameBorderSize = null;
        try {
            retObjectFixedFrameBorderSize = classType.Get("FixedFrameBorderSize");
            JCObject val = (JCObject)retObjectFixedFrameBorderSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFixedFrameBorderSize != null ? retObjectFixedFrameBorderSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getFrameBorderSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFrameBorderSize = null;
        try {
            retObjectFrameBorderSize = classType.Get("FrameBorderSize");
            JCObject val = (JCObject)retObjectFrameBorderSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFrameBorderSize != null ? retObjectFrameBorderSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getIconSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconSize = null;
        try {
            retObjectIconSize = classType.Get("IconSize");
            JCObject val = (JCObject)retObjectIconSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconSize != null ? retObjectIconSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getIconSpacingSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconSpacingSize = null;
        try {
            retObjectIconSpacingSize = classType.Get("IconSpacingSize");
            JCObject val = (JCObject)retObjectIconSpacingSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconSpacingSize != null ? retObjectIconSpacingSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getMaxWindowTrackSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMaxWindowTrackSize = null;
        try {
            retObjectMaxWindowTrackSize = classType.Get("MaxWindowTrackSize");
            JCObject val = (JCObject)retObjectMaxWindowTrackSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMaxWindowTrackSize != null ? retObjectMaxWindowTrackSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getMenuBarButtonSize() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuBarButtonSize = null;
        try {
            retObjectMenuBarButtonSize = classType.Get("MenuBarButtonSize");
            JCObject val = (JCObject)retObjectMenuBarButtonSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuBarButtonSize != null ? retObjectMenuBarButtonSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getMenuButtonSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuButtonSize = null;
        try {
            retObjectMenuButtonSize = classType.Get("MenuButtonSize");
            JCObject val = (JCObject)retObjectMenuButtonSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuButtonSize != null ? retObjectMenuButtonSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getMenuCheckSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuCheckSize = null;
        try {
            retObjectMenuCheckSize = classType.Get("MenuCheckSize");
            JCObject val = (JCObject)retObjectMenuCheckSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuCheckSize != null ? retObjectMenuCheckSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getMinimizedWindowSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizedWindowSize = null;
        try {
            retObjectMinimizedWindowSize = classType.Get("MinimizedWindowSize");
            JCObject val = (JCObject)retObjectMinimizedWindowSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimizedWindowSize != null ? retObjectMinimizedWindowSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getMinimizedWindowSpacingSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizedWindowSpacingSize = null;
        try {
            retObjectMinimizedWindowSpacingSize = classType.Get("MinimizedWindowSpacingSize");
            JCObject val = (JCObject)retObjectMinimizedWindowSpacingSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimizedWindowSpacingSize != null ? retObjectMinimizedWindowSpacingSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getMinimumWindowSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumWindowSize = null;
        try {
            retObjectMinimumWindowSize = classType.Get("MinimumWindowSize");
            JCObject val = (JCObject)retObjectMinimumWindowSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimumWindowSize != null ? retObjectMinimumWindowSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getMinWindowTrackSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinWindowTrackSize = null;
        try {
            retObjectMinWindowTrackSize = classType.Get("MinWindowTrackSize");
            JCObject val = (JCObject)retObjectMinWindowTrackSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinWindowTrackSize != null ? retObjectMinWindowTrackSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getMouseHoverSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseHoverSize = null;
        try {
            retObjectMouseHoverSize = classType.Get("MouseHoverSize");
            JCObject val = (JCObject)retObjectMouseHoverSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMouseHoverSize != null ? retObjectMouseHoverSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getPrimaryMonitorMaximizedWindowSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPrimaryMonitorMaximizedWindowSize = null;
        try {
            retObjectPrimaryMonitorMaximizedWindowSize = classType.Get("PrimaryMonitorMaximizedWindowSize");
            JCObject val = (JCObject)retObjectPrimaryMonitorMaximizedWindowSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPrimaryMonitorMaximizedWindowSize != null ? retObjectPrimaryMonitorMaximizedWindowSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getPrimaryMonitorSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPrimaryMonitorSize = null;
        try {
            retObjectPrimaryMonitorSize = classType.Get("PrimaryMonitorSize");
            JCObject val = (JCObject)retObjectPrimaryMonitorSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPrimaryMonitorSize != null ? retObjectPrimaryMonitorSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getSmallCaptionButtonSize() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionButtonSize = null;
        try {
            retObjectSmallCaptionButtonSize = classType.Get("SmallCaptionButtonSize");
            JCObject val = (JCObject)retObjectSmallCaptionButtonSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionButtonSize != null ? retObjectSmallCaptionButtonSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getSmallIconSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallIconSize = null;
        try {
            retObjectSmallIconSize = classType.Get("SmallIconSize");
            JCObject val = (JCObject)retObjectSmallIconSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallIconSize != null ? retObjectSmallIconSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Size getToolWindowCaptionButtonSize() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToolWindowCaptionButtonSize = null;
        try {
            retObjectToolWindowCaptionButtonSize = classType.Get("ToolWindowCaptionButtonSize");
            JCObject val = (JCObject)retObjectToolWindowCaptionButtonSize;
            return new Size(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToolWindowCaptionButtonSize != null ? retObjectToolWindowCaptionButtonSize.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String getComputerName() throws Throwable, system.ArgumentException, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectComputerName = null;
        try {
            retObjectComputerName = classType.Get("ComputerName");
            return (java.lang.String)retObjectComputerName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into java.lang.String", retObjectComputerName != null ? retObjectComputerName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String getUserDomainName() throws Throwable, system.ArgumentNullException, system.FormatException, system.ArgumentException, system.IndexOutOfRangeException, system.NullReferenceException, system.ArgumentOutOfRangeException, system.NotSupportedException, system.InvalidOperationException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUserDomainName = null;
        try {
            retObjectUserDomainName = classType.Get("UserDomainName");
            return (java.lang.String)retObjectUserDomainName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into java.lang.String", retObjectUserDomainName != null ? retObjectUserDomainName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String getUserName() throws Throwable, system.ArgumentException, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUserName = null;
        try {
            retObjectUserName = classType.Get("UserName");
            return (java.lang.String)retObjectUserName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into java.lang.String", retObjectUserName != null ? retObjectUserName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ArrangeDirection getArrangeDirection() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectArrangeDirection = null;
        try {
            retObjectArrangeDirection = classType.Get("ArrangeDirection");
            JCObject val = (JCObject)retObjectArrangeDirection;
            return new ArrangeDirection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectArrangeDirection != null ? retObjectArrangeDirection.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ArrangeStartingPosition getArrangeStartingPosition() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectArrangeStartingPosition = null;
        try {
            retObjectArrangeStartingPosition = classType.Get("ArrangeStartingPosition");
            JCObject val = (JCObject)retObjectArrangeStartingPosition;
            return new ArrangeStartingPosition(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectArrangeStartingPosition != null ? retObjectArrangeStartingPosition.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static BootMode getBootMode() throws Throwable, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectBootMode = null;
        try {
            retObjectBootMode = classType.Get("BootMode");
            JCObject val = (JCObject)retObjectBootMode;
            return new BootMode(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBootMode != null ? retObjectBootMode.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static LeftRightAlignment getPopupMenuAlignment() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPopupMenuAlignment = null;
        try {
            retObjectPopupMenuAlignment = classType.Get("PopupMenuAlignment");
            JCObject val = (JCObject)retObjectPopupMenuAlignment;
            return new LeftRightAlignment(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPopupMenuAlignment != null ? retObjectPopupMenuAlignment.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PowerStatus getPowerStatus() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPowerStatus = null;
        try {
            retObjectPowerStatus = classType.Get("PowerStatus");
            JCObject val = (JCObject)retObjectPowerStatus;
            return new PowerStatus(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPowerStatus != null ? retObjectPowerStatus.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ScreenOrientation getScreenOrientation() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectScreenOrientation = null;
        try {
            retObjectScreenOrientation = classType.Get("ScreenOrientation");
            JCObject val = (JCObject)retObjectScreenOrientation;
            return new ScreenOrientation(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectScreenOrientation != null ? retObjectScreenOrientation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}