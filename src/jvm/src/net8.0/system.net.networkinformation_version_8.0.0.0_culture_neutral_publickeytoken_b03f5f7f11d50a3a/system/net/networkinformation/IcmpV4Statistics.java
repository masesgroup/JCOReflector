/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.net.networkinformation;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section


/**
 * The base .NET class managing System.Net.NetworkInformation.IcmpV4Statistics, System.Net.NetworkInformation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Net.NetworkInformation.IcmpV4Statistics" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Net.NetworkInformation.IcmpV4Statistics</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class IcmpV4Statistics extends NetObject  {
    /**
     * Fully assembly qualified name: System.Net.NetworkInformation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
     */
    public static final String assemblyFullName = "System.Net.NetworkInformation, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
    /**
     * Assembly name: System.Net.NetworkInformation
     */
    public static final String assemblyShortName = "System.Net.NetworkInformation";
    /**
     * Qualified class name: System.Net.NetworkInformation.IcmpV4Statistics
     */
    public static final String className = "System.Net.NetworkInformation.IcmpV4Statistics";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public IcmpV4Statistics(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link IcmpV4Statistics}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link IcmpV4Statistics} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static IcmpV4Statistics cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new IcmpV4Statistics(from.getJCOInstance());
    }

    // Constructors section
    
    public IcmpV4Statistics() throws Throwable {
    }

    
    // Methods section
    

    
    // Properties section
    
    public long getAddressMaskRepliesReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAddressMaskRepliesReceived = null;
        try {
            retObjectAddressMaskRepliesReceived = classInstance.Get("AddressMaskRepliesReceived");
            return (long)retObjectAddressMaskRepliesReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectAddressMaskRepliesReceivedNumber = (java.lang.Number)retObjectAddressMaskRepliesReceived;
                return retObjectAddressMaskRepliesReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectAddressMaskRepliesReceived != null ? retObjectAddressMaskRepliesReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getAddressMaskRepliesSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAddressMaskRepliesSent = null;
        try {
            retObjectAddressMaskRepliesSent = classInstance.Get("AddressMaskRepliesSent");
            return (long)retObjectAddressMaskRepliesSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectAddressMaskRepliesSentNumber = (java.lang.Number)retObjectAddressMaskRepliesSent;
                return retObjectAddressMaskRepliesSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectAddressMaskRepliesSent != null ? retObjectAddressMaskRepliesSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getAddressMaskRequestsReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAddressMaskRequestsReceived = null;
        try {
            retObjectAddressMaskRequestsReceived = classInstance.Get("AddressMaskRequestsReceived");
            return (long)retObjectAddressMaskRequestsReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectAddressMaskRequestsReceivedNumber = (java.lang.Number)retObjectAddressMaskRequestsReceived;
                return retObjectAddressMaskRequestsReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectAddressMaskRequestsReceived != null ? retObjectAddressMaskRequestsReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getAddressMaskRequestsSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAddressMaskRequestsSent = null;
        try {
            retObjectAddressMaskRequestsSent = classInstance.Get("AddressMaskRequestsSent");
            return (long)retObjectAddressMaskRequestsSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectAddressMaskRequestsSentNumber = (java.lang.Number)retObjectAddressMaskRequestsSent;
                return retObjectAddressMaskRequestsSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectAddressMaskRequestsSent != null ? retObjectAddressMaskRequestsSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getDestinationUnreachableMessagesReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDestinationUnreachableMessagesReceived = null;
        try {
            retObjectDestinationUnreachableMessagesReceived = classInstance.Get("DestinationUnreachableMessagesReceived");
            return (long)retObjectDestinationUnreachableMessagesReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectDestinationUnreachableMessagesReceivedNumber = (java.lang.Number)retObjectDestinationUnreachableMessagesReceived;
                return retObjectDestinationUnreachableMessagesReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectDestinationUnreachableMessagesReceived != null ? retObjectDestinationUnreachableMessagesReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getDestinationUnreachableMessagesSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDestinationUnreachableMessagesSent = null;
        try {
            retObjectDestinationUnreachableMessagesSent = classInstance.Get("DestinationUnreachableMessagesSent");
            return (long)retObjectDestinationUnreachableMessagesSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectDestinationUnreachableMessagesSentNumber = (java.lang.Number)retObjectDestinationUnreachableMessagesSent;
                return retObjectDestinationUnreachableMessagesSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectDestinationUnreachableMessagesSent != null ? retObjectDestinationUnreachableMessagesSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getEchoRepliesReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectEchoRepliesReceived = null;
        try {
            retObjectEchoRepliesReceived = classInstance.Get("EchoRepliesReceived");
            return (long)retObjectEchoRepliesReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectEchoRepliesReceivedNumber = (java.lang.Number)retObjectEchoRepliesReceived;
                return retObjectEchoRepliesReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectEchoRepliesReceived != null ? retObjectEchoRepliesReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getEchoRepliesSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectEchoRepliesSent = null;
        try {
            retObjectEchoRepliesSent = classInstance.Get("EchoRepliesSent");
            return (long)retObjectEchoRepliesSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectEchoRepliesSentNumber = (java.lang.Number)retObjectEchoRepliesSent;
                return retObjectEchoRepliesSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectEchoRepliesSent != null ? retObjectEchoRepliesSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getEchoRequestsReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectEchoRequestsReceived = null;
        try {
            retObjectEchoRequestsReceived = classInstance.Get("EchoRequestsReceived");
            return (long)retObjectEchoRequestsReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectEchoRequestsReceivedNumber = (java.lang.Number)retObjectEchoRequestsReceived;
                return retObjectEchoRequestsReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectEchoRequestsReceived != null ? retObjectEchoRequestsReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getEchoRequestsSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectEchoRequestsSent = null;
        try {
            retObjectEchoRequestsSent = classInstance.Get("EchoRequestsSent");
            return (long)retObjectEchoRequestsSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectEchoRequestsSentNumber = (java.lang.Number)retObjectEchoRequestsSent;
                return retObjectEchoRequestsSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectEchoRequestsSent != null ? retObjectEchoRequestsSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getErrorsReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectErrorsReceived = null;
        try {
            retObjectErrorsReceived = classInstance.Get("ErrorsReceived");
            return (long)retObjectErrorsReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectErrorsReceivedNumber = (java.lang.Number)retObjectErrorsReceived;
                return retObjectErrorsReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectErrorsReceived != null ? retObjectErrorsReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getErrorsSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectErrorsSent = null;
        try {
            retObjectErrorsSent = classInstance.Get("ErrorsSent");
            return (long)retObjectErrorsSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectErrorsSentNumber = (java.lang.Number)retObjectErrorsSent;
                return retObjectErrorsSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectErrorsSent != null ? retObjectErrorsSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getMessagesReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMessagesReceived = null;
        try {
            retObjectMessagesReceived = classInstance.Get("MessagesReceived");
            return (long)retObjectMessagesReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMessagesReceivedNumber = (java.lang.Number)retObjectMessagesReceived;
                return retObjectMessagesReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectMessagesReceived != null ? retObjectMessagesReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getMessagesSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMessagesSent = null;
        try {
            retObjectMessagesSent = classInstance.Get("MessagesSent");
            return (long)retObjectMessagesSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMessagesSentNumber = (java.lang.Number)retObjectMessagesSent;
                return retObjectMessagesSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectMessagesSent != null ? retObjectMessagesSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getParameterProblemsReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectParameterProblemsReceived = null;
        try {
            retObjectParameterProblemsReceived = classInstance.Get("ParameterProblemsReceived");
            return (long)retObjectParameterProblemsReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectParameterProblemsReceivedNumber = (java.lang.Number)retObjectParameterProblemsReceived;
                return retObjectParameterProblemsReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectParameterProblemsReceived != null ? retObjectParameterProblemsReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getParameterProblemsSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectParameterProblemsSent = null;
        try {
            retObjectParameterProblemsSent = classInstance.Get("ParameterProblemsSent");
            return (long)retObjectParameterProblemsSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectParameterProblemsSentNumber = (java.lang.Number)retObjectParameterProblemsSent;
                return retObjectParameterProblemsSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectParameterProblemsSent != null ? retObjectParameterProblemsSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getRedirectsReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectRedirectsReceived = null;
        try {
            retObjectRedirectsReceived = classInstance.Get("RedirectsReceived");
            return (long)retObjectRedirectsReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectRedirectsReceivedNumber = (java.lang.Number)retObjectRedirectsReceived;
                return retObjectRedirectsReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectRedirectsReceived != null ? retObjectRedirectsReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getRedirectsSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectRedirectsSent = null;
        try {
            retObjectRedirectsSent = classInstance.Get("RedirectsSent");
            return (long)retObjectRedirectsSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectRedirectsSentNumber = (java.lang.Number)retObjectRedirectsSent;
                return retObjectRedirectsSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectRedirectsSent != null ? retObjectRedirectsSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getSourceQuenchesReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSourceQuenchesReceived = null;
        try {
            retObjectSourceQuenchesReceived = classInstance.Get("SourceQuenchesReceived");
            return (long)retObjectSourceQuenchesReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectSourceQuenchesReceivedNumber = (java.lang.Number)retObjectSourceQuenchesReceived;
                return retObjectSourceQuenchesReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectSourceQuenchesReceived != null ? retObjectSourceQuenchesReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getSourceQuenchesSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectSourceQuenchesSent = null;
        try {
            retObjectSourceQuenchesSent = classInstance.Get("SourceQuenchesSent");
            return (long)retObjectSourceQuenchesSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectSourceQuenchesSentNumber = (java.lang.Number)retObjectSourceQuenchesSent;
                return retObjectSourceQuenchesSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectSourceQuenchesSent != null ? retObjectSourceQuenchesSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getTimeExceededMessagesReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectTimeExceededMessagesReceived = null;
        try {
            retObjectTimeExceededMessagesReceived = classInstance.Get("TimeExceededMessagesReceived");
            return (long)retObjectTimeExceededMessagesReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectTimeExceededMessagesReceivedNumber = (java.lang.Number)retObjectTimeExceededMessagesReceived;
                return retObjectTimeExceededMessagesReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectTimeExceededMessagesReceived != null ? retObjectTimeExceededMessagesReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getTimeExceededMessagesSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectTimeExceededMessagesSent = null;
        try {
            retObjectTimeExceededMessagesSent = classInstance.Get("TimeExceededMessagesSent");
            return (long)retObjectTimeExceededMessagesSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectTimeExceededMessagesSentNumber = (java.lang.Number)retObjectTimeExceededMessagesSent;
                return retObjectTimeExceededMessagesSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectTimeExceededMessagesSent != null ? retObjectTimeExceededMessagesSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getTimestampRepliesReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectTimestampRepliesReceived = null;
        try {
            retObjectTimestampRepliesReceived = classInstance.Get("TimestampRepliesReceived");
            return (long)retObjectTimestampRepliesReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectTimestampRepliesReceivedNumber = (java.lang.Number)retObjectTimestampRepliesReceived;
                return retObjectTimestampRepliesReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectTimestampRepliesReceived != null ? retObjectTimestampRepliesReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getTimestampRepliesSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectTimestampRepliesSent = null;
        try {
            retObjectTimestampRepliesSent = classInstance.Get("TimestampRepliesSent");
            return (long)retObjectTimestampRepliesSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectTimestampRepliesSentNumber = (java.lang.Number)retObjectTimestampRepliesSent;
                return retObjectTimestampRepliesSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectTimestampRepliesSent != null ? retObjectTimestampRepliesSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getTimestampRequestsReceived() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectTimestampRequestsReceived = null;
        try {
            retObjectTimestampRequestsReceived = classInstance.Get("TimestampRequestsReceived");
            return (long)retObjectTimestampRequestsReceived;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectTimestampRequestsReceivedNumber = (java.lang.Number)retObjectTimestampRequestsReceived;
                return retObjectTimestampRequestsReceivedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectTimestampRequestsReceived != null ? retObjectTimestampRequestsReceived.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getTimestampRequestsSent() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectTimestampRequestsSent = null;
        try {
            retObjectTimestampRequestsSent = classInstance.Get("TimestampRequestsSent");
            return (long)retObjectTimestampRequestsSent;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectTimestampRequestsSentNumber = (java.lang.Number)retObjectTimestampRequestsSent;
                return retObjectTimestampRequestsSentNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectTimestampRequestsSent != null ? retObjectTimestampRequestsSent.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}