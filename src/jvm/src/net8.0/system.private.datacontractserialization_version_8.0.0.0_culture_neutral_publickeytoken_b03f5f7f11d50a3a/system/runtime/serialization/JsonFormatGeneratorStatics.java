/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.runtime.serialization;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.reflection.ConstructorInfo;
import system.reflection.MethodInfo;
import system.reflection.PropertyInfo;


/**
 * The base .NET class managing System.Runtime.Serialization.JsonFormatGeneratorStatics, System.Private.DataContractSerialization, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Runtime.Serialization.JsonFormatGeneratorStatics" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Runtime.Serialization.JsonFormatGeneratorStatics</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class JsonFormatGeneratorStatics extends NetObject  {
    /**
     * Fully assembly qualified name: System.Private.DataContractSerialization, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
     */
    public static final String assemblyFullName = "System.Private.DataContractSerialization, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
    /**
     * Assembly name: System.Private.DataContractSerialization
     */
    public static final String assemblyShortName = "System.Private.DataContractSerialization";
    /**
     * Qualified class name: System.Runtime.Serialization.JsonFormatGeneratorStatics
     */
    public static final String className = "System.Runtime.Serialization.JsonFormatGeneratorStatics";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public JsonFormatGeneratorStatics(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link JsonFormatGeneratorStatics}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link JsonFormatGeneratorStatics} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static JsonFormatGeneratorStatics cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new JsonFormatGeneratorStatics(from.getJCOInstance());
    }

    // Constructors section
    
    public JsonFormatGeneratorStatics() throws Throwable {
    }

    
    // Methods section
    

    
    // Properties section
    
    public static ConstructorInfo getExtensionDataObjectCtor() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectExtensionDataObjectCtor = null;
        try {
            retObjectExtensionDataObjectCtor = classType.Get("ExtensionDataObjectCtor");
            JCObject val = (JCObject)retObjectExtensionDataObjectCtor;
            return new ConstructorInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectExtensionDataObjectCtor != null ? retObjectExtensionDataObjectCtor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ConstructorInfo getSerializationExceptionCtor() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSerializationExceptionCtor = null;
        try {
            retObjectSerializationExceptionCtor = classType.Get("SerializationExceptionCtor");
            JCObject val = (JCObject)retObjectSerializationExceptionCtor;
            return new ConstructorInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSerializationExceptionCtor != null ? retObjectSerializationExceptionCtor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getBoxPointer() throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectBoxPointer = null;
        try {
            retObjectBoxPointer = classType.Get("BoxPointer");
            JCObject val = (JCObject)retObjectBoxPointer;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBoxPointer != null ? retObjectBoxPointer.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getGetCurrentMethod() throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetCurrentMethod = null;
        try {
            retObjectGetCurrentMethod = classType.Get("GetCurrentMethod");
            JCObject val = (JCObject)retObjectGetCurrentMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetCurrentMethod != null ? retObjectGetCurrentMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getGetItemContractMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetItemContractMethod = null;
        try {
            retObjectGetItemContractMethod = classType.Get("GetItemContractMethod");
            JCObject val = (JCObject)retObjectGetItemContractMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetItemContractMethod != null ? retObjectGetItemContractMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getGetJsonDataContractMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetJsonDataContractMethod = null;
        try {
            retObjectGetJsonDataContractMethod = classType.Get("GetJsonDataContractMethod");
            JCObject val = (JCObject)retObjectGetJsonDataContractMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetJsonDataContractMethod != null ? retObjectGetJsonDataContractMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getGetJsonMemberIndexMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetJsonMemberIndexMethod = null;
        try {
            retObjectGetJsonMemberIndexMethod = classType.Get("GetJsonMemberIndexMethod");
            JCObject val = (JCObject)retObjectGetJsonMemberIndexMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetJsonMemberIndexMethod != null ? retObjectGetJsonMemberIndexMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getGetJsonMemberNameMethod() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetJsonMemberNameMethod = null;
        try {
            retObjectGetJsonMemberNameMethod = classType.Get("GetJsonMemberNameMethod");
            JCObject val = (JCObject)retObjectGetJsonMemberNameMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetJsonMemberNameMethod != null ? retObjectGetJsonMemberNameMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getGetRevisedItemContractMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetRevisedItemContractMethod = null;
        try {
            retObjectGetRevisedItemContractMethod = classType.Get("GetRevisedItemContractMethod");
            JCObject val = (JCObject)retObjectGetRevisedItemContractMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetRevisedItemContractMethod != null ? retObjectGetRevisedItemContractMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getGetUninitializedObjectMethod() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetUninitializedObjectMethod = null;
        try {
            retObjectGetUninitializedObjectMethod = classType.Get("GetUninitializedObjectMethod");
            JCObject val = (JCObject)retObjectGetUninitializedObjectMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetUninitializedObjectMethod != null ? retObjectGetUninitializedObjectMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getIsStartElementMethod0() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsStartElementMethod0 = null;
        try {
            retObjectIsStartElementMethod0 = classType.Get("IsStartElementMethod0");
            JCObject val = (JCObject)retObjectIsStartElementMethod0;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsStartElementMethod0 != null ? retObjectIsStartElementMethod0.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getIsStartElementMethod2() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsStartElementMethod2 = null;
        try {
            retObjectIsStartElementMethod2 = classType.Get("IsStartElementMethod2");
            JCObject val = (JCObject)retObjectIsStartElementMethod2;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsStartElementMethod2 != null ? retObjectIsStartElementMethod2.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getMoveNextMethod() throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMoveNextMethod = null;
        try {
            retObjectMoveNextMethod = classType.Get("MoveNextMethod");
            JCObject val = (JCObject)retObjectMoveNextMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMoveNextMethod != null ? retObjectMoveNextMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getMoveToContentMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMoveToContentMethod = null;
        try {
            retObjectMoveToContentMethod = classType.Get("MoveToContentMethod");
            JCObject val = (JCObject)retObjectMoveToContentMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMoveToContentMethod != null ? retObjectMoveToContentMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getOnDeserializationMethod() throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectOnDeserializationMethod = null;
        try {
            retObjectOnDeserializationMethod = classType.Get("OnDeserializationMethod");
            JCObject val = (JCObject)retObjectOnDeserializationMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectOnDeserializationMethod != null ? retObjectOnDeserializationMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getParseEnumMethod() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectParseEnumMethod = null;
        try {
            retObjectParseEnumMethod = classType.Get("ParseEnumMethod");
            JCObject val = (JCObject)retObjectParseEnumMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectParseEnumMethod != null ? retObjectParseEnumMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getReadJsonValueMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectReadJsonValueMethod = null;
        try {
            retObjectReadJsonValueMethod = classType.Get("ReadJsonValueMethod");
            JCObject val = (JCObject)retObjectReadJsonValueMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectReadJsonValueMethod != null ? retObjectReadJsonValueMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getThrowDuplicateMemberExceptionMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectThrowDuplicateMemberExceptionMethod = null;
        try {
            retObjectThrowDuplicateMemberExceptionMethod = classType.Get("ThrowDuplicateMemberExceptionMethod");
            JCObject val = (JCObject)retObjectThrowDuplicateMemberExceptionMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectThrowDuplicateMemberExceptionMethod != null ? retObjectThrowDuplicateMemberExceptionMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getThrowMissingRequiredMembersMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectThrowMissingRequiredMembersMethod = null;
        try {
            retObjectThrowMissingRequiredMembersMethod = classType.Get("ThrowMissingRequiredMembersMethod");
            JCObject val = (JCObject)retObjectThrowMissingRequiredMembersMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectThrowMissingRequiredMembersMethod != null ? retObjectThrowMissingRequiredMembersMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getUnboxPointer() throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUnboxPointer = null;
        try {
            retObjectUnboxPointer = classType.Get("UnboxPointer");
            JCObject val = (JCObject)retObjectUnboxPointer;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectUnboxPointer != null ? retObjectUnboxPointer.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getWriteAttributeStringMethod() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWriteAttributeStringMethod = null;
        try {
            retObjectWriteAttributeStringMethod = classType.Get("WriteAttributeStringMethod");
            JCObject val = (JCObject)retObjectWriteAttributeStringMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWriteAttributeStringMethod != null ? retObjectWriteAttributeStringMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getWriteEndElementMethod() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWriteEndElementMethod = null;
        try {
            retObjectWriteEndElementMethod = classType.Get("WriteEndElementMethod");
            JCObject val = (JCObject)retObjectWriteEndElementMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWriteEndElementMethod != null ? retObjectWriteEndElementMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getWriteJsonISerializableMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWriteJsonISerializableMethod = null;
        try {
            retObjectWriteJsonISerializableMethod = classType.Get("WriteJsonISerializableMethod");
            JCObject val = (JCObject)retObjectWriteJsonISerializableMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWriteJsonISerializableMethod != null ? retObjectWriteJsonISerializableMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getWriteJsonNameWithMappingMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWriteJsonNameWithMappingMethod = null;
        try {
            retObjectWriteJsonNameWithMappingMethod = classType.Get("WriteJsonNameWithMappingMethod");
            JCObject val = (JCObject)retObjectWriteJsonNameWithMappingMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWriteJsonNameWithMappingMethod != null ? retObjectWriteJsonNameWithMappingMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getWriteJsonValueMethod() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWriteJsonValueMethod = null;
        try {
            retObjectWriteJsonValueMethod = classType.Get("WriteJsonValueMethod");
            JCObject val = (JCObject)retObjectWriteJsonValueMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWriteJsonValueMethod != null ? retObjectWriteJsonValueMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getWriteStartElementMethod() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWriteStartElementMethod = null;
        try {
            retObjectWriteStartElementMethod = classType.Get("WriteStartElementMethod");
            JCObject val = (JCObject)retObjectWriteStartElementMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWriteStartElementMethod != null ? retObjectWriteStartElementMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static MethodInfo getWriteStartElementStringMethod() throws Throwable, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWriteStartElementStringMethod = null;
        try {
            retObjectWriteStartElementStringMethod = classType.Get("WriteStartElementStringMethod");
            JCObject val = (JCObject)retObjectWriteStartElementStringMethod;
            return new MethodInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWriteStartElementStringMethod != null ? retObjectWriteStartElementStringMethod.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PropertyInfo getCollectionItemNameProperty() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCollectionItemNameProperty = null;
        try {
            retObjectCollectionItemNameProperty = classType.Get("CollectionItemNameProperty");
            JCObject val = (JCObject)retObjectCollectionItemNameProperty;
            return new PropertyInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCollectionItemNameProperty != null ? retObjectCollectionItemNameProperty.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PropertyInfo getExtensionDataProperty() throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectExtensionDataProperty = null;
        try {
            retObjectExtensionDataProperty = classType.Get("ExtensionDataProperty");
            JCObject val = (JCObject)retObjectExtensionDataProperty;
            return new PropertyInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectExtensionDataProperty != null ? retObjectExtensionDataProperty.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PropertyInfo getLocalNameProperty() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectLocalNameProperty = null;
        try {
            retObjectLocalNameProperty = classType.Get("LocalNameProperty");
            JCObject val = (JCObject)retObjectLocalNameProperty;
            return new PropertyInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectLocalNameProperty != null ? retObjectLocalNameProperty.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PropertyInfo getNamespaceProperty() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectNamespaceProperty = null;
        try {
            retObjectNamespaceProperty = classType.Get("NamespaceProperty");
            JCObject val = (JCObject)retObjectNamespaceProperty;
            return new PropertyInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectNamespaceProperty != null ? retObjectNamespaceProperty.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PropertyInfo getNodeTypeProperty() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectNodeTypeProperty = null;
        try {
            retObjectNodeTypeProperty = classType.Get("NodeTypeProperty");
            JCObject val = (JCObject)retObjectNodeTypeProperty;
            return new PropertyInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectNodeTypeProperty != null ? retObjectNodeTypeProperty.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PropertyInfo getTypeHandleProperty() throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectTypeHandleProperty = null;
        try {
            retObjectTypeHandleProperty = classType.Get("TypeHandleProperty");
            JCObject val = (JCObject)retObjectTypeHandleProperty;
            return new PropertyInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectTypeHandleProperty != null ? retObjectTypeHandleProperty.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PropertyInfo getUseSimpleDictionaryFormatReadProperty() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUseSimpleDictionaryFormatReadProperty = null;
        try {
            retObjectUseSimpleDictionaryFormatReadProperty = classType.Get("UseSimpleDictionaryFormatReadProperty");
            JCObject val = (JCObject)retObjectUseSimpleDictionaryFormatReadProperty;
            return new PropertyInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectUseSimpleDictionaryFormatReadProperty != null ? retObjectUseSimpleDictionaryFormatReadProperty.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PropertyInfo getUseSimpleDictionaryFormatWriteProperty() throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentNullException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUseSimpleDictionaryFormatWriteProperty = null;
        try {
            retObjectUseSimpleDictionaryFormatWriteProperty = classType.Get("UseSimpleDictionaryFormatWriteProperty");
            JCObject val = (JCObject)retObjectUseSimpleDictionaryFormatWriteProperty;
            return new PropertyInfo(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectUseSimpleDictionaryFormatWriteProperty != null ? retObjectUseSimpleDictionaryFormatWriteProperty.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public final static NetType[] getSerInfoCtorArgs() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSerInfoCtorArgs = null;
        try {
            ArrayList<NetType> resultingArrayList = new ArrayList<NetType>();
            retObjectSerInfoCtorArgs = classType.Get("SerInfoCtorArgs");
            JCObject resultingObjects = (JCObject)retObjectSerInfoCtorArgs;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(new NetType(resultingObject));
            }
            NetType[] resultingArray = new NetType[resultingArrayList.size()];
            resultingArray = resultingArrayList.toArray(resultingArray);
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSerInfoCtorArgs != null ? retObjectSerInfoCtorArgs.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}