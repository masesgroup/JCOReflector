/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package microsoft.visualbasic.compilerservices;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.SByte;
import system.Single;
import system.DateTime;
import system.Decimal;
import system.globalization.NumberFormatInfo;
import system.UInt32;
import system.UInt64;
import system.UInt16;


/**
 * The base .NET class managing Microsoft.VisualBasic.CompilerServices.Conversions, Microsoft.VisualBasic.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/Microsoft.VisualBasic.CompilerServices.Conversions" target="_top">https://docs.microsoft.com/en-us/dotnet/api/Microsoft.VisualBasic.CompilerServices.Conversions</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class Conversions extends NetObject  {
    /**
     * Fully assembly qualified name: Microsoft.VisualBasic.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
     */
    public static final String assemblyFullName = "Microsoft.VisualBasic.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
    /**
     * Assembly name: Microsoft.VisualBasic.Core
     */
    public static final String assemblyShortName = "Microsoft.VisualBasic.Core";
    /**
     * Qualified class name: Microsoft.VisualBasic.CompilerServices.Conversions
     */
    public static final String className = "Microsoft.VisualBasic.CompilerServices.Conversions";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public Conversions(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link Conversions}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link Conversions} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static Conversions cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new Conversions(from.getJCOInstance());
    }

    // Constructors section
    
    public Conversions() throws Throwable {
    }



    
    // Methods section
    
    public static boolean ToBoolean(NetObject Value) throws Throwable, system.NotSupportedException, system.ArgumentException, system.PlatformNotSupportedException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.OutOfMemoryException, system.runtime.interopservices.ExternalException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.FormatException, system.OverflowException, system.ObjectDisposedException, system.InvalidCastException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToBoolean = null;
        try {
            retObjectToBoolean = classType.Invoke("ToBoolean", Value == null ? null : Value.getJCOInstance());
            return (boolean)retObjectToBoolean;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectToBoolean != null ? retObjectToBoolean.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean ToBoolean(java.lang.String Value) throws Throwable, system.ArgumentNullException, system.globalization.CultureNotFoundException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.OutOfMemoryException, system.runtime.interopservices.ExternalException, system.ArgumentOutOfRangeException, system.ArgumentException, system.InvalidOperationException, system.FormatException, system.OverflowException, system.ObjectDisposedException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToBoolean = null;
        try {
            retObjectToBoolean = classType.Invoke("ToBoolean", Value);
            return (boolean)retObjectToBoolean;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectToBoolean != null ? retObjectToBoolean.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static byte ToByte(NetObject Value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.OverflowException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.InvalidCastException, system.OutOfMemoryException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToByte = null;
        try {
            retObjectToByte = classType.Invoke("ToByte", Value == null ? null : Value.getJCOInstance());
            return (byte)retObjectToByte;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToByteNumber = (java.lang.Number)retObjectToByte;
                return retObjectToByteNumber.byteValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into byte and, as fallback solution, into java.lang.Number", retObjectToByte != null ? retObjectToByte.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static byte ToByte(java.lang.String Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToByte = null;
        try {
            retObjectToByte = classType.Invoke("ToByte", Value);
            return (byte)retObjectToByte;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToByteNumber = (java.lang.Number)retObjectToByte;
                return retObjectToByteNumber.byteValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into byte and, as fallback solution, into java.lang.Number", retObjectToByte != null ? retObjectToByte.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static char ToChar(NetObject Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.globalization.CultureNotFoundException, system.PlatformNotSupportedException, system.NullReferenceException, system.OutOfMemoryException, system.runtime.interopservices.ExternalException, system.ArgumentNullException, system.ArrayTypeMismatchException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToChar = null;
        try {
            retObjectToChar = classType.Invoke("ToChar", Value == null ? null : Value.getJCOInstance());
            return (char)retObjectToChar;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into char", retObjectToChar != null ? retObjectToChar.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static char ToChar(java.lang.String Value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToChar = null;
        try {
            retObjectToChar = classType.Invoke("ToChar", Value);
            return (char)retObjectToChar;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into char", retObjectToChar != null ? retObjectToChar.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static char[] ToCharArrayRankOne(NetObject Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.OutOfMemoryException, system.runtime.interopservices.ExternalException, system.ArgumentNullException, system.ArrayTypeMismatchException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToCharArrayRankOne = null;
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            retObjectToCharArrayRankOne = classType.Invoke("ToCharArrayRankOne", Value == null ? null : Value.getJCOInstance());
            JCObject resultingObjects = (JCObject)retObjectToCharArrayRankOne;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            char[] resultingArray = new char[resultingArrayList.size()];
            for(int indexToCharArrayRankOne = 0; indexToCharArrayRankOne < resultingArrayList.size(); indexToCharArrayRankOne++ ) {
				resultingArray[indexToCharArrayRankOne] = (char)resultingArrayList.get(indexToCharArrayRankOne);
            }
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into char", retObjectToCharArrayRankOne != null ? retObjectToCharArrayRankOne.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static char[] ToCharArrayRankOne(java.lang.String Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToCharArrayRankOne = null;
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            retObjectToCharArrayRankOne = classType.Invoke("ToCharArrayRankOne", Value);
            JCObject resultingObjects = (JCObject)retObjectToCharArrayRankOne;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            char[] resultingArray = new char[resultingArrayList.size()];
            for(int indexToCharArrayRankOne = 0; indexToCharArrayRankOne < resultingArrayList.size(); indexToCharArrayRankOne++ ) {
				resultingArray[indexToCharArrayRankOne] = (char)resultingArrayList.get(indexToCharArrayRankOne);
            }
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into char", retObjectToCharArrayRankOne != null ? retObjectToCharArrayRankOne.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double ToDouble(NetObject Value) throws Throwable, system.NotSupportedException, system.ArgumentException, system.PlatformNotSupportedException, system.IndexOutOfRangeException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ObjectDisposedException, system.InvalidCastException, system.OutOfMemoryException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToDouble = null;
        try {
            retObjectToDouble = classType.Invoke("ToDouble", Value == null ? null : Value.getJCOInstance());
            return (double)retObjectToDouble;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToDoubleNumber = (java.lang.Number)retObjectToDouble;
                return retObjectToDoubleNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into double and, as fallback solution, into java.lang.Number", retObjectToDouble != null ? retObjectToDouble.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double ToDouble(java.lang.String Value) throws Throwable, system.NotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToDouble = null;
        try {
            retObjectToDouble = classType.Invoke("ToDouble", Value);
            return (double)retObjectToDouble;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToDoubleNumber = (java.lang.Number)retObjectToDouble;
                return retObjectToDoubleNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into double and, as fallback solution, into java.lang.Number", retObjectToDouble != null ? retObjectToDouble.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static short ToShort(NetObject Value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.OverflowException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.InvalidCastException, system.OutOfMemoryException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToShort = null;
        try {
            retObjectToShort = classType.Invoke("ToShort", Value == null ? null : Value.getJCOInstance());
            return (short)retObjectToShort;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToShortNumber = (java.lang.Number)retObjectToShort;
                return retObjectToShortNumber.shortValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into short and, as fallback solution, into java.lang.Number", retObjectToShort != null ? retObjectToShort.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static short ToShort(java.lang.String Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToShort = null;
        try {
            retObjectToShort = classType.Invoke("ToShort", Value);
            return (short)retObjectToShort;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToShortNumber = (java.lang.Number)retObjectToShort;
                return retObjectToShortNumber.shortValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into short and, as fallback solution, into java.lang.Number", retObjectToShort != null ? retObjectToShort.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int ToInteger(NetObject Value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.OverflowException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.InvalidCastException, system.OutOfMemoryException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToInteger = null;
        try {
            retObjectToInteger = classType.Invoke("ToInteger", Value == null ? null : Value.getJCOInstance());
            return (int)retObjectToInteger;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToIntegerNumber = (java.lang.Number)retObjectToInteger;
                return retObjectToIntegerNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectToInteger != null ? retObjectToInteger.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int ToInteger(java.lang.String Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToInteger = null;
        try {
            retObjectToInteger = classType.Invoke("ToInteger", Value);
            return (int)retObjectToInteger;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToIntegerNumber = (java.lang.Number)retObjectToInteger;
                return retObjectToIntegerNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into int and, as fallback solution, into java.lang.Number", retObjectToInteger != null ? retObjectToInteger.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static long ToLong(NetObject Value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.OverflowException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.InvalidCastException, system.OutOfMemoryException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToLong = null;
        try {
            retObjectToLong = classType.Invoke("ToLong", Value == null ? null : Value.getJCOInstance());
            return (long)retObjectToLong;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToLongNumber = (java.lang.Number)retObjectToLong;
                return retObjectToLongNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectToLong != null ? retObjectToLong.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static long ToLong(java.lang.String Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.FormatException, system.OverflowException, system.OutOfMemoryException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToLong = null;
        try {
            retObjectToLong = classType.Invoke("ToLong", Value);
            return (long)retObjectToLong;
        } catch (java.lang.ClassCastException cce) {
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectToLongNumber = (java.lang.Number)retObjectToLong;
                return retObjectToLongNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into long and, as fallback solution, into java.lang.Number", retObjectToLong != null ? retObjectToLong.getClass() : "null"), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SByte ToSByte(NetObject Value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.OverflowException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.InvalidCastException, system.OutOfMemoryException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToSByte = null;
        try {
            retObjectToSByte = classType.Invoke("ToSByte", Value == null ? null : Value.getJCOInstance());
            JCObject objToSByte = (JCObject)retObjectToSByte;
            return new SByte(objToSByte);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToSByte != null ? retObjectToSByte.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static SByte ToSByte(java.lang.String Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToSByte = null;
        try {
            retObjectToSByte = classType.Invoke("ToSByte", Value);
            JCObject objToSByte = (JCObject)retObjectToSByte;
            return new SByte(objToSByte);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToSByte != null ? retObjectToSByte.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Single ToSingle(NetObject Value) throws Throwable, system.NotSupportedException, system.ArgumentException, system.PlatformNotSupportedException, system.IndexOutOfRangeException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ObjectDisposedException, system.InvalidCastException, system.OutOfMemoryException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToSingle = null;
        try {
            retObjectToSingle = classType.Invoke("ToSingle", Value == null ? null : Value.getJCOInstance());
            JCObject objToSingle = (JCObject)retObjectToSingle;
            return new Single(objToSingle);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToSingle != null ? retObjectToSingle.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Single ToSingle(java.lang.String Value) throws Throwable, system.NotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToSingle = null;
        try {
            retObjectToSingle = classType.Invoke("ToSingle", Value);
            JCObject objToSingle = (JCObject)retObjectToSingle;
            return new Single(objToSingle);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToSingle != null ? retObjectToSingle.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DateTime ToDate(NetObject Value) throws Throwable, system.globalization.CultureNotFoundException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, system.TypeInitializationException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.ObjectDisposedException, system.InvalidCastException, system.OutOfMemoryException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToDate = null;
        try {
            retObjectToDate = classType.Invoke("ToDate", Value == null ? null : Value.getJCOInstance());
            JCObject objToDate = (JCObject)retObjectToDate;
            return new DateTime(objToDate);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToDate != null ? retObjectToDate.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static DateTime ToDate(java.lang.String Value) throws Throwable, system.globalization.CultureNotFoundException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.ObjectDisposedException, system.InvalidOperationException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToDate = null;
        try {
            retObjectToDate = classType.Invoke("ToDate", Value);
            JCObject objToDate = (JCObject)retObjectToDate;
            return new DateTime(objToDate);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToDate != null ? retObjectToDate.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Decimal ToDecimal(boolean Value) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToDecimal = null;
        try {
            retObjectToDecimal = classType.Invoke("ToDecimal", Value);
            JCObject objToDecimal = (JCObject)retObjectToDecimal;
            return new Decimal(objToDecimal);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToDecimal != null ? retObjectToDecimal.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Decimal ToDecimal(NetObject Value) throws Throwable, system.NotSupportedException, system.ArgumentException, system.PlatformNotSupportedException, system.OverflowException, system.IndexOutOfRangeException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.NullReferenceException, system.FormatException, system.InvalidCastException, system.OutOfMemoryException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToDecimal = null;
        try {
            retObjectToDecimal = classType.Invoke("ToDecimal", Value == null ? null : Value.getJCOInstance());
            JCObject objToDecimal = (JCObject)retObjectToDecimal;
            return new Decimal(objToDecimal);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToDecimal != null ? retObjectToDecimal.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Decimal ToDecimal(java.lang.String Value) throws Throwable, system.NotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.InvalidOperationException, system.globalization.CultureNotFoundException, system.ArgumentOutOfRangeException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToDecimal = null;
        try {
            retObjectToDecimal = classType.Invoke("ToDecimal", Value);
            JCObject objToDecimal = (JCObject)retObjectToDecimal;
            return new Decimal(objToDecimal);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToDecimal != null ? retObjectToDecimal.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NetObject ChangeType(NetObject Expression, NetType TargetType) throws Throwable, system.ArgumentNullException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentOutOfRangeException, system.globalization.CultureNotFoundException, system.NotSupportedException, system.InvalidOperationException, system.ObjectDisposedException, system.OutOfMemoryException, system.runtime.interopservices.ExternalException, system.MissingMethodException, system.reflection.TargetInvocationException, system.IndexOutOfRangeException, system.FormatException, system.OverflowException, system.InvalidCastException, system.NullReferenceException, system.MissingMemberException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectChangeType = null;
        try {
            retObjectChangeType = classType.Invoke("ChangeType", Expression == null ? null : Expression.getJCOInstance(), TargetType == null ? null : TargetType.getJCOInstance());
            JCObject objChangeType = (JCObject)retObjectChangeType;
            return new NetObject(objChangeType);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectChangeType != null ? retObjectChangeType.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static NetObject FallbackUserDefinedConversion(NetObject Expression, NetType TargetType) throws Throwable, system.NotSupportedException, system.ArgumentException, system.InvalidOperationException, system.ArgumentNullException, system.PlatformNotSupportedException, system.IndexOutOfRangeException, system.OutOfMemoryException, system.RankException, system.ArrayTypeMismatchException, system.ArgumentOutOfRangeException, system.InvalidCastException, system.NullReferenceException, system.MissingMemberException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFallbackUserDefinedConversion = null;
        try {
            retObjectFallbackUserDefinedConversion = classType.Invoke("FallbackUserDefinedConversion", Expression == null ? null : Expression.getJCOInstance(), TargetType == null ? null : TargetType.getJCOInstance());
            JCObject objFallbackUserDefinedConversion = (JCObject)retObjectFallbackUserDefinedConversion;
            return new NetObject(objFallbackUserDefinedConversion);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFallbackUserDefinedConversion != null ? retObjectFallbackUserDefinedConversion.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String FromCharAndCount(char Value, int Count) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFromCharAndCount = null;
        try {
            retObjectFromCharAndCount = classType.Invoke("FromCharAndCount", Value, Count);
            return (java.lang.String)retObjectFromCharAndCount;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectFromCharAndCount != null ? retObjectFromCharAndCount.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String FromCharArray(char[] Value) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFromCharArray = null;
        try {
            retObjectFromCharArray = classType.Invoke("FromCharArray", (java.lang.Object)Value);
            return (java.lang.String)retObjectFromCharArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectFromCharArray != null ? retObjectFromCharArray.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String FromCharArray(JCORefOut dupParam0) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFromCharArray = null;
        try {
            retObjectFromCharArray = classType.Invoke("FromCharArray", (java.lang.Object)dupParam0.getJCRefOut());
            return (java.lang.String)retObjectFromCharArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectFromCharArray != null ? retObjectFromCharArray.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String FromCharArraySubset(char[] Value, int StartIndex, int Length) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFromCharArraySubset = null;
        try {
            retObjectFromCharArraySubset = classType.Invoke("FromCharArraySubset", Value, StartIndex, Length);
            return (java.lang.String)retObjectFromCharArraySubset;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectFromCharArraySubset != null ? retObjectFromCharArraySubset.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String FromCharArraySubset(JCORefOut dupParam0, int dupParam1, int dupParam2) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFromCharArraySubset = null;
        try {
            retObjectFromCharArraySubset = classType.Invoke("FromCharArraySubset", dupParam0.getJCRefOut(), dupParam1, dupParam2);
            return (java.lang.String)retObjectFromCharArraySubset;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectFromCharArraySubset != null ? retObjectFromCharArraySubset.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(boolean Value) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value);
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(byte Value) throws Throwable, system.NotSupportedException, system.ArgumentException, system.PlatformNotSupportedException, system.IndexOutOfRangeException, system.FormatException, system.NullReferenceException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value);
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(char Value) throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value);
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(double Value, NumberFormatInfo NumberFormat) throws Throwable, system.PlatformNotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.NullReferenceException, system.NotSupportedException, system.FormatException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value, NumberFormat == null ? null : NumberFormat.getJCOInstance());
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(double Value) throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value);
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(short Value) throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.FormatException, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value);
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(int Value) throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.FormatException, system.ArgumentNullException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value);
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(long Value) throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.FormatException, system.ArgumentNullException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value);
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(Single Value, NumberFormatInfo NumberFormat) throws Throwable, system.PlatformNotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.NullReferenceException, system.NotSupportedException, system.FormatException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value == null ? null : Value.getJCOInstance(), NumberFormat == null ? null : NumberFormat.getJCOInstance());
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(Single Value) throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value == null ? null : Value.getJCOInstance());
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(DateTime Value) throws Throwable, system.PlatformNotSupportedException, system.NotSupportedException, system.OutOfMemoryException, system.ArgumentException, system.ArgumentOutOfRangeException, system.FormatException, system.InvalidOperationException, system.globalization.CultureNotFoundException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value == null ? null : Value.getJCOInstance());
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(Decimal Value, NumberFormatInfo NumberFormat) throws Throwable, system.PlatformNotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, system.ArgumentOutOfRangeException, system.NullReferenceException, system.NotSupportedException, system.FormatException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value == null ? null : Value.getJCOInstance(), NumberFormat == null ? null : NumberFormat.getJCOInstance());
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(Decimal Value) throws Throwable, system.ArgumentException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.FormatException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value == null ? null : Value.getJCOInstance());
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(NetObject Value) throws Throwable, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.ArgumentException, system.IndexOutOfRangeException, system.FormatException, system.ArgumentOutOfRangeException, system.ArrayTypeMismatchException, system.OutOfMemoryException, system.InvalidOperationException, system.globalization.CultureNotFoundException, system.OverflowException, system.ObjectDisposedException, system.runtime.interopservices.ExternalException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value == null ? null : Value.getJCOInstance());
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(UInt32 Value) throws Throwable, system.NotSupportedException, system.ArgumentException, system.PlatformNotSupportedException, system.IndexOutOfRangeException, system.FormatException, system.NullReferenceException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value == null ? null : Value.getJCOInstance());
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String ToString(UInt64 Value) throws Throwable, system.NotSupportedException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.FormatException, system.NullReferenceException, system.ArgumentNullException, system.ArrayTypeMismatchException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToString = null;
        try {
            retObjectToString = classType.Invoke("ToString", Value == null ? null : Value.getJCOInstance());
            return (java.lang.String)retObjectToString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectToString != null ? retObjectToString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UInt16 ToUShort(NetObject Value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.OverflowException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.InvalidCastException, system.OutOfMemoryException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToUShort = null;
        try {
            retObjectToUShort = classType.Invoke("ToUShort", Value == null ? null : Value.getJCOInstance());
            JCObject objToUShort = (JCObject)retObjectToUShort;
            return new UInt16(objToUShort);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToUShort != null ? retObjectToUShort.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UInt16 ToUShort(java.lang.String Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToUShort = null;
        try {
            retObjectToUShort = classType.Invoke("ToUShort", Value);
            JCObject objToUShort = (JCObject)retObjectToUShort;
            return new UInt16(objToUShort);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToUShort != null ? retObjectToUShort.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UInt32 ToUInteger(NetObject Value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.OverflowException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.InvalidCastException, system.OutOfMemoryException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToUInteger = null;
        try {
            retObjectToUInteger = classType.Invoke("ToUInteger", Value == null ? null : Value.getJCOInstance());
            JCObject objToUInteger = (JCObject)retObjectToUInteger;
            return new UInt32(objToUInteger);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToUInteger != null ? retObjectToUInteger.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UInt32 ToUInteger(java.lang.String Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.FormatException, system.OverflowException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToUInteger = null;
        try {
            retObjectToUInteger = classType.Invoke("ToUInteger", Value);
            JCObject objToUInteger = (JCObject)retObjectToUInteger;
            return new UInt32(objToUInteger);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToUInteger != null ? retObjectToUInteger.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UInt64 ToULong(NetObject Value) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.OverflowException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.InvalidCastException, system.OutOfMemoryException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToULong = null;
        try {
            retObjectToULong = classType.Invoke("ToULong", Value == null ? null : Value.getJCOInstance());
            JCObject objToULong = (JCObject)retObjectToULong;
            return new UInt64(objToULong);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToULong != null ? retObjectToULong.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static UInt64 ToULong(java.lang.String Value) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.globalization.CultureNotFoundException, system.NullReferenceException, system.FormatException, system.OverflowException, system.OutOfMemoryException, system.ArgumentNullException, system.InvalidCastException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToULong = null;
        try {
            retObjectToULong = classType.Invoke("ToULong", Value);
            JCObject objToULong = (JCObject)retObjectToULong;
            return new UInt64(objToULong);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToULong != null ? retObjectToULong.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    


    // Instance Events section
    

}