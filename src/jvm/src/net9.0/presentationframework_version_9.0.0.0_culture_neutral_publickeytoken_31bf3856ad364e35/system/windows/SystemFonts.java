/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.windows;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.windows.FontStyle;
import system.windows.FontWeight;
import system.windows.media.FontFamily;
import system.windows.ResourceKey;
import system.windows.TextDecorationCollection;


/**
 * The base .NET class managing System.Windows.SystemFonts, PresentationFramework, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Windows.SystemFonts" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Windows.SystemFonts</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class SystemFonts extends NetObject  {
    /**
     * Fully assembly qualified name: PresentationFramework, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
     */
    public static final String assemblyFullName = "PresentationFramework, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35";
    /**
     * Assembly name: PresentationFramework
     */
    public static final String assemblyShortName = "PresentationFramework";
    /**
     * Qualified class name: System.Windows.SystemFonts
     */
    public static final String className = "System.Windows.SystemFonts";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public SystemFonts(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link SystemFonts}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link SystemFonts} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static SystemFonts cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new SystemFonts(from.getJCOInstance());
    }

    // Constructors section
    
    public SystemFonts() throws Throwable {
    }

    
    // Methods section
    

    
    // Properties section
    
    public static double getCaptionFontSize() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.OverflowException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionFontSize = null;
        try {
            retObjectCaptionFontSize = classType.Get("CaptionFontSize");
            return (double)retObjectCaptionFontSize;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectCaptionFontSize_ToString = retObjectCaptionFontSize == null ? "null" : retObjectCaptionFontSize.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectCaptionFontSizeNumber = (java.lang.Number)retObjectCaptionFontSize;
                return retObjectCaptionFontSizeNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectCaptionFontSize != null ? retObjectCaptionFontSize.getClass() : "null", retObjectCaptionFontSize_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getIconFontSize() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.OverflowException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconFontSize = null;
        try {
            retObjectIconFontSize = classType.Get("IconFontSize");
            return (double)retObjectIconFontSize;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectIconFontSize_ToString = retObjectIconFontSize == null ? "null" : retObjectIconFontSize.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectIconFontSizeNumber = (java.lang.Number)retObjectIconFontSize;
                return retObjectIconFontSizeNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectIconFontSize != null ? retObjectIconFontSize.getClass() : "null", retObjectIconFontSize_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMenuFontSize() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.OverflowException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFontSize = null;
        try {
            retObjectMenuFontSize = classType.Get("MenuFontSize");
            return (double)retObjectMenuFontSize;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuFontSize_ToString = retObjectMenuFontSize == null ? "null" : retObjectMenuFontSize.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuFontSizeNumber = (java.lang.Number)retObjectMenuFontSize;
                return retObjectMenuFontSizeNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMenuFontSize != null ? retObjectMenuFontSize.getClass() : "null", retObjectMenuFontSize_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMessageFontSize() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.OverflowException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMessageFontSize = null;
        try {
            retObjectMessageFontSize = classType.Get("MessageFontSize");
            return (double)retObjectMessageFontSize;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMessageFontSize_ToString = retObjectMessageFontSize == null ? "null" : retObjectMessageFontSize.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMessageFontSizeNumber = (java.lang.Number)retObjectMessageFontSize;
                return retObjectMessageFontSizeNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMessageFontSize != null ? retObjectMessageFontSize.getClass() : "null", retObjectMessageFontSize_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getSmallCaptionFontSize() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.OverflowException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionFontSize = null;
        try {
            retObjectSmallCaptionFontSize = classType.Get("SmallCaptionFontSize");
            return (double)retObjectSmallCaptionFontSize;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectSmallCaptionFontSize_ToString = retObjectSmallCaptionFontSize == null ? "null" : retObjectSmallCaptionFontSize.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectSmallCaptionFontSizeNumber = (java.lang.Number)retObjectSmallCaptionFontSize;
                return retObjectSmallCaptionFontSizeNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectSmallCaptionFontSize != null ? retObjectSmallCaptionFontSize.getClass() : "null", retObjectSmallCaptionFontSize_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getStatusFontSize() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.OverflowException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStatusFontSize = null;
        try {
            retObjectStatusFontSize = classType.Get("StatusFontSize");
            return (double)retObjectStatusFontSize;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectStatusFontSize_ToString = retObjectStatusFontSize == null ? "null" : retObjectStatusFontSize.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectStatusFontSizeNumber = (java.lang.Number)retObjectStatusFontSize;
                return retObjectStatusFontSizeNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectStatusFontSize != null ? retObjectStatusFontSize.getClass() : "null", retObjectStatusFontSize_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontStyle getCaptionFontStyle() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionFontStyle = null;
        try {
            retObjectCaptionFontStyle = classType.Get("CaptionFontStyle");
            JCObject val = (JCObject)retObjectCaptionFontStyle;
            return new FontStyle(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionFontStyle != null ? retObjectCaptionFontStyle.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontStyle getIconFontStyle() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconFontStyle = null;
        try {
            retObjectIconFontStyle = classType.Get("IconFontStyle");
            JCObject val = (JCObject)retObjectIconFontStyle;
            return new FontStyle(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconFontStyle != null ? retObjectIconFontStyle.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontStyle getMenuFontStyle() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFontStyle = null;
        try {
            retObjectMenuFontStyle = classType.Get("MenuFontStyle");
            JCObject val = (JCObject)retObjectMenuFontStyle;
            return new FontStyle(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFontStyle != null ? retObjectMenuFontStyle.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontStyle getMessageFontStyle() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMessageFontStyle = null;
        try {
            retObjectMessageFontStyle = classType.Get("MessageFontStyle");
            JCObject val = (JCObject)retObjectMessageFontStyle;
            return new FontStyle(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMessageFontStyle != null ? retObjectMessageFontStyle.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontStyle getSmallCaptionFontStyle() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionFontStyle = null;
        try {
            retObjectSmallCaptionFontStyle = classType.Get("SmallCaptionFontStyle");
            JCObject val = (JCObject)retObjectSmallCaptionFontStyle;
            return new FontStyle(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionFontStyle != null ? retObjectSmallCaptionFontStyle.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontStyle getStatusFontStyle() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStatusFontStyle = null;
        try {
            retObjectStatusFontStyle = classType.Get("StatusFontStyle");
            JCObject val = (JCObject)retObjectStatusFontStyle;
            return new FontStyle(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStatusFontStyle != null ? retObjectStatusFontStyle.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontWeight getCaptionFontWeight() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionFontWeight = null;
        try {
            retObjectCaptionFontWeight = classType.Get("CaptionFontWeight");
            JCObject val = (JCObject)retObjectCaptionFontWeight;
            return new FontWeight(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionFontWeight != null ? retObjectCaptionFontWeight.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontWeight getIconFontWeight() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconFontWeight = null;
        try {
            retObjectIconFontWeight = classType.Get("IconFontWeight");
            JCObject val = (JCObject)retObjectIconFontWeight;
            return new FontWeight(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconFontWeight != null ? retObjectIconFontWeight.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontWeight getMenuFontWeight() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFontWeight = null;
        try {
            retObjectMenuFontWeight = classType.Get("MenuFontWeight");
            JCObject val = (JCObject)retObjectMenuFontWeight;
            return new FontWeight(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFontWeight != null ? retObjectMenuFontWeight.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontWeight getMessageFontWeight() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMessageFontWeight = null;
        try {
            retObjectMessageFontWeight = classType.Get("MessageFontWeight");
            JCObject val = (JCObject)retObjectMessageFontWeight;
            return new FontWeight(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMessageFontWeight != null ? retObjectMessageFontWeight.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontWeight getSmallCaptionFontWeight() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionFontWeight = null;
        try {
            retObjectSmallCaptionFontWeight = classType.Get("SmallCaptionFontWeight");
            JCObject val = (JCObject)retObjectSmallCaptionFontWeight;
            return new FontWeight(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionFontWeight != null ? retObjectSmallCaptionFontWeight.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontWeight getStatusFontWeight() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStatusFontWeight = null;
        try {
            retObjectStatusFontWeight = classType.Get("StatusFontWeight");
            JCObject val = (JCObject)retObjectStatusFontWeight;
            return new FontWeight(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStatusFontWeight != null ? retObjectStatusFontWeight.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontFamily getCaptionFontFamily() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.globalization.CultureNotFoundException, system.UriFormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionFontFamily = null;
        try {
            retObjectCaptionFontFamily = classType.Get("CaptionFontFamily");
            JCObject val = (JCObject)retObjectCaptionFontFamily;
            return new FontFamily(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionFontFamily != null ? retObjectCaptionFontFamily.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontFamily getIconFontFamily() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.globalization.CultureNotFoundException, system.UriFormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconFontFamily = null;
        try {
            retObjectIconFontFamily = classType.Get("IconFontFamily");
            JCObject val = (JCObject)retObjectIconFontFamily;
            return new FontFamily(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconFontFamily != null ? retObjectIconFontFamily.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontFamily getMenuFontFamily() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.globalization.CultureNotFoundException, system.UriFormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFontFamily = null;
        try {
            retObjectMenuFontFamily = classType.Get("MenuFontFamily");
            JCObject val = (JCObject)retObjectMenuFontFamily;
            return new FontFamily(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFontFamily != null ? retObjectMenuFontFamily.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontFamily getMessageFontFamily() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.globalization.CultureNotFoundException, system.UriFormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMessageFontFamily = null;
        try {
            retObjectMessageFontFamily = classType.Get("MessageFontFamily");
            JCObject val = (JCObject)retObjectMessageFontFamily;
            return new FontFamily(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMessageFontFamily != null ? retObjectMessageFontFamily.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontFamily getSmallCaptionFontFamily() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.globalization.CultureNotFoundException, system.UriFormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionFontFamily = null;
        try {
            retObjectSmallCaptionFontFamily = classType.Get("SmallCaptionFontFamily");
            JCObject val = (JCObject)retObjectSmallCaptionFontFamily;
            return new FontFamily(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionFontFamily != null ? retObjectSmallCaptionFontFamily.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static FontFamily getStatusFontFamily() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception, system.globalization.CultureNotFoundException, system.UriFormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStatusFontFamily = null;
        try {
            retObjectStatusFontFamily = classType.Get("StatusFontFamily");
            JCObject val = (JCObject)retObjectStatusFontFamily;
            return new FontFamily(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStatusFontFamily != null ? retObjectStatusFontFamily.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCaptionFontFamilyKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionFontFamilyKey = null;
        try {
            retObjectCaptionFontFamilyKey = classType.Get("CaptionFontFamilyKey");
            JCObject val = (JCObject)retObjectCaptionFontFamilyKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionFontFamilyKey != null ? retObjectCaptionFontFamilyKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCaptionFontSizeKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionFontSizeKey = null;
        try {
            retObjectCaptionFontSizeKey = classType.Get("CaptionFontSizeKey");
            JCObject val = (JCObject)retObjectCaptionFontSizeKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionFontSizeKey != null ? retObjectCaptionFontSizeKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCaptionFontStyleKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionFontStyleKey = null;
        try {
            retObjectCaptionFontStyleKey = classType.Get("CaptionFontStyleKey");
            JCObject val = (JCObject)retObjectCaptionFontStyleKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionFontStyleKey != null ? retObjectCaptionFontStyleKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCaptionFontTextDecorationsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionFontTextDecorationsKey = null;
        try {
            retObjectCaptionFontTextDecorationsKey = classType.Get("CaptionFontTextDecorationsKey");
            JCObject val = (JCObject)retObjectCaptionFontTextDecorationsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionFontTextDecorationsKey != null ? retObjectCaptionFontTextDecorationsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCaptionFontWeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionFontWeightKey = null;
        try {
            retObjectCaptionFontWeightKey = classType.Get("CaptionFontWeightKey");
            JCObject val = (JCObject)retObjectCaptionFontWeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionFontWeightKey != null ? retObjectCaptionFontWeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconFontFamilyKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconFontFamilyKey = null;
        try {
            retObjectIconFontFamilyKey = classType.Get("IconFontFamilyKey");
            JCObject val = (JCObject)retObjectIconFontFamilyKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconFontFamilyKey != null ? retObjectIconFontFamilyKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconFontSizeKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconFontSizeKey = null;
        try {
            retObjectIconFontSizeKey = classType.Get("IconFontSizeKey");
            JCObject val = (JCObject)retObjectIconFontSizeKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconFontSizeKey != null ? retObjectIconFontSizeKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconFontStyleKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconFontStyleKey = null;
        try {
            retObjectIconFontStyleKey = classType.Get("IconFontStyleKey");
            JCObject val = (JCObject)retObjectIconFontStyleKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconFontStyleKey != null ? retObjectIconFontStyleKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconFontTextDecorationsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconFontTextDecorationsKey = null;
        try {
            retObjectIconFontTextDecorationsKey = classType.Get("IconFontTextDecorationsKey");
            JCObject val = (JCObject)retObjectIconFontTextDecorationsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconFontTextDecorationsKey != null ? retObjectIconFontTextDecorationsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconFontWeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconFontWeightKey = null;
        try {
            retObjectIconFontWeightKey = classType.Get("IconFontWeightKey");
            JCObject val = (JCObject)retObjectIconFontWeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconFontWeightKey != null ? retObjectIconFontWeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuFontFamilyKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFontFamilyKey = null;
        try {
            retObjectMenuFontFamilyKey = classType.Get("MenuFontFamilyKey");
            JCObject val = (JCObject)retObjectMenuFontFamilyKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFontFamilyKey != null ? retObjectMenuFontFamilyKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuFontSizeKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFontSizeKey = null;
        try {
            retObjectMenuFontSizeKey = classType.Get("MenuFontSizeKey");
            JCObject val = (JCObject)retObjectMenuFontSizeKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFontSizeKey != null ? retObjectMenuFontSizeKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuFontStyleKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFontStyleKey = null;
        try {
            retObjectMenuFontStyleKey = classType.Get("MenuFontStyleKey");
            JCObject val = (JCObject)retObjectMenuFontStyleKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFontStyleKey != null ? retObjectMenuFontStyleKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuFontTextDecorationsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFontTextDecorationsKey = null;
        try {
            retObjectMenuFontTextDecorationsKey = classType.Get("MenuFontTextDecorationsKey");
            JCObject val = (JCObject)retObjectMenuFontTextDecorationsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFontTextDecorationsKey != null ? retObjectMenuFontTextDecorationsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuFontWeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFontWeightKey = null;
        try {
            retObjectMenuFontWeightKey = classType.Get("MenuFontWeightKey");
            JCObject val = (JCObject)retObjectMenuFontWeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFontWeightKey != null ? retObjectMenuFontWeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMessageFontFamilyKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMessageFontFamilyKey = null;
        try {
            retObjectMessageFontFamilyKey = classType.Get("MessageFontFamilyKey");
            JCObject val = (JCObject)retObjectMessageFontFamilyKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMessageFontFamilyKey != null ? retObjectMessageFontFamilyKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMessageFontSizeKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMessageFontSizeKey = null;
        try {
            retObjectMessageFontSizeKey = classType.Get("MessageFontSizeKey");
            JCObject val = (JCObject)retObjectMessageFontSizeKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMessageFontSizeKey != null ? retObjectMessageFontSizeKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMessageFontStyleKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMessageFontStyleKey = null;
        try {
            retObjectMessageFontStyleKey = classType.Get("MessageFontStyleKey");
            JCObject val = (JCObject)retObjectMessageFontStyleKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMessageFontStyleKey != null ? retObjectMessageFontStyleKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMessageFontTextDecorationsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMessageFontTextDecorationsKey = null;
        try {
            retObjectMessageFontTextDecorationsKey = classType.Get("MessageFontTextDecorationsKey");
            JCObject val = (JCObject)retObjectMessageFontTextDecorationsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMessageFontTextDecorationsKey != null ? retObjectMessageFontTextDecorationsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMessageFontWeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMessageFontWeightKey = null;
        try {
            retObjectMessageFontWeightKey = classType.Get("MessageFontWeightKey");
            JCObject val = (JCObject)retObjectMessageFontWeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMessageFontWeightKey != null ? retObjectMessageFontWeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallCaptionFontFamilyKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionFontFamilyKey = null;
        try {
            retObjectSmallCaptionFontFamilyKey = classType.Get("SmallCaptionFontFamilyKey");
            JCObject val = (JCObject)retObjectSmallCaptionFontFamilyKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionFontFamilyKey != null ? retObjectSmallCaptionFontFamilyKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallCaptionFontSizeKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionFontSizeKey = null;
        try {
            retObjectSmallCaptionFontSizeKey = classType.Get("SmallCaptionFontSizeKey");
            JCObject val = (JCObject)retObjectSmallCaptionFontSizeKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionFontSizeKey != null ? retObjectSmallCaptionFontSizeKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallCaptionFontStyleKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionFontStyleKey = null;
        try {
            retObjectSmallCaptionFontStyleKey = classType.Get("SmallCaptionFontStyleKey");
            JCObject val = (JCObject)retObjectSmallCaptionFontStyleKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionFontStyleKey != null ? retObjectSmallCaptionFontStyleKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallCaptionFontTextDecorationsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionFontTextDecorationsKey = null;
        try {
            retObjectSmallCaptionFontTextDecorationsKey = classType.Get("SmallCaptionFontTextDecorationsKey");
            JCObject val = (JCObject)retObjectSmallCaptionFontTextDecorationsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionFontTextDecorationsKey != null ? retObjectSmallCaptionFontTextDecorationsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallCaptionFontWeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionFontWeightKey = null;
        try {
            retObjectSmallCaptionFontWeightKey = classType.Get("SmallCaptionFontWeightKey");
            JCObject val = (JCObject)retObjectSmallCaptionFontWeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionFontWeightKey != null ? retObjectSmallCaptionFontWeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getStatusFontFamilyKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStatusFontFamilyKey = null;
        try {
            retObjectStatusFontFamilyKey = classType.Get("StatusFontFamilyKey");
            JCObject val = (JCObject)retObjectStatusFontFamilyKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStatusFontFamilyKey != null ? retObjectStatusFontFamilyKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getStatusFontSizeKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStatusFontSizeKey = null;
        try {
            retObjectStatusFontSizeKey = classType.Get("StatusFontSizeKey");
            JCObject val = (JCObject)retObjectStatusFontSizeKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStatusFontSizeKey != null ? retObjectStatusFontSizeKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getStatusFontStyleKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStatusFontStyleKey = null;
        try {
            retObjectStatusFontStyleKey = classType.Get("StatusFontStyleKey");
            JCObject val = (JCObject)retObjectStatusFontStyleKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStatusFontStyleKey != null ? retObjectStatusFontStyleKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getStatusFontTextDecorationsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStatusFontTextDecorationsKey = null;
        try {
            retObjectStatusFontTextDecorationsKey = classType.Get("StatusFontTextDecorationsKey");
            JCObject val = (JCObject)retObjectStatusFontTextDecorationsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStatusFontTextDecorationsKey != null ? retObjectStatusFontTextDecorationsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getStatusFontWeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStatusFontWeightKey = null;
        try {
            retObjectStatusFontWeightKey = classType.Get("StatusFontWeightKey");
            JCObject val = (JCObject)retObjectStatusFontWeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStatusFontWeightKey != null ? retObjectStatusFontWeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TextDecorationCollection getCaptionFontTextDecorations() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.InvalidOperationException, system.componentmodel.Win32Exception, system.ArgumentNullException, system.PlatformNotSupportedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionFontTextDecorations = null;
        try {
            retObjectCaptionFontTextDecorations = classType.Get("CaptionFontTextDecorations");
            JCObject val = (JCObject)retObjectCaptionFontTextDecorations;
            return new TextDecorationCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionFontTextDecorations != null ? retObjectCaptionFontTextDecorations.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TextDecorationCollection getIconFontTextDecorations() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.InvalidOperationException, system.componentmodel.Win32Exception, system.ArgumentNullException, system.PlatformNotSupportedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconFontTextDecorations = null;
        try {
            retObjectIconFontTextDecorations = classType.Get("IconFontTextDecorations");
            JCObject val = (JCObject)retObjectIconFontTextDecorations;
            return new TextDecorationCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconFontTextDecorations != null ? retObjectIconFontTextDecorations.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TextDecorationCollection getMenuFontTextDecorations() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.InvalidOperationException, system.componentmodel.Win32Exception, system.ArgumentNullException, system.PlatformNotSupportedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFontTextDecorations = null;
        try {
            retObjectMenuFontTextDecorations = classType.Get("MenuFontTextDecorations");
            JCObject val = (JCObject)retObjectMenuFontTextDecorations;
            return new TextDecorationCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFontTextDecorations != null ? retObjectMenuFontTextDecorations.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TextDecorationCollection getMessageFontTextDecorations() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.InvalidOperationException, system.componentmodel.Win32Exception, system.ArgumentNullException, system.PlatformNotSupportedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMessageFontTextDecorations = null;
        try {
            retObjectMessageFontTextDecorations = classType.Get("MessageFontTextDecorations");
            JCObject val = (JCObject)retObjectMessageFontTextDecorations;
            return new TextDecorationCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMessageFontTextDecorations != null ? retObjectMessageFontTextDecorations.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TextDecorationCollection getSmallCaptionFontTextDecorations() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.InvalidOperationException, system.componentmodel.Win32Exception, system.ArgumentNullException, system.PlatformNotSupportedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionFontTextDecorations = null;
        try {
            retObjectSmallCaptionFontTextDecorations = classType.Get("SmallCaptionFontTextDecorations");
            JCObject val = (JCObject)retObjectSmallCaptionFontTextDecorations;
            return new TextDecorationCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionFontTextDecorations != null ? retObjectSmallCaptionFontTextDecorations.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TextDecorationCollection getStatusFontTextDecorations() throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.InvalidOperationException, system.componentmodel.Win32Exception, system.ArgumentNullException, system.PlatformNotSupportedException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStatusFontTextDecorations = null;
        try {
            retObjectStatusFontTextDecorations = classType.Get("StatusFontTextDecorations");
            JCObject val = (JCObject)retObjectStatusFontTextDecorations;
            return new TextDecorationCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStatusFontTextDecorations != null ? retObjectStatusFontTextDecorations.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}