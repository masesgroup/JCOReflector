/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.windows;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.TimeSpan;
import system.windows.controls.primitives.PopupAnimation;
import system.windows.CornerRadius;
import system.windows.media.Brush;
import system.windows.media.Color;
import system.windows.PowerLineStatus;
import system.windows.Rect;
import system.windows.ResourceKey;
import system.windows.Thickness;


/**
 * The base .NET class managing System.Windows.SystemParameters, PresentationFramework, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Windows.SystemParameters" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Windows.SystemParameters</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class SystemParameters extends NetObject  {
    /**
     * Fully assembly qualified name: PresentationFramework, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
     */
    public static final String assemblyFullName = "PresentationFramework, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35";
    /**
     * Assembly name: PresentationFramework
     */
    public static final String assemblyShortName = "PresentationFramework";
    /**
     * Qualified class name: System.Windows.SystemParameters
     */
    public static final String className = "System.Windows.SystemParameters";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public SystemParameters(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link SystemParameters}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link SystemParameters} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static SystemParameters cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new SystemParameters(from.getJCOInstance());
    }

    // Constructors section
    
    public SystemParameters() throws Throwable {
    }

    
    // Methods section
    

    
    // Properties section
    
    public static boolean getClientAreaAnimation() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.NullReferenceException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectClientAreaAnimation = null;
        try {
            retObjectClientAreaAnimation = classType.Get("ClientAreaAnimation");
            return (boolean)retObjectClientAreaAnimation;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectClientAreaAnimation != null ? retObjectClientAreaAnimation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getComboBoxAnimation() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectComboBoxAnimation = null;
        try {
            retObjectComboBoxAnimation = classType.Get("ComboBoxAnimation");
            return (boolean)retObjectComboBoxAnimation;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectComboBoxAnimation != null ? retObjectComboBoxAnimation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getCursorShadow() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCursorShadow = null;
        try {
            retObjectCursorShadow = classType.Get("CursorShadow");
            return (boolean)retObjectCursorShadow;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectCursorShadow != null ? retObjectCursorShadow.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getDragFullWindows() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDragFullWindows = null;
        try {
            retObjectDragFullWindows = classType.Get("DragFullWindows");
            return (boolean)retObjectDragFullWindows;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectDragFullWindows != null ? retObjectDragFullWindows.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getDropShadow() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDropShadow = null;
        try {
            retObjectDropShadow = classType.Get("DropShadow");
            return (boolean)retObjectDropShadow;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectDropShadow != null ? retObjectDropShadow.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getFlatMenu() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFlatMenu = null;
        try {
            retObjectFlatMenu = classType.Get("FlatMenu");
            return (boolean)retObjectFlatMenu;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectFlatMenu != null ? retObjectFlatMenu.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getGradientCaptions() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGradientCaptions = null;
        try {
            retObjectGradientCaptions = classType.Get("GradientCaptions");
            return (boolean)retObjectGradientCaptions;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectGradientCaptions != null ? retObjectGradientCaptions.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getHighContrast() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighContrast = null;
        try {
            retObjectHighContrast = classType.Get("HighContrast");
            return (boolean)retObjectHighContrast;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectHighContrast != null ? retObjectHighContrast.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getHotTracking() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHotTracking = null;
        try {
            retObjectHotTracking = classType.Get("HotTracking");
            return (boolean)retObjectHotTracking;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectHotTracking != null ? retObjectHotTracking.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIconTitleWrap() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconTitleWrap = null;
        try {
            retObjectIconTitleWrap = classType.Get("IconTitleWrap");
            return (boolean)retObjectIconTitleWrap;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIconTitleWrap != null ? retObjectIconTitleWrap.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsGlassEnabled() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsGlassEnabled = null;
        try {
            retObjectIsGlassEnabled = classType.Get("IsGlassEnabled");
            return (boolean)retObjectIsGlassEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsGlassEnabled != null ? retObjectIsGlassEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsImmEnabled() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsImmEnabled = null;
        try {
            retObjectIsImmEnabled = classType.Get("IsImmEnabled");
            return (boolean)retObjectIsImmEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsImmEnabled != null ? retObjectIsImmEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsMediaCenter() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMediaCenter = null;
        try {
            retObjectIsMediaCenter = classType.Get("IsMediaCenter");
            return (boolean)retObjectIsMediaCenter;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsMediaCenter != null ? retObjectIsMediaCenter.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsMenuDropRightAligned() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMenuDropRightAligned = null;
        try {
            retObjectIsMenuDropRightAligned = classType.Get("IsMenuDropRightAligned");
            return (boolean)retObjectIsMenuDropRightAligned;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsMenuDropRightAligned != null ? retObjectIsMenuDropRightAligned.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsMiddleEastEnabled() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMiddleEastEnabled = null;
        try {
            retObjectIsMiddleEastEnabled = classType.Get("IsMiddleEastEnabled");
            return (boolean)retObjectIsMiddleEastEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsMiddleEastEnabled != null ? retObjectIsMiddleEastEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsMousePresent() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMousePresent = null;
        try {
            retObjectIsMousePresent = classType.Get("IsMousePresent");
            return (boolean)retObjectIsMousePresent;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsMousePresent != null ? retObjectIsMousePresent.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsMouseWheelPresent() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMouseWheelPresent = null;
        try {
            retObjectIsMouseWheelPresent = classType.Get("IsMouseWheelPresent");
            return (boolean)retObjectIsMouseWheelPresent;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsMouseWheelPresent != null ? retObjectIsMouseWheelPresent.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsPenWindows() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsPenWindows = null;
        try {
            retObjectIsPenWindows = classType.Get("IsPenWindows");
            return (boolean)retObjectIsPenWindows;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsPenWindows != null ? retObjectIsPenWindows.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsRemotelyControlled() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsRemotelyControlled = null;
        try {
            retObjectIsRemotelyControlled = classType.Get("IsRemotelyControlled");
            return (boolean)retObjectIsRemotelyControlled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsRemotelyControlled != null ? retObjectIsRemotelyControlled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsRemoteSession() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsRemoteSession = null;
        try {
            retObjectIsRemoteSession = classType.Get("IsRemoteSession");
            return (boolean)retObjectIsRemoteSession;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsRemoteSession != null ? retObjectIsRemoteSession.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsSlowMachine() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsSlowMachine = null;
        try {
            retObjectIsSlowMachine = classType.Get("IsSlowMachine");
            return (boolean)retObjectIsSlowMachine;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsSlowMachine != null ? retObjectIsSlowMachine.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getIsTabletPC() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsTabletPC = null;
        try {
            retObjectIsTabletPC = classType.Get("IsTabletPC");
            return (boolean)retObjectIsTabletPC;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsTabletPC != null ? retObjectIsTabletPC.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getKeyboardCues() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKeyboardCues = null;
        try {
            retObjectKeyboardCues = classType.Get("KeyboardCues");
            return (boolean)retObjectKeyboardCues;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectKeyboardCues != null ? retObjectKeyboardCues.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getKeyboardPreference() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKeyboardPreference = null;
        try {
            retObjectKeyboardPreference = classType.Get("KeyboardPreference");
            return (boolean)retObjectKeyboardPreference;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectKeyboardPreference != null ? retObjectKeyboardPreference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getListBoxSmoothScrolling() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectListBoxSmoothScrolling = null;
        try {
            retObjectListBoxSmoothScrolling = classType.Get("ListBoxSmoothScrolling");
            return (boolean)retObjectListBoxSmoothScrolling;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectListBoxSmoothScrolling != null ? retObjectListBoxSmoothScrolling.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getMenuAnimation() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuAnimation = null;
        try {
            retObjectMenuAnimation = classType.Get("MenuAnimation");
            return (boolean)retObjectMenuAnimation;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectMenuAnimation != null ? retObjectMenuAnimation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getMenuDropAlignment() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuDropAlignment = null;
        try {
            retObjectMenuDropAlignment = classType.Get("MenuDropAlignment");
            return (boolean)retObjectMenuDropAlignment;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectMenuDropAlignment != null ? retObjectMenuDropAlignment.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getMenuFade() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFade = null;
        try {
            retObjectMenuFade = classType.Get("MenuFade");
            return (boolean)retObjectMenuFade;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectMenuFade != null ? retObjectMenuFade.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getMinimizeAnimation() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizeAnimation = null;
        try {
            retObjectMinimizeAnimation = classType.Get("MinimizeAnimation");
            return (boolean)retObjectMinimizeAnimation;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectMinimizeAnimation != null ? retObjectMinimizeAnimation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getSelectionFade() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSelectionFade = null;
        try {
            retObjectSelectionFade = classType.Get("SelectionFade");
            return (boolean)retObjectSelectionFade;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectSelectionFade != null ? retObjectSelectionFade.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getShowSounds() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectShowSounds = null;
        try {
            retObjectShowSounds = classType.Get("ShowSounds");
            return (boolean)retObjectShowSounds;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectShowSounds != null ? retObjectShowSounds.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getSnapToDefaultButton() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSnapToDefaultButton = null;
        try {
            retObjectSnapToDefaultButton = classType.Get("SnapToDefaultButton");
            return (boolean)retObjectSnapToDefaultButton;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectSnapToDefaultButton != null ? retObjectSnapToDefaultButton.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getStylusHotTracking() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStylusHotTracking = null;
        try {
            retObjectStylusHotTracking = classType.Get("StylusHotTracking");
            return (boolean)retObjectStylusHotTracking;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectStylusHotTracking != null ? retObjectStylusHotTracking.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getSwapButtons() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSwapButtons = null;
        try {
            retObjectSwapButtons = classType.Get("SwapButtons");
            return (boolean)retObjectSwapButtons;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectSwapButtons != null ? retObjectSwapButtons.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getToolTipAnimation() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToolTipAnimation = null;
        try {
            retObjectToolTipAnimation = classType.Get("ToolTipAnimation");
            return (boolean)retObjectToolTipAnimation;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectToolTipAnimation != null ? retObjectToolTipAnimation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getToolTipFade() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToolTipFade = null;
        try {
            retObjectToolTipFade = classType.Get("ToolTipFade");
            return (boolean)retObjectToolTipFade;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectToolTipFade != null ? retObjectToolTipFade.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static boolean getUIEffects() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUIEffects = null;
        try {
            retObjectUIEffects = classType.Get("UIEffects");
            return (boolean)retObjectUIEffects;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectUIEffects != null ? retObjectUIEffects.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getBorderWidth() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectBorderWidth = null;
        try {
            retObjectBorderWidth = classType.Get("BorderWidth");
            return (double)retObjectBorderWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectBorderWidth_ToString = retObjectBorderWidth == null ? "null" : retObjectBorderWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectBorderWidthNumber = (java.lang.Number)retObjectBorderWidth;
                return retObjectBorderWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectBorderWidth != null ? retObjectBorderWidth.getClass() : "null", retObjectBorderWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getCaptionHeight() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionHeight = null;
        try {
            retObjectCaptionHeight = classType.Get("CaptionHeight");
            return (double)retObjectCaptionHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectCaptionHeight_ToString = retObjectCaptionHeight == null ? "null" : retObjectCaptionHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectCaptionHeightNumber = (java.lang.Number)retObjectCaptionHeight;
                return retObjectCaptionHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectCaptionHeight != null ? retObjectCaptionHeight.getClass() : "null", retObjectCaptionHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getCaptionWidth() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionWidth = null;
        try {
            retObjectCaptionWidth = classType.Get("CaptionWidth");
            return (double)retObjectCaptionWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectCaptionWidth_ToString = retObjectCaptionWidth == null ? "null" : retObjectCaptionWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectCaptionWidthNumber = (java.lang.Number)retObjectCaptionWidth;
                return retObjectCaptionWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectCaptionWidth != null ? retObjectCaptionWidth.getClass() : "null", retObjectCaptionWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getCaretWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.collections.generic.KeyNotFoundException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaretWidth = null;
        try {
            retObjectCaretWidth = classType.Get("CaretWidth");
            return (double)retObjectCaretWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectCaretWidth_ToString = retObjectCaretWidth == null ? "null" : retObjectCaretWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectCaretWidthNumber = (java.lang.Number)retObjectCaretWidth;
                return retObjectCaretWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectCaretWidth != null ? retObjectCaretWidth.getClass() : "null", retObjectCaretWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getCursorHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCursorHeight = null;
        try {
            retObjectCursorHeight = classType.Get("CursorHeight");
            return (double)retObjectCursorHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectCursorHeight_ToString = retObjectCursorHeight == null ? "null" : retObjectCursorHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectCursorHeightNumber = (java.lang.Number)retObjectCursorHeight;
                return retObjectCursorHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectCursorHeight != null ? retObjectCursorHeight.getClass() : "null", retObjectCursorHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getCursorWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCursorWidth = null;
        try {
            retObjectCursorWidth = classType.Get("CursorWidth");
            return (double)retObjectCursorWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectCursorWidth_ToString = retObjectCursorWidth == null ? "null" : retObjectCursorWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectCursorWidthNumber = (java.lang.Number)retObjectCursorWidth;
                return retObjectCursorWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectCursorWidth != null ? retObjectCursorWidth.getClass() : "null", retObjectCursorWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getFixedFrameHorizontalBorderHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFixedFrameHorizontalBorderHeight = null;
        try {
            retObjectFixedFrameHorizontalBorderHeight = classType.Get("FixedFrameHorizontalBorderHeight");
            return (double)retObjectFixedFrameHorizontalBorderHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectFixedFrameHorizontalBorderHeight_ToString = retObjectFixedFrameHorizontalBorderHeight == null ? "null" : retObjectFixedFrameHorizontalBorderHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectFixedFrameHorizontalBorderHeightNumber = (java.lang.Number)retObjectFixedFrameHorizontalBorderHeight;
                return retObjectFixedFrameHorizontalBorderHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectFixedFrameHorizontalBorderHeight != null ? retObjectFixedFrameHorizontalBorderHeight.getClass() : "null", retObjectFixedFrameHorizontalBorderHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getFixedFrameVerticalBorderWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFixedFrameVerticalBorderWidth = null;
        try {
            retObjectFixedFrameVerticalBorderWidth = classType.Get("FixedFrameVerticalBorderWidth");
            return (double)retObjectFixedFrameVerticalBorderWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectFixedFrameVerticalBorderWidth_ToString = retObjectFixedFrameVerticalBorderWidth == null ? "null" : retObjectFixedFrameVerticalBorderWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectFixedFrameVerticalBorderWidthNumber = (java.lang.Number)retObjectFixedFrameVerticalBorderWidth;
                return retObjectFixedFrameVerticalBorderWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectFixedFrameVerticalBorderWidth != null ? retObjectFixedFrameVerticalBorderWidth.getClass() : "null", retObjectFixedFrameVerticalBorderWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getFocusBorderHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFocusBorderHeight = null;
        try {
            retObjectFocusBorderHeight = classType.Get("FocusBorderHeight");
            return (double)retObjectFocusBorderHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectFocusBorderHeight_ToString = retObjectFocusBorderHeight == null ? "null" : retObjectFocusBorderHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectFocusBorderHeightNumber = (java.lang.Number)retObjectFocusBorderHeight;
                return retObjectFocusBorderHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectFocusBorderHeight != null ? retObjectFocusBorderHeight.getClass() : "null", retObjectFocusBorderHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getFocusBorderWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFocusBorderWidth = null;
        try {
            retObjectFocusBorderWidth = classType.Get("FocusBorderWidth");
            return (double)retObjectFocusBorderWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectFocusBorderWidth_ToString = retObjectFocusBorderWidth == null ? "null" : retObjectFocusBorderWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectFocusBorderWidthNumber = (java.lang.Number)retObjectFocusBorderWidth;
                return retObjectFocusBorderWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectFocusBorderWidth != null ? retObjectFocusBorderWidth.getClass() : "null", retObjectFocusBorderWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getFocusHorizontalBorderHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFocusHorizontalBorderHeight = null;
        try {
            retObjectFocusHorizontalBorderHeight = classType.Get("FocusHorizontalBorderHeight");
            return (double)retObjectFocusHorizontalBorderHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectFocusHorizontalBorderHeight_ToString = retObjectFocusHorizontalBorderHeight == null ? "null" : retObjectFocusHorizontalBorderHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectFocusHorizontalBorderHeightNumber = (java.lang.Number)retObjectFocusHorizontalBorderHeight;
                return retObjectFocusHorizontalBorderHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectFocusHorizontalBorderHeight != null ? retObjectFocusHorizontalBorderHeight.getClass() : "null", retObjectFocusHorizontalBorderHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getFocusVerticalBorderWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFocusVerticalBorderWidth = null;
        try {
            retObjectFocusVerticalBorderWidth = classType.Get("FocusVerticalBorderWidth");
            return (double)retObjectFocusVerticalBorderWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectFocusVerticalBorderWidth_ToString = retObjectFocusVerticalBorderWidth == null ? "null" : retObjectFocusVerticalBorderWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectFocusVerticalBorderWidthNumber = (java.lang.Number)retObjectFocusVerticalBorderWidth;
                return retObjectFocusVerticalBorderWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectFocusVerticalBorderWidth != null ? retObjectFocusVerticalBorderWidth.getClass() : "null", retObjectFocusVerticalBorderWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getFullPrimaryScreenHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFullPrimaryScreenHeight = null;
        try {
            retObjectFullPrimaryScreenHeight = classType.Get("FullPrimaryScreenHeight");
            return (double)retObjectFullPrimaryScreenHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectFullPrimaryScreenHeight_ToString = retObjectFullPrimaryScreenHeight == null ? "null" : retObjectFullPrimaryScreenHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectFullPrimaryScreenHeightNumber = (java.lang.Number)retObjectFullPrimaryScreenHeight;
                return retObjectFullPrimaryScreenHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectFullPrimaryScreenHeight != null ? retObjectFullPrimaryScreenHeight.getClass() : "null", retObjectFullPrimaryScreenHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getFullPrimaryScreenWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFullPrimaryScreenWidth = null;
        try {
            retObjectFullPrimaryScreenWidth = classType.Get("FullPrimaryScreenWidth");
            return (double)retObjectFullPrimaryScreenWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectFullPrimaryScreenWidth_ToString = retObjectFullPrimaryScreenWidth == null ? "null" : retObjectFullPrimaryScreenWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectFullPrimaryScreenWidthNumber = (java.lang.Number)retObjectFullPrimaryScreenWidth;
                return retObjectFullPrimaryScreenWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectFullPrimaryScreenWidth != null ? retObjectFullPrimaryScreenWidth.getClass() : "null", retObjectFullPrimaryScreenWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getHorizontalScrollBarButtonWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalScrollBarButtonWidth = null;
        try {
            retObjectHorizontalScrollBarButtonWidth = classType.Get("HorizontalScrollBarButtonWidth");
            return (double)retObjectHorizontalScrollBarButtonWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectHorizontalScrollBarButtonWidth_ToString = retObjectHorizontalScrollBarButtonWidth == null ? "null" : retObjectHorizontalScrollBarButtonWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectHorizontalScrollBarButtonWidthNumber = (java.lang.Number)retObjectHorizontalScrollBarButtonWidth;
                return retObjectHorizontalScrollBarButtonWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectHorizontalScrollBarButtonWidth != null ? retObjectHorizontalScrollBarButtonWidth.getClass() : "null", retObjectHorizontalScrollBarButtonWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getHorizontalScrollBarHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalScrollBarHeight = null;
        try {
            retObjectHorizontalScrollBarHeight = classType.Get("HorizontalScrollBarHeight");
            return (double)retObjectHorizontalScrollBarHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectHorizontalScrollBarHeight_ToString = retObjectHorizontalScrollBarHeight == null ? "null" : retObjectHorizontalScrollBarHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectHorizontalScrollBarHeightNumber = (java.lang.Number)retObjectHorizontalScrollBarHeight;
                return retObjectHorizontalScrollBarHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectHorizontalScrollBarHeight != null ? retObjectHorizontalScrollBarHeight.getClass() : "null", retObjectHorizontalScrollBarHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getHorizontalScrollBarThumbWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalScrollBarThumbWidth = null;
        try {
            retObjectHorizontalScrollBarThumbWidth = classType.Get("HorizontalScrollBarThumbWidth");
            return (double)retObjectHorizontalScrollBarThumbWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectHorizontalScrollBarThumbWidth_ToString = retObjectHorizontalScrollBarThumbWidth == null ? "null" : retObjectHorizontalScrollBarThumbWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectHorizontalScrollBarThumbWidthNumber = (java.lang.Number)retObjectHorizontalScrollBarThumbWidth;
                return retObjectHorizontalScrollBarThumbWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectHorizontalScrollBarThumbWidth != null ? retObjectHorizontalScrollBarThumbWidth.getClass() : "null", retObjectHorizontalScrollBarThumbWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getIconGridHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconGridHeight = null;
        try {
            retObjectIconGridHeight = classType.Get("IconGridHeight");
            return (double)retObjectIconGridHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectIconGridHeight_ToString = retObjectIconGridHeight == null ? "null" : retObjectIconGridHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectIconGridHeightNumber = (java.lang.Number)retObjectIconGridHeight;
                return retObjectIconGridHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectIconGridHeight != null ? retObjectIconGridHeight.getClass() : "null", retObjectIconGridHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getIconGridWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconGridWidth = null;
        try {
            retObjectIconGridWidth = classType.Get("IconGridWidth");
            return (double)retObjectIconGridWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectIconGridWidth_ToString = retObjectIconGridWidth == null ? "null" : retObjectIconGridWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectIconGridWidthNumber = (java.lang.Number)retObjectIconGridWidth;
                return retObjectIconGridWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectIconGridWidth != null ? retObjectIconGridWidth.getClass() : "null", retObjectIconGridWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getIconHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconHeight = null;
        try {
            retObjectIconHeight = classType.Get("IconHeight");
            return (double)retObjectIconHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectIconHeight_ToString = retObjectIconHeight == null ? "null" : retObjectIconHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectIconHeightNumber = (java.lang.Number)retObjectIconHeight;
                return retObjectIconHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectIconHeight != null ? retObjectIconHeight.getClass() : "null", retObjectIconHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getIconHorizontalSpacing() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconHorizontalSpacing = null;
        try {
            retObjectIconHorizontalSpacing = classType.Get("IconHorizontalSpacing");
            return (double)retObjectIconHorizontalSpacing;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectIconHorizontalSpacing_ToString = retObjectIconHorizontalSpacing == null ? "null" : retObjectIconHorizontalSpacing.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectIconHorizontalSpacingNumber = (java.lang.Number)retObjectIconHorizontalSpacing;
                return retObjectIconHorizontalSpacingNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectIconHorizontalSpacing != null ? retObjectIconHorizontalSpacing.getClass() : "null", retObjectIconHorizontalSpacing_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getIconVerticalSpacing() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconVerticalSpacing = null;
        try {
            retObjectIconVerticalSpacing = classType.Get("IconVerticalSpacing");
            return (double)retObjectIconVerticalSpacing;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectIconVerticalSpacing_ToString = retObjectIconVerticalSpacing == null ? "null" : retObjectIconVerticalSpacing.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectIconVerticalSpacingNumber = (java.lang.Number)retObjectIconVerticalSpacing;
                return retObjectIconVerticalSpacingNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectIconVerticalSpacing != null ? retObjectIconVerticalSpacing.getClass() : "null", retObjectIconVerticalSpacing_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getIconWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconWidth = null;
        try {
            retObjectIconWidth = classType.Get("IconWidth");
            return (double)retObjectIconWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectIconWidth_ToString = retObjectIconWidth == null ? "null" : retObjectIconWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectIconWidthNumber = (java.lang.Number)retObjectIconWidth;
                return retObjectIconWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectIconWidth != null ? retObjectIconWidth.getClass() : "null", retObjectIconWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getKanjiWindowHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKanjiWindowHeight = null;
        try {
            retObjectKanjiWindowHeight = classType.Get("KanjiWindowHeight");
            return (double)retObjectKanjiWindowHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectKanjiWindowHeight_ToString = retObjectKanjiWindowHeight == null ? "null" : retObjectKanjiWindowHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectKanjiWindowHeightNumber = (java.lang.Number)retObjectKanjiWindowHeight;
                return retObjectKanjiWindowHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectKanjiWindowHeight != null ? retObjectKanjiWindowHeight.getClass() : "null", retObjectKanjiWindowHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMaximizedPrimaryScreenHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMaximizedPrimaryScreenHeight = null;
        try {
            retObjectMaximizedPrimaryScreenHeight = classType.Get("MaximizedPrimaryScreenHeight");
            return (double)retObjectMaximizedPrimaryScreenHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMaximizedPrimaryScreenHeight_ToString = retObjectMaximizedPrimaryScreenHeight == null ? "null" : retObjectMaximizedPrimaryScreenHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMaximizedPrimaryScreenHeightNumber = (java.lang.Number)retObjectMaximizedPrimaryScreenHeight;
                return retObjectMaximizedPrimaryScreenHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMaximizedPrimaryScreenHeight != null ? retObjectMaximizedPrimaryScreenHeight.getClass() : "null", retObjectMaximizedPrimaryScreenHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMaximizedPrimaryScreenWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMaximizedPrimaryScreenWidth = null;
        try {
            retObjectMaximizedPrimaryScreenWidth = classType.Get("MaximizedPrimaryScreenWidth");
            return (double)retObjectMaximizedPrimaryScreenWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMaximizedPrimaryScreenWidth_ToString = retObjectMaximizedPrimaryScreenWidth == null ? "null" : retObjectMaximizedPrimaryScreenWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMaximizedPrimaryScreenWidthNumber = (java.lang.Number)retObjectMaximizedPrimaryScreenWidth;
                return retObjectMaximizedPrimaryScreenWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMaximizedPrimaryScreenWidth != null ? retObjectMaximizedPrimaryScreenWidth.getClass() : "null", retObjectMaximizedPrimaryScreenWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMaximumWindowTrackHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMaximumWindowTrackHeight = null;
        try {
            retObjectMaximumWindowTrackHeight = classType.Get("MaximumWindowTrackHeight");
            return (double)retObjectMaximumWindowTrackHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMaximumWindowTrackHeight_ToString = retObjectMaximumWindowTrackHeight == null ? "null" : retObjectMaximumWindowTrackHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMaximumWindowTrackHeightNumber = (java.lang.Number)retObjectMaximumWindowTrackHeight;
                return retObjectMaximumWindowTrackHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMaximumWindowTrackHeight != null ? retObjectMaximumWindowTrackHeight.getClass() : "null", retObjectMaximumWindowTrackHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMaximumWindowTrackWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMaximumWindowTrackWidth = null;
        try {
            retObjectMaximumWindowTrackWidth = classType.Get("MaximumWindowTrackWidth");
            return (double)retObjectMaximumWindowTrackWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMaximumWindowTrackWidth_ToString = retObjectMaximumWindowTrackWidth == null ? "null" : retObjectMaximumWindowTrackWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMaximumWindowTrackWidthNumber = (java.lang.Number)retObjectMaximumWindowTrackWidth;
                return retObjectMaximumWindowTrackWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMaximumWindowTrackWidth != null ? retObjectMaximumWindowTrackWidth.getClass() : "null", retObjectMaximumWindowTrackWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMenuBarHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuBarHeight = null;
        try {
            retObjectMenuBarHeight = classType.Get("MenuBarHeight");
            return (double)retObjectMenuBarHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuBarHeight_ToString = retObjectMenuBarHeight == null ? "null" : retObjectMenuBarHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuBarHeightNumber = (java.lang.Number)retObjectMenuBarHeight;
                return retObjectMenuBarHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMenuBarHeight != null ? retObjectMenuBarHeight.getClass() : "null", retObjectMenuBarHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMenuButtonHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuButtonHeight = null;
        try {
            retObjectMenuButtonHeight = classType.Get("MenuButtonHeight");
            return (double)retObjectMenuButtonHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuButtonHeight_ToString = retObjectMenuButtonHeight == null ? "null" : retObjectMenuButtonHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuButtonHeightNumber = (java.lang.Number)retObjectMenuButtonHeight;
                return retObjectMenuButtonHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMenuButtonHeight != null ? retObjectMenuButtonHeight.getClass() : "null", retObjectMenuButtonHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMenuButtonWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuButtonWidth = null;
        try {
            retObjectMenuButtonWidth = classType.Get("MenuButtonWidth");
            return (double)retObjectMenuButtonWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuButtonWidth_ToString = retObjectMenuButtonWidth == null ? "null" : retObjectMenuButtonWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuButtonWidthNumber = (java.lang.Number)retObjectMenuButtonWidth;
                return retObjectMenuButtonWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMenuButtonWidth != null ? retObjectMenuButtonWidth.getClass() : "null", retObjectMenuButtonWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMenuCheckmarkHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuCheckmarkHeight = null;
        try {
            retObjectMenuCheckmarkHeight = classType.Get("MenuCheckmarkHeight");
            return (double)retObjectMenuCheckmarkHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuCheckmarkHeight_ToString = retObjectMenuCheckmarkHeight == null ? "null" : retObjectMenuCheckmarkHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuCheckmarkHeightNumber = (java.lang.Number)retObjectMenuCheckmarkHeight;
                return retObjectMenuCheckmarkHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMenuCheckmarkHeight != null ? retObjectMenuCheckmarkHeight.getClass() : "null", retObjectMenuCheckmarkHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMenuCheckmarkWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuCheckmarkWidth = null;
        try {
            retObjectMenuCheckmarkWidth = classType.Get("MenuCheckmarkWidth");
            return (double)retObjectMenuCheckmarkWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuCheckmarkWidth_ToString = retObjectMenuCheckmarkWidth == null ? "null" : retObjectMenuCheckmarkWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuCheckmarkWidthNumber = (java.lang.Number)retObjectMenuCheckmarkWidth;
                return retObjectMenuCheckmarkWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMenuCheckmarkWidth != null ? retObjectMenuCheckmarkWidth.getClass() : "null", retObjectMenuCheckmarkWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMenuHeight() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuHeight = null;
        try {
            retObjectMenuHeight = classType.Get("MenuHeight");
            return (double)retObjectMenuHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuHeight_ToString = retObjectMenuHeight == null ? "null" : retObjectMenuHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuHeightNumber = (java.lang.Number)retObjectMenuHeight;
                return retObjectMenuHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMenuHeight != null ? retObjectMenuHeight.getClass() : "null", retObjectMenuHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMenuWidth() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuWidth = null;
        try {
            retObjectMenuWidth = classType.Get("MenuWidth");
            return (double)retObjectMenuWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuWidth_ToString = retObjectMenuWidth == null ? "null" : retObjectMenuWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuWidthNumber = (java.lang.Number)retObjectMenuWidth;
                return retObjectMenuWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMenuWidth != null ? retObjectMenuWidth.getClass() : "null", retObjectMenuWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMinimizedGridHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizedGridHeight = null;
        try {
            retObjectMinimizedGridHeight = classType.Get("MinimizedGridHeight");
            return (double)retObjectMinimizedGridHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMinimizedGridHeight_ToString = retObjectMinimizedGridHeight == null ? "null" : retObjectMinimizedGridHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMinimizedGridHeightNumber = (java.lang.Number)retObjectMinimizedGridHeight;
                return retObjectMinimizedGridHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMinimizedGridHeight != null ? retObjectMinimizedGridHeight.getClass() : "null", retObjectMinimizedGridHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMinimizedGridWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizedGridWidth = null;
        try {
            retObjectMinimizedGridWidth = classType.Get("MinimizedGridWidth");
            return (double)retObjectMinimizedGridWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMinimizedGridWidth_ToString = retObjectMinimizedGridWidth == null ? "null" : retObjectMinimizedGridWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMinimizedGridWidthNumber = (java.lang.Number)retObjectMinimizedGridWidth;
                return retObjectMinimizedGridWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMinimizedGridWidth != null ? retObjectMinimizedGridWidth.getClass() : "null", retObjectMinimizedGridWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMinimizedWindowHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizedWindowHeight = null;
        try {
            retObjectMinimizedWindowHeight = classType.Get("MinimizedWindowHeight");
            return (double)retObjectMinimizedWindowHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMinimizedWindowHeight_ToString = retObjectMinimizedWindowHeight == null ? "null" : retObjectMinimizedWindowHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMinimizedWindowHeightNumber = (java.lang.Number)retObjectMinimizedWindowHeight;
                return retObjectMinimizedWindowHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMinimizedWindowHeight != null ? retObjectMinimizedWindowHeight.getClass() : "null", retObjectMinimizedWindowHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMinimizedWindowWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizedWindowWidth = null;
        try {
            retObjectMinimizedWindowWidth = classType.Get("MinimizedWindowWidth");
            return (double)retObjectMinimizedWindowWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMinimizedWindowWidth_ToString = retObjectMinimizedWindowWidth == null ? "null" : retObjectMinimizedWindowWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMinimizedWindowWidthNumber = (java.lang.Number)retObjectMinimizedWindowWidth;
                return retObjectMinimizedWindowWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMinimizedWindowWidth != null ? retObjectMinimizedWindowWidth.getClass() : "null", retObjectMinimizedWindowWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMinimumHorizontalDragDistance() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumHorizontalDragDistance = null;
        try {
            retObjectMinimumHorizontalDragDistance = classType.Get("MinimumHorizontalDragDistance");
            return (double)retObjectMinimumHorizontalDragDistance;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMinimumHorizontalDragDistance_ToString = retObjectMinimumHorizontalDragDistance == null ? "null" : retObjectMinimumHorizontalDragDistance.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMinimumHorizontalDragDistanceNumber = (java.lang.Number)retObjectMinimumHorizontalDragDistance;
                return retObjectMinimumHorizontalDragDistanceNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMinimumHorizontalDragDistance != null ? retObjectMinimumHorizontalDragDistance.getClass() : "null", retObjectMinimumHorizontalDragDistance_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMinimumVerticalDragDistance() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumVerticalDragDistance = null;
        try {
            retObjectMinimumVerticalDragDistance = classType.Get("MinimumVerticalDragDistance");
            return (double)retObjectMinimumVerticalDragDistance;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMinimumVerticalDragDistance_ToString = retObjectMinimumVerticalDragDistance == null ? "null" : retObjectMinimumVerticalDragDistance.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMinimumVerticalDragDistanceNumber = (java.lang.Number)retObjectMinimumVerticalDragDistance;
                return retObjectMinimumVerticalDragDistanceNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMinimumVerticalDragDistance != null ? retObjectMinimumVerticalDragDistance.getClass() : "null", retObjectMinimumVerticalDragDistance_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMinimumWindowHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumWindowHeight = null;
        try {
            retObjectMinimumWindowHeight = classType.Get("MinimumWindowHeight");
            return (double)retObjectMinimumWindowHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMinimumWindowHeight_ToString = retObjectMinimumWindowHeight == null ? "null" : retObjectMinimumWindowHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMinimumWindowHeightNumber = (java.lang.Number)retObjectMinimumWindowHeight;
                return retObjectMinimumWindowHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMinimumWindowHeight != null ? retObjectMinimumWindowHeight.getClass() : "null", retObjectMinimumWindowHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMinimumWindowTrackHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumWindowTrackHeight = null;
        try {
            retObjectMinimumWindowTrackHeight = classType.Get("MinimumWindowTrackHeight");
            return (double)retObjectMinimumWindowTrackHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMinimumWindowTrackHeight_ToString = retObjectMinimumWindowTrackHeight == null ? "null" : retObjectMinimumWindowTrackHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMinimumWindowTrackHeightNumber = (java.lang.Number)retObjectMinimumWindowTrackHeight;
                return retObjectMinimumWindowTrackHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMinimumWindowTrackHeight != null ? retObjectMinimumWindowTrackHeight.getClass() : "null", retObjectMinimumWindowTrackHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMinimumWindowTrackWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumWindowTrackWidth = null;
        try {
            retObjectMinimumWindowTrackWidth = classType.Get("MinimumWindowTrackWidth");
            return (double)retObjectMinimumWindowTrackWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMinimumWindowTrackWidth_ToString = retObjectMinimumWindowTrackWidth == null ? "null" : retObjectMinimumWindowTrackWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMinimumWindowTrackWidthNumber = (java.lang.Number)retObjectMinimumWindowTrackWidth;
                return retObjectMinimumWindowTrackWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMinimumWindowTrackWidth != null ? retObjectMinimumWindowTrackWidth.getClass() : "null", retObjectMinimumWindowTrackWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMinimumWindowWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumWindowWidth = null;
        try {
            retObjectMinimumWindowWidth = classType.Get("MinimumWindowWidth");
            return (double)retObjectMinimumWindowWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMinimumWindowWidth_ToString = retObjectMinimumWindowWidth == null ? "null" : retObjectMinimumWindowWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMinimumWindowWidthNumber = (java.lang.Number)retObjectMinimumWindowWidth;
                return retObjectMinimumWindowWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMinimumWindowWidth != null ? retObjectMinimumWindowWidth.getClass() : "null", retObjectMinimumWindowWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMouseHoverHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseHoverHeight = null;
        try {
            retObjectMouseHoverHeight = classType.Get("MouseHoverHeight");
            return (double)retObjectMouseHoverHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMouseHoverHeight_ToString = retObjectMouseHoverHeight == null ? "null" : retObjectMouseHoverHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMouseHoverHeightNumber = (java.lang.Number)retObjectMouseHoverHeight;
                return retObjectMouseHoverHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMouseHoverHeight != null ? retObjectMouseHoverHeight.getClass() : "null", retObjectMouseHoverHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getMouseHoverWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseHoverWidth = null;
        try {
            retObjectMouseHoverWidth = classType.Get("MouseHoverWidth");
            return (double)retObjectMouseHoverWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMouseHoverWidth_ToString = retObjectMouseHoverWidth == null ? "null" : retObjectMouseHoverWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMouseHoverWidthNumber = (java.lang.Number)retObjectMouseHoverWidth;
                return retObjectMouseHoverWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectMouseHoverWidth != null ? retObjectMouseHoverWidth.getClass() : "null", retObjectMouseHoverWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getPrimaryScreenHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPrimaryScreenHeight = null;
        try {
            retObjectPrimaryScreenHeight = classType.Get("PrimaryScreenHeight");
            return (double)retObjectPrimaryScreenHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectPrimaryScreenHeight_ToString = retObjectPrimaryScreenHeight == null ? "null" : retObjectPrimaryScreenHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectPrimaryScreenHeightNumber = (java.lang.Number)retObjectPrimaryScreenHeight;
                return retObjectPrimaryScreenHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectPrimaryScreenHeight != null ? retObjectPrimaryScreenHeight.getClass() : "null", retObjectPrimaryScreenHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getPrimaryScreenWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPrimaryScreenWidth = null;
        try {
            retObjectPrimaryScreenWidth = classType.Get("PrimaryScreenWidth");
            return (double)retObjectPrimaryScreenWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectPrimaryScreenWidth_ToString = retObjectPrimaryScreenWidth == null ? "null" : retObjectPrimaryScreenWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectPrimaryScreenWidthNumber = (java.lang.Number)retObjectPrimaryScreenWidth;
                return retObjectPrimaryScreenWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectPrimaryScreenWidth != null ? retObjectPrimaryScreenWidth.getClass() : "null", retObjectPrimaryScreenWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getResizeFrameHorizontalBorderHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectResizeFrameHorizontalBorderHeight = null;
        try {
            retObjectResizeFrameHorizontalBorderHeight = classType.Get("ResizeFrameHorizontalBorderHeight");
            return (double)retObjectResizeFrameHorizontalBorderHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectResizeFrameHorizontalBorderHeight_ToString = retObjectResizeFrameHorizontalBorderHeight == null ? "null" : retObjectResizeFrameHorizontalBorderHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectResizeFrameHorizontalBorderHeightNumber = (java.lang.Number)retObjectResizeFrameHorizontalBorderHeight;
                return retObjectResizeFrameHorizontalBorderHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectResizeFrameHorizontalBorderHeight != null ? retObjectResizeFrameHorizontalBorderHeight.getClass() : "null", retObjectResizeFrameHorizontalBorderHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getResizeFrameVerticalBorderWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectResizeFrameVerticalBorderWidth = null;
        try {
            retObjectResizeFrameVerticalBorderWidth = classType.Get("ResizeFrameVerticalBorderWidth");
            return (double)retObjectResizeFrameVerticalBorderWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectResizeFrameVerticalBorderWidth_ToString = retObjectResizeFrameVerticalBorderWidth == null ? "null" : retObjectResizeFrameVerticalBorderWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectResizeFrameVerticalBorderWidthNumber = (java.lang.Number)retObjectResizeFrameVerticalBorderWidth;
                return retObjectResizeFrameVerticalBorderWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectResizeFrameVerticalBorderWidth != null ? retObjectResizeFrameVerticalBorderWidth.getClass() : "null", retObjectResizeFrameVerticalBorderWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getScrollHeight() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectScrollHeight = null;
        try {
            retObjectScrollHeight = classType.Get("ScrollHeight");
            return (double)retObjectScrollHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectScrollHeight_ToString = retObjectScrollHeight == null ? "null" : retObjectScrollHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectScrollHeightNumber = (java.lang.Number)retObjectScrollHeight;
                return retObjectScrollHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectScrollHeight != null ? retObjectScrollHeight.getClass() : "null", retObjectScrollHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getScrollWidth() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectScrollWidth = null;
        try {
            retObjectScrollWidth = classType.Get("ScrollWidth");
            return (double)retObjectScrollWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectScrollWidth_ToString = retObjectScrollWidth == null ? "null" : retObjectScrollWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectScrollWidthNumber = (java.lang.Number)retObjectScrollWidth;
                return retObjectScrollWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectScrollWidth != null ? retObjectScrollWidth.getClass() : "null", retObjectScrollWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getSmallCaptionHeight() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionHeight = null;
        try {
            retObjectSmallCaptionHeight = classType.Get("SmallCaptionHeight");
            return (double)retObjectSmallCaptionHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectSmallCaptionHeight_ToString = retObjectSmallCaptionHeight == null ? "null" : retObjectSmallCaptionHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectSmallCaptionHeightNumber = (java.lang.Number)retObjectSmallCaptionHeight;
                return retObjectSmallCaptionHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectSmallCaptionHeight != null ? retObjectSmallCaptionHeight.getClass() : "null", retObjectSmallCaptionHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getSmallCaptionWidth() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionWidth = null;
        try {
            retObjectSmallCaptionWidth = classType.Get("SmallCaptionWidth");
            return (double)retObjectSmallCaptionWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectSmallCaptionWidth_ToString = retObjectSmallCaptionWidth == null ? "null" : retObjectSmallCaptionWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectSmallCaptionWidthNumber = (java.lang.Number)retObjectSmallCaptionWidth;
                return retObjectSmallCaptionWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectSmallCaptionWidth != null ? retObjectSmallCaptionWidth.getClass() : "null", retObjectSmallCaptionWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getSmallIconHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallIconHeight = null;
        try {
            retObjectSmallIconHeight = classType.Get("SmallIconHeight");
            return (double)retObjectSmallIconHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectSmallIconHeight_ToString = retObjectSmallIconHeight == null ? "null" : retObjectSmallIconHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectSmallIconHeightNumber = (java.lang.Number)retObjectSmallIconHeight;
                return retObjectSmallIconHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectSmallIconHeight != null ? retObjectSmallIconHeight.getClass() : "null", retObjectSmallIconHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getSmallIconWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallIconWidth = null;
        try {
            retObjectSmallIconWidth = classType.Get("SmallIconWidth");
            return (double)retObjectSmallIconWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectSmallIconWidth_ToString = retObjectSmallIconWidth == null ? "null" : retObjectSmallIconWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectSmallIconWidthNumber = (java.lang.Number)retObjectSmallIconWidth;
                return retObjectSmallIconWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectSmallIconWidth != null ? retObjectSmallIconWidth.getClass() : "null", retObjectSmallIconWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getSmallWindowCaptionButtonHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallWindowCaptionButtonHeight = null;
        try {
            retObjectSmallWindowCaptionButtonHeight = classType.Get("SmallWindowCaptionButtonHeight");
            return (double)retObjectSmallWindowCaptionButtonHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectSmallWindowCaptionButtonHeight_ToString = retObjectSmallWindowCaptionButtonHeight == null ? "null" : retObjectSmallWindowCaptionButtonHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectSmallWindowCaptionButtonHeightNumber = (java.lang.Number)retObjectSmallWindowCaptionButtonHeight;
                return retObjectSmallWindowCaptionButtonHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectSmallWindowCaptionButtonHeight != null ? retObjectSmallWindowCaptionButtonHeight.getClass() : "null", retObjectSmallWindowCaptionButtonHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getSmallWindowCaptionButtonWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallWindowCaptionButtonWidth = null;
        try {
            retObjectSmallWindowCaptionButtonWidth = classType.Get("SmallWindowCaptionButtonWidth");
            return (double)retObjectSmallWindowCaptionButtonWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectSmallWindowCaptionButtonWidth_ToString = retObjectSmallWindowCaptionButtonWidth == null ? "null" : retObjectSmallWindowCaptionButtonWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectSmallWindowCaptionButtonWidthNumber = (java.lang.Number)retObjectSmallWindowCaptionButtonWidth;
                return retObjectSmallWindowCaptionButtonWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectSmallWindowCaptionButtonWidth != null ? retObjectSmallWindowCaptionButtonWidth.getClass() : "null", retObjectSmallWindowCaptionButtonWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getThickHorizontalBorderHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectThickHorizontalBorderHeight = null;
        try {
            retObjectThickHorizontalBorderHeight = classType.Get("ThickHorizontalBorderHeight");
            return (double)retObjectThickHorizontalBorderHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectThickHorizontalBorderHeight_ToString = retObjectThickHorizontalBorderHeight == null ? "null" : retObjectThickHorizontalBorderHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectThickHorizontalBorderHeightNumber = (java.lang.Number)retObjectThickHorizontalBorderHeight;
                return retObjectThickHorizontalBorderHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectThickHorizontalBorderHeight != null ? retObjectThickHorizontalBorderHeight.getClass() : "null", retObjectThickHorizontalBorderHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getThickVerticalBorderWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectThickVerticalBorderWidth = null;
        try {
            retObjectThickVerticalBorderWidth = classType.Get("ThickVerticalBorderWidth");
            return (double)retObjectThickVerticalBorderWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectThickVerticalBorderWidth_ToString = retObjectThickVerticalBorderWidth == null ? "null" : retObjectThickVerticalBorderWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectThickVerticalBorderWidthNumber = (java.lang.Number)retObjectThickVerticalBorderWidth;
                return retObjectThickVerticalBorderWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectThickVerticalBorderWidth != null ? retObjectThickVerticalBorderWidth.getClass() : "null", retObjectThickVerticalBorderWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getThinHorizontalBorderHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectThinHorizontalBorderHeight = null;
        try {
            retObjectThinHorizontalBorderHeight = classType.Get("ThinHorizontalBorderHeight");
            return (double)retObjectThinHorizontalBorderHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectThinHorizontalBorderHeight_ToString = retObjectThinHorizontalBorderHeight == null ? "null" : retObjectThinHorizontalBorderHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectThinHorizontalBorderHeightNumber = (java.lang.Number)retObjectThinHorizontalBorderHeight;
                return retObjectThinHorizontalBorderHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectThinHorizontalBorderHeight != null ? retObjectThinHorizontalBorderHeight.getClass() : "null", retObjectThinHorizontalBorderHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getThinVerticalBorderWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectThinVerticalBorderWidth = null;
        try {
            retObjectThinVerticalBorderWidth = classType.Get("ThinVerticalBorderWidth");
            return (double)retObjectThinVerticalBorderWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectThinVerticalBorderWidth_ToString = retObjectThinVerticalBorderWidth == null ? "null" : retObjectThinVerticalBorderWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectThinVerticalBorderWidthNumber = (java.lang.Number)retObjectThinVerticalBorderWidth;
                return retObjectThinVerticalBorderWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectThinVerticalBorderWidth != null ? retObjectThinVerticalBorderWidth.getClass() : "null", retObjectThinVerticalBorderWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getVerticalScrollBarButtonHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalScrollBarButtonHeight = null;
        try {
            retObjectVerticalScrollBarButtonHeight = classType.Get("VerticalScrollBarButtonHeight");
            return (double)retObjectVerticalScrollBarButtonHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVerticalScrollBarButtonHeight_ToString = retObjectVerticalScrollBarButtonHeight == null ? "null" : retObjectVerticalScrollBarButtonHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVerticalScrollBarButtonHeightNumber = (java.lang.Number)retObjectVerticalScrollBarButtonHeight;
                return retObjectVerticalScrollBarButtonHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectVerticalScrollBarButtonHeight != null ? retObjectVerticalScrollBarButtonHeight.getClass() : "null", retObjectVerticalScrollBarButtonHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getVerticalScrollBarThumbHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalScrollBarThumbHeight = null;
        try {
            retObjectVerticalScrollBarThumbHeight = classType.Get("VerticalScrollBarThumbHeight");
            return (double)retObjectVerticalScrollBarThumbHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVerticalScrollBarThumbHeight_ToString = retObjectVerticalScrollBarThumbHeight == null ? "null" : retObjectVerticalScrollBarThumbHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVerticalScrollBarThumbHeightNumber = (java.lang.Number)retObjectVerticalScrollBarThumbHeight;
                return retObjectVerticalScrollBarThumbHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectVerticalScrollBarThumbHeight != null ? retObjectVerticalScrollBarThumbHeight.getClass() : "null", retObjectVerticalScrollBarThumbHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getVerticalScrollBarWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalScrollBarWidth = null;
        try {
            retObjectVerticalScrollBarWidth = classType.Get("VerticalScrollBarWidth");
            return (double)retObjectVerticalScrollBarWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVerticalScrollBarWidth_ToString = retObjectVerticalScrollBarWidth == null ? "null" : retObjectVerticalScrollBarWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVerticalScrollBarWidthNumber = (java.lang.Number)retObjectVerticalScrollBarWidth;
                return retObjectVerticalScrollBarWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectVerticalScrollBarWidth != null ? retObjectVerticalScrollBarWidth.getClass() : "null", retObjectVerticalScrollBarWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getVirtualScreenHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVirtualScreenHeight = null;
        try {
            retObjectVirtualScreenHeight = classType.Get("VirtualScreenHeight");
            return (double)retObjectVirtualScreenHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVirtualScreenHeight_ToString = retObjectVirtualScreenHeight == null ? "null" : retObjectVirtualScreenHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVirtualScreenHeightNumber = (java.lang.Number)retObjectVirtualScreenHeight;
                return retObjectVirtualScreenHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectVirtualScreenHeight != null ? retObjectVirtualScreenHeight.getClass() : "null", retObjectVirtualScreenHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getVirtualScreenLeft() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVirtualScreenLeft = null;
        try {
            retObjectVirtualScreenLeft = classType.Get("VirtualScreenLeft");
            return (double)retObjectVirtualScreenLeft;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVirtualScreenLeft_ToString = retObjectVirtualScreenLeft == null ? "null" : retObjectVirtualScreenLeft.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVirtualScreenLeftNumber = (java.lang.Number)retObjectVirtualScreenLeft;
                return retObjectVirtualScreenLeftNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectVirtualScreenLeft != null ? retObjectVirtualScreenLeft.getClass() : "null", retObjectVirtualScreenLeft_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getVirtualScreenTop() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVirtualScreenTop = null;
        try {
            retObjectVirtualScreenTop = classType.Get("VirtualScreenTop");
            return (double)retObjectVirtualScreenTop;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVirtualScreenTop_ToString = retObjectVirtualScreenTop == null ? "null" : retObjectVirtualScreenTop.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVirtualScreenTopNumber = (java.lang.Number)retObjectVirtualScreenTop;
                return retObjectVirtualScreenTopNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectVirtualScreenTop != null ? retObjectVirtualScreenTop.getClass() : "null", retObjectVirtualScreenTop_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getVirtualScreenWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVirtualScreenWidth = null;
        try {
            retObjectVirtualScreenWidth = classType.Get("VirtualScreenWidth");
            return (double)retObjectVirtualScreenWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectVirtualScreenWidth_ToString = retObjectVirtualScreenWidth == null ? "null" : retObjectVirtualScreenWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectVirtualScreenWidthNumber = (java.lang.Number)retObjectVirtualScreenWidth;
                return retObjectVirtualScreenWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectVirtualScreenWidth != null ? retObjectVirtualScreenWidth.getClass() : "null", retObjectVirtualScreenWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getWindowCaptionButtonHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowCaptionButtonHeight = null;
        try {
            retObjectWindowCaptionButtonHeight = classType.Get("WindowCaptionButtonHeight");
            return (double)retObjectWindowCaptionButtonHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectWindowCaptionButtonHeight_ToString = retObjectWindowCaptionButtonHeight == null ? "null" : retObjectWindowCaptionButtonHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectWindowCaptionButtonHeightNumber = (java.lang.Number)retObjectWindowCaptionButtonHeight;
                return retObjectWindowCaptionButtonHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectWindowCaptionButtonHeight != null ? retObjectWindowCaptionButtonHeight.getClass() : "null", retObjectWindowCaptionButtonHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getWindowCaptionButtonWidth() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowCaptionButtonWidth = null;
        try {
            retObjectWindowCaptionButtonWidth = classType.Get("WindowCaptionButtonWidth");
            return (double)retObjectWindowCaptionButtonWidth;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectWindowCaptionButtonWidth_ToString = retObjectWindowCaptionButtonWidth == null ? "null" : retObjectWindowCaptionButtonWidth.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectWindowCaptionButtonWidthNumber = (java.lang.Number)retObjectWindowCaptionButtonWidth;
                return retObjectWindowCaptionButtonWidthNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectWindowCaptionButtonWidth != null ? retObjectWindowCaptionButtonWidth.getClass() : "null", retObjectWindowCaptionButtonWidth_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static double getWindowCaptionHeight() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowCaptionHeight = null;
        try {
            retObjectWindowCaptionHeight = classType.Get("WindowCaptionHeight");
            return (double)retObjectWindowCaptionHeight;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectWindowCaptionHeight_ToString = retObjectWindowCaptionHeight == null ? "null" : retObjectWindowCaptionHeight.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectWindowCaptionHeightNumber = (java.lang.Number)retObjectWindowCaptionHeight;
                return retObjectWindowCaptionHeightNumber.doubleValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into double and, as fallback solution, into java.lang.Number", retObjectWindowCaptionHeight != null ? retObjectWindowCaptionHeight.getClass() : "null", retObjectWindowCaptionHeight_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getBorder() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectBorder = null;
        try {
            retObjectBorder = classType.Get("Border");
            return (int)retObjectBorder;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectBorder_ToString = retObjectBorder == null ? "null" : retObjectBorder.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectBorderNumber = (java.lang.Number)retObjectBorder;
                return retObjectBorderNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectBorder != null ? retObjectBorder.getClass() : "null", retObjectBorder_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getForegroundFlashCount() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectForegroundFlashCount = null;
        try {
            retObjectForegroundFlashCount = classType.Get("ForegroundFlashCount");
            return (int)retObjectForegroundFlashCount;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectForegroundFlashCount_ToString = retObjectForegroundFlashCount == null ? "null" : retObjectForegroundFlashCount.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectForegroundFlashCountNumber = (java.lang.Number)retObjectForegroundFlashCount;
                return retObjectForegroundFlashCountNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectForegroundFlashCount != null ? retObjectForegroundFlashCount.getClass() : "null", retObjectForegroundFlashCount_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getKeyboardDelay() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKeyboardDelay = null;
        try {
            retObjectKeyboardDelay = classType.Get("KeyboardDelay");
            return (int)retObjectKeyboardDelay;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectKeyboardDelay_ToString = retObjectKeyboardDelay == null ? "null" : retObjectKeyboardDelay.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectKeyboardDelayNumber = (java.lang.Number)retObjectKeyboardDelay;
                return retObjectKeyboardDelayNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectKeyboardDelay != null ? retObjectKeyboardDelay.getClass() : "null", retObjectKeyboardDelay_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getKeyboardSpeed() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKeyboardSpeed = null;
        try {
            retObjectKeyboardSpeed = classType.Get("KeyboardSpeed");
            return (int)retObjectKeyboardSpeed;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectKeyboardSpeed_ToString = retObjectKeyboardSpeed == null ? "null" : retObjectKeyboardSpeed.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectKeyboardSpeedNumber = (java.lang.Number)retObjectKeyboardSpeed;
                return retObjectKeyboardSpeedNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectKeyboardSpeed != null ? retObjectKeyboardSpeed.getClass() : "null", retObjectKeyboardSpeed_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getMenuShowDelay() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuShowDelay = null;
        try {
            retObjectMenuShowDelay = classType.Get("MenuShowDelay");
            return (int)retObjectMenuShowDelay;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMenuShowDelay_ToString = retObjectMenuShowDelay == null ? "null" : retObjectMenuShowDelay.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMenuShowDelayNumber = (java.lang.Number)retObjectMenuShowDelay;
                return retObjectMenuShowDelayNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectMenuShowDelay != null ? retObjectMenuShowDelay.getClass() : "null", retObjectMenuShowDelay_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static int getWheelScrollLines() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWheelScrollLines = null;
        try {
            retObjectWheelScrollLines = classType.Get("WheelScrollLines");
            return (int)retObjectWheelScrollLines;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectWheelScrollLines_ToString = retObjectWheelScrollLines == null ? "null" : retObjectWheelScrollLines.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectWheelScrollLinesNumber = (java.lang.Number)retObjectWheelScrollLines;
                return retObjectWheelScrollLinesNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectWheelScrollLines != null ? retObjectWheelScrollLines.getClass() : "null", retObjectWheelScrollLines_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String getUxThemeColor() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUxThemeColor = null;
        try {
            retObjectUxThemeColor = classType.Get("UxThemeColor");
            return (java.lang.String)retObjectUxThemeColor;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into java.lang.String", retObjectUxThemeColor != null ? retObjectUxThemeColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static java.lang.String getUxThemeName() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUxThemeName = null;
        try {
            retObjectUxThemeName = classType.Get("UxThemeName");
            return (java.lang.String)retObjectUxThemeName;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into java.lang.String", retObjectUxThemeName != null ? retObjectUxThemeName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static TimeSpan getMouseHoverTime() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseHoverTime = null;
        try {
            retObjectMouseHoverTime = classType.Get("MouseHoverTime");
            JCObject val = (JCObject)retObjectMouseHoverTime;
            return new TimeSpan(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMouseHoverTime != null ? retObjectMouseHoverTime.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PopupAnimation getComboBoxPopupAnimation() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectComboBoxPopupAnimation = null;
        try {
            retObjectComboBoxPopupAnimation = classType.Get("ComboBoxPopupAnimation");
            JCObject val = (JCObject)retObjectComboBoxPopupAnimation;
            return new PopupAnimation(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectComboBoxPopupAnimation != null ? retObjectComboBoxPopupAnimation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PopupAnimation getMenuPopupAnimation() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuPopupAnimation = null;
        try {
            retObjectMenuPopupAnimation = classType.Get("MenuPopupAnimation");
            JCObject val = (JCObject)retObjectMenuPopupAnimation;
            return new PopupAnimation(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuPopupAnimation != null ? retObjectMenuPopupAnimation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PopupAnimation getToolTipPopupAnimation() throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToolTipPopupAnimation = null;
        try {
            retObjectToolTipPopupAnimation = classType.Get("ToolTipPopupAnimation");
            JCObject val = (JCObject)retObjectToolTipPopupAnimation;
            return new PopupAnimation(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToolTipPopupAnimation != null ? retObjectToolTipPopupAnimation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CornerRadius getWindowCornerRadius() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowCornerRadius = null;
        try {
            retObjectWindowCornerRadius = classType.Get("WindowCornerRadius");
            JCObject val = (JCObject)retObjectWindowCornerRadius;
            return new CornerRadius(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowCornerRadius != null ? retObjectWindowCornerRadius.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Brush getWindowGlassBrush() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowGlassBrush = null;
        try {
            retObjectWindowGlassBrush = classType.Get("WindowGlassBrush");
            JCObject val = (JCObject)retObjectWindowGlassBrush;
            return new Brush(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowGlassBrush != null ? retObjectWindowGlassBrush.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Color getWindowGlassColor() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowGlassColor = null;
        try {
            retObjectWindowGlassColor = classType.Get("WindowGlassColor");
            JCObject val = (JCObject)retObjectWindowGlassColor;
            return new Color(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowGlassColor != null ? retObjectWindowGlassColor.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static PowerLineStatus getPowerLineStatus() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPowerLineStatus = null;
        try {
            retObjectPowerLineStatus = classType.Get("PowerLineStatus");
            JCObject val = (JCObject)retObjectPowerLineStatus;
            return new PowerLineStatus(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPowerLineStatus != null ? retObjectPowerLineStatus.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Rect getWorkArea() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.FormatException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWorkArea = null;
        try {
            retObjectWorkArea = classType.Get("WorkArea");
            JCObject val = (JCObject)retObjectWorkArea;
            return new Rect(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWorkArea != null ? retObjectWorkArea.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getBorderKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectBorderKey = null;
        try {
            retObjectBorderKey = classType.Get("BorderKey");
            JCObject val = (JCObject)retObjectBorderKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBorderKey != null ? retObjectBorderKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getBorderWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectBorderWidthKey = null;
        try {
            retObjectBorderWidthKey = classType.Get("BorderWidthKey");
            JCObject val = (JCObject)retObjectBorderWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectBorderWidthKey != null ? retObjectBorderWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCaptionHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionHeightKey = null;
        try {
            retObjectCaptionHeightKey = classType.Get("CaptionHeightKey");
            JCObject val = (JCObject)retObjectCaptionHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionHeightKey != null ? retObjectCaptionHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCaptionWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaptionWidthKey = null;
        try {
            retObjectCaptionWidthKey = classType.Get("CaptionWidthKey");
            JCObject val = (JCObject)retObjectCaptionWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaptionWidthKey != null ? retObjectCaptionWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCaretWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCaretWidthKey = null;
        try {
            retObjectCaretWidthKey = classType.Get("CaretWidthKey");
            JCObject val = (JCObject)retObjectCaretWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCaretWidthKey != null ? retObjectCaretWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getClientAreaAnimationKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectClientAreaAnimationKey = null;
        try {
            retObjectClientAreaAnimationKey = classType.Get("ClientAreaAnimationKey");
            JCObject val = (JCObject)retObjectClientAreaAnimationKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectClientAreaAnimationKey != null ? retObjectClientAreaAnimationKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getComboBoxAnimationKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectComboBoxAnimationKey = null;
        try {
            retObjectComboBoxAnimationKey = classType.Get("ComboBoxAnimationKey");
            JCObject val = (JCObject)retObjectComboBoxAnimationKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectComboBoxAnimationKey != null ? retObjectComboBoxAnimationKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getComboBoxPopupAnimationKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectComboBoxPopupAnimationKey = null;
        try {
            retObjectComboBoxPopupAnimationKey = classType.Get("ComboBoxPopupAnimationKey");
            JCObject val = (JCObject)retObjectComboBoxPopupAnimationKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectComboBoxPopupAnimationKey != null ? retObjectComboBoxPopupAnimationKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCursorHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCursorHeightKey = null;
        try {
            retObjectCursorHeightKey = classType.Get("CursorHeightKey");
            JCObject val = (JCObject)retObjectCursorHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCursorHeightKey != null ? retObjectCursorHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCursorShadowKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCursorShadowKey = null;
        try {
            retObjectCursorShadowKey = classType.Get("CursorShadowKey");
            JCObject val = (JCObject)retObjectCursorShadowKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCursorShadowKey != null ? retObjectCursorShadowKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getCursorWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectCursorWidthKey = null;
        try {
            retObjectCursorWidthKey = classType.Get("CursorWidthKey");
            JCObject val = (JCObject)retObjectCursorWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCursorWidthKey != null ? retObjectCursorWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getDragFullWindowsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDragFullWindowsKey = null;
        try {
            retObjectDragFullWindowsKey = classType.Get("DragFullWindowsKey");
            JCObject val = (JCObject)retObjectDragFullWindowsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDragFullWindowsKey != null ? retObjectDragFullWindowsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getDropShadowKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectDropShadowKey = null;
        try {
            retObjectDropShadowKey = classType.Get("DropShadowKey");
            JCObject val = (JCObject)retObjectDropShadowKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDropShadowKey != null ? retObjectDropShadowKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getFixedFrameHorizontalBorderHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFixedFrameHorizontalBorderHeightKey = null;
        try {
            retObjectFixedFrameHorizontalBorderHeightKey = classType.Get("FixedFrameHorizontalBorderHeightKey");
            JCObject val = (JCObject)retObjectFixedFrameHorizontalBorderHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFixedFrameHorizontalBorderHeightKey != null ? retObjectFixedFrameHorizontalBorderHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getFixedFrameVerticalBorderWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFixedFrameVerticalBorderWidthKey = null;
        try {
            retObjectFixedFrameVerticalBorderWidthKey = classType.Get("FixedFrameVerticalBorderWidthKey");
            JCObject val = (JCObject)retObjectFixedFrameVerticalBorderWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFixedFrameVerticalBorderWidthKey != null ? retObjectFixedFrameVerticalBorderWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getFlatMenuKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFlatMenuKey = null;
        try {
            retObjectFlatMenuKey = classType.Get("FlatMenuKey");
            JCObject val = (JCObject)retObjectFlatMenuKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFlatMenuKey != null ? retObjectFlatMenuKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getFocusBorderHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFocusBorderHeightKey = null;
        try {
            retObjectFocusBorderHeightKey = classType.Get("FocusBorderHeightKey");
            JCObject val = (JCObject)retObjectFocusBorderHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFocusBorderHeightKey != null ? retObjectFocusBorderHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getFocusBorderWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFocusBorderWidthKey = null;
        try {
            retObjectFocusBorderWidthKey = classType.Get("FocusBorderWidthKey");
            JCObject val = (JCObject)retObjectFocusBorderWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFocusBorderWidthKey != null ? retObjectFocusBorderWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getFocusHorizontalBorderHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFocusHorizontalBorderHeightKey = null;
        try {
            retObjectFocusHorizontalBorderHeightKey = classType.Get("FocusHorizontalBorderHeightKey");
            JCObject val = (JCObject)retObjectFocusHorizontalBorderHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFocusHorizontalBorderHeightKey != null ? retObjectFocusHorizontalBorderHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getFocusVerticalBorderWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFocusVerticalBorderWidthKey = null;
        try {
            retObjectFocusVerticalBorderWidthKey = classType.Get("FocusVerticalBorderWidthKey");
            JCObject val = (JCObject)retObjectFocusVerticalBorderWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFocusVerticalBorderWidthKey != null ? retObjectFocusVerticalBorderWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getFocusVisualStyleKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFocusVisualStyleKey = null;
        try {
            retObjectFocusVisualStyleKey = classType.Get("FocusVisualStyleKey");
            JCObject val = (JCObject)retObjectFocusVisualStyleKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFocusVisualStyleKey != null ? retObjectFocusVisualStyleKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getForegroundFlashCountKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectForegroundFlashCountKey = null;
        try {
            retObjectForegroundFlashCountKey = classType.Get("ForegroundFlashCountKey");
            JCObject val = (JCObject)retObjectForegroundFlashCountKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectForegroundFlashCountKey != null ? retObjectForegroundFlashCountKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getFullPrimaryScreenHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFullPrimaryScreenHeightKey = null;
        try {
            retObjectFullPrimaryScreenHeightKey = classType.Get("FullPrimaryScreenHeightKey");
            JCObject val = (JCObject)retObjectFullPrimaryScreenHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFullPrimaryScreenHeightKey != null ? retObjectFullPrimaryScreenHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getFullPrimaryScreenWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectFullPrimaryScreenWidthKey = null;
        try {
            retObjectFullPrimaryScreenWidthKey = classType.Get("FullPrimaryScreenWidthKey");
            JCObject val = (JCObject)retObjectFullPrimaryScreenWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFullPrimaryScreenWidthKey != null ? retObjectFullPrimaryScreenWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getGradientCaptionsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGradientCaptionsKey = null;
        try {
            retObjectGradientCaptionsKey = classType.Get("GradientCaptionsKey");
            JCObject val = (JCObject)retObjectGradientCaptionsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGradientCaptionsKey != null ? retObjectGradientCaptionsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHighContrastKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHighContrastKey = null;
        try {
            retObjectHighContrastKey = classType.Get("HighContrastKey");
            JCObject val = (JCObject)retObjectHighContrastKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHighContrastKey != null ? retObjectHighContrastKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHorizontalScrollBarButtonWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalScrollBarButtonWidthKey = null;
        try {
            retObjectHorizontalScrollBarButtonWidthKey = classType.Get("HorizontalScrollBarButtonWidthKey");
            JCObject val = (JCObject)retObjectHorizontalScrollBarButtonWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHorizontalScrollBarButtonWidthKey != null ? retObjectHorizontalScrollBarButtonWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHorizontalScrollBarHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalScrollBarHeightKey = null;
        try {
            retObjectHorizontalScrollBarHeightKey = classType.Get("HorizontalScrollBarHeightKey");
            JCObject val = (JCObject)retObjectHorizontalScrollBarHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHorizontalScrollBarHeightKey != null ? retObjectHorizontalScrollBarHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHorizontalScrollBarThumbWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHorizontalScrollBarThumbWidthKey = null;
        try {
            retObjectHorizontalScrollBarThumbWidthKey = classType.Get("HorizontalScrollBarThumbWidthKey");
            JCObject val = (JCObject)retObjectHorizontalScrollBarThumbWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHorizontalScrollBarThumbWidthKey != null ? retObjectHorizontalScrollBarThumbWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getHotTrackingKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectHotTrackingKey = null;
        try {
            retObjectHotTrackingKey = classType.Get("HotTrackingKey");
            JCObject val = (JCObject)retObjectHotTrackingKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectHotTrackingKey != null ? retObjectHotTrackingKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconGridHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconGridHeightKey = null;
        try {
            retObjectIconGridHeightKey = classType.Get("IconGridHeightKey");
            JCObject val = (JCObject)retObjectIconGridHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconGridHeightKey != null ? retObjectIconGridHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconGridWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconGridWidthKey = null;
        try {
            retObjectIconGridWidthKey = classType.Get("IconGridWidthKey");
            JCObject val = (JCObject)retObjectIconGridWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconGridWidthKey != null ? retObjectIconGridWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconHeightKey = null;
        try {
            retObjectIconHeightKey = classType.Get("IconHeightKey");
            JCObject val = (JCObject)retObjectIconHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconHeightKey != null ? retObjectIconHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconHorizontalSpacingKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconHorizontalSpacingKey = null;
        try {
            retObjectIconHorizontalSpacingKey = classType.Get("IconHorizontalSpacingKey");
            JCObject val = (JCObject)retObjectIconHorizontalSpacingKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconHorizontalSpacingKey != null ? retObjectIconHorizontalSpacingKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconTitleWrapKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconTitleWrapKey = null;
        try {
            retObjectIconTitleWrapKey = classType.Get("IconTitleWrapKey");
            JCObject val = (JCObject)retObjectIconTitleWrapKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconTitleWrapKey != null ? retObjectIconTitleWrapKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconVerticalSpacingKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconVerticalSpacingKey = null;
        try {
            retObjectIconVerticalSpacingKey = classType.Get("IconVerticalSpacingKey");
            JCObject val = (JCObject)retObjectIconVerticalSpacingKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconVerticalSpacingKey != null ? retObjectIconVerticalSpacingKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIconWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIconWidthKey = null;
        try {
            retObjectIconWidthKey = classType.Get("IconWidthKey");
            JCObject val = (JCObject)retObjectIconWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIconWidthKey != null ? retObjectIconWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsImmEnabledKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsImmEnabledKey = null;
        try {
            retObjectIsImmEnabledKey = classType.Get("IsImmEnabledKey");
            JCObject val = (JCObject)retObjectIsImmEnabledKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsImmEnabledKey != null ? retObjectIsImmEnabledKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsMediaCenterKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMediaCenterKey = null;
        try {
            retObjectIsMediaCenterKey = classType.Get("IsMediaCenterKey");
            JCObject val = (JCObject)retObjectIsMediaCenterKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsMediaCenterKey != null ? retObjectIsMediaCenterKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsMenuDropRightAlignedKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMenuDropRightAlignedKey = null;
        try {
            retObjectIsMenuDropRightAlignedKey = classType.Get("IsMenuDropRightAlignedKey");
            JCObject val = (JCObject)retObjectIsMenuDropRightAlignedKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsMenuDropRightAlignedKey != null ? retObjectIsMenuDropRightAlignedKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsMiddleEastEnabledKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMiddleEastEnabledKey = null;
        try {
            retObjectIsMiddleEastEnabledKey = classType.Get("IsMiddleEastEnabledKey");
            JCObject val = (JCObject)retObjectIsMiddleEastEnabledKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsMiddleEastEnabledKey != null ? retObjectIsMiddleEastEnabledKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsMousePresentKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMousePresentKey = null;
        try {
            retObjectIsMousePresentKey = classType.Get("IsMousePresentKey");
            JCObject val = (JCObject)retObjectIsMousePresentKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsMousePresentKey != null ? retObjectIsMousePresentKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsMouseWheelPresentKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsMouseWheelPresentKey = null;
        try {
            retObjectIsMouseWheelPresentKey = classType.Get("IsMouseWheelPresentKey");
            JCObject val = (JCObject)retObjectIsMouseWheelPresentKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsMouseWheelPresentKey != null ? retObjectIsMouseWheelPresentKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsPenWindowsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsPenWindowsKey = null;
        try {
            retObjectIsPenWindowsKey = classType.Get("IsPenWindowsKey");
            JCObject val = (JCObject)retObjectIsPenWindowsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsPenWindowsKey != null ? retObjectIsPenWindowsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsRemotelyControlledKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsRemotelyControlledKey = null;
        try {
            retObjectIsRemotelyControlledKey = classType.Get("IsRemotelyControlledKey");
            JCObject val = (JCObject)retObjectIsRemotelyControlledKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsRemotelyControlledKey != null ? retObjectIsRemotelyControlledKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsRemoteSessionKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsRemoteSessionKey = null;
        try {
            retObjectIsRemoteSessionKey = classType.Get("IsRemoteSessionKey");
            JCObject val = (JCObject)retObjectIsRemoteSessionKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsRemoteSessionKey != null ? retObjectIsRemoteSessionKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsSlowMachineKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsSlowMachineKey = null;
        try {
            retObjectIsSlowMachineKey = classType.Get("IsSlowMachineKey");
            JCObject val = (JCObject)retObjectIsSlowMachineKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsSlowMachineKey != null ? retObjectIsSlowMachineKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getIsTabletPCKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectIsTabletPCKey = null;
        try {
            retObjectIsTabletPCKey = classType.Get("IsTabletPCKey");
            JCObject val = (JCObject)retObjectIsTabletPCKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectIsTabletPCKey != null ? retObjectIsTabletPCKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getKanjiWindowHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKanjiWindowHeightKey = null;
        try {
            retObjectKanjiWindowHeightKey = classType.Get("KanjiWindowHeightKey");
            JCObject val = (JCObject)retObjectKanjiWindowHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectKanjiWindowHeightKey != null ? retObjectKanjiWindowHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getKeyboardCuesKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKeyboardCuesKey = null;
        try {
            retObjectKeyboardCuesKey = classType.Get("KeyboardCuesKey");
            JCObject val = (JCObject)retObjectKeyboardCuesKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectKeyboardCuesKey != null ? retObjectKeyboardCuesKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getKeyboardDelayKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKeyboardDelayKey = null;
        try {
            retObjectKeyboardDelayKey = classType.Get("KeyboardDelayKey");
            JCObject val = (JCObject)retObjectKeyboardDelayKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectKeyboardDelayKey != null ? retObjectKeyboardDelayKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getKeyboardPreferenceKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKeyboardPreferenceKey = null;
        try {
            retObjectKeyboardPreferenceKey = classType.Get("KeyboardPreferenceKey");
            JCObject val = (JCObject)retObjectKeyboardPreferenceKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectKeyboardPreferenceKey != null ? retObjectKeyboardPreferenceKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getKeyboardSpeedKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectKeyboardSpeedKey = null;
        try {
            retObjectKeyboardSpeedKey = classType.Get("KeyboardSpeedKey");
            JCObject val = (JCObject)retObjectKeyboardSpeedKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectKeyboardSpeedKey != null ? retObjectKeyboardSpeedKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getListBoxSmoothScrollingKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectListBoxSmoothScrollingKey = null;
        try {
            retObjectListBoxSmoothScrollingKey = classType.Get("ListBoxSmoothScrollingKey");
            JCObject val = (JCObject)retObjectListBoxSmoothScrollingKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectListBoxSmoothScrollingKey != null ? retObjectListBoxSmoothScrollingKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMaximizedPrimaryScreenHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMaximizedPrimaryScreenHeightKey = null;
        try {
            retObjectMaximizedPrimaryScreenHeightKey = classType.Get("MaximizedPrimaryScreenHeightKey");
            JCObject val = (JCObject)retObjectMaximizedPrimaryScreenHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMaximizedPrimaryScreenHeightKey != null ? retObjectMaximizedPrimaryScreenHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMaximizedPrimaryScreenWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMaximizedPrimaryScreenWidthKey = null;
        try {
            retObjectMaximizedPrimaryScreenWidthKey = classType.Get("MaximizedPrimaryScreenWidthKey");
            JCObject val = (JCObject)retObjectMaximizedPrimaryScreenWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMaximizedPrimaryScreenWidthKey != null ? retObjectMaximizedPrimaryScreenWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMaximumWindowTrackHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMaximumWindowTrackHeightKey = null;
        try {
            retObjectMaximumWindowTrackHeightKey = classType.Get("MaximumWindowTrackHeightKey");
            JCObject val = (JCObject)retObjectMaximumWindowTrackHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMaximumWindowTrackHeightKey != null ? retObjectMaximumWindowTrackHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMaximumWindowTrackWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMaximumWindowTrackWidthKey = null;
        try {
            retObjectMaximumWindowTrackWidthKey = classType.Get("MaximumWindowTrackWidthKey");
            JCObject val = (JCObject)retObjectMaximumWindowTrackWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMaximumWindowTrackWidthKey != null ? retObjectMaximumWindowTrackWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuAnimationKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuAnimationKey = null;
        try {
            retObjectMenuAnimationKey = classType.Get("MenuAnimationKey");
            JCObject val = (JCObject)retObjectMenuAnimationKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuAnimationKey != null ? retObjectMenuAnimationKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuBarHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuBarHeightKey = null;
        try {
            retObjectMenuBarHeightKey = classType.Get("MenuBarHeightKey");
            JCObject val = (JCObject)retObjectMenuBarHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuBarHeightKey != null ? retObjectMenuBarHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuButtonHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuButtonHeightKey = null;
        try {
            retObjectMenuButtonHeightKey = classType.Get("MenuButtonHeightKey");
            JCObject val = (JCObject)retObjectMenuButtonHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuButtonHeightKey != null ? retObjectMenuButtonHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuButtonWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuButtonWidthKey = null;
        try {
            retObjectMenuButtonWidthKey = classType.Get("MenuButtonWidthKey");
            JCObject val = (JCObject)retObjectMenuButtonWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuButtonWidthKey != null ? retObjectMenuButtonWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuCheckmarkHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuCheckmarkHeightKey = null;
        try {
            retObjectMenuCheckmarkHeightKey = classType.Get("MenuCheckmarkHeightKey");
            JCObject val = (JCObject)retObjectMenuCheckmarkHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuCheckmarkHeightKey != null ? retObjectMenuCheckmarkHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuCheckmarkWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuCheckmarkWidthKey = null;
        try {
            retObjectMenuCheckmarkWidthKey = classType.Get("MenuCheckmarkWidthKey");
            JCObject val = (JCObject)retObjectMenuCheckmarkWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuCheckmarkWidthKey != null ? retObjectMenuCheckmarkWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuDropAlignmentKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuDropAlignmentKey = null;
        try {
            retObjectMenuDropAlignmentKey = classType.Get("MenuDropAlignmentKey");
            JCObject val = (JCObject)retObjectMenuDropAlignmentKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuDropAlignmentKey != null ? retObjectMenuDropAlignmentKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuFadeKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuFadeKey = null;
        try {
            retObjectMenuFadeKey = classType.Get("MenuFadeKey");
            JCObject val = (JCObject)retObjectMenuFadeKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuFadeKey != null ? retObjectMenuFadeKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuHeightKey = null;
        try {
            retObjectMenuHeightKey = classType.Get("MenuHeightKey");
            JCObject val = (JCObject)retObjectMenuHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuHeightKey != null ? retObjectMenuHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuPopupAnimationKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuPopupAnimationKey = null;
        try {
            retObjectMenuPopupAnimationKey = classType.Get("MenuPopupAnimationKey");
            JCObject val = (JCObject)retObjectMenuPopupAnimationKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuPopupAnimationKey != null ? retObjectMenuPopupAnimationKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuShowDelayKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuShowDelayKey = null;
        try {
            retObjectMenuShowDelayKey = classType.Get("MenuShowDelayKey");
            JCObject val = (JCObject)retObjectMenuShowDelayKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuShowDelayKey != null ? retObjectMenuShowDelayKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMenuWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMenuWidthKey = null;
        try {
            retObjectMenuWidthKey = classType.Get("MenuWidthKey");
            JCObject val = (JCObject)retObjectMenuWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMenuWidthKey != null ? retObjectMenuWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMinimizeAnimationKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizeAnimationKey = null;
        try {
            retObjectMinimizeAnimationKey = classType.Get("MinimizeAnimationKey");
            JCObject val = (JCObject)retObjectMinimizeAnimationKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimizeAnimationKey != null ? retObjectMinimizeAnimationKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMinimizedGridHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizedGridHeightKey = null;
        try {
            retObjectMinimizedGridHeightKey = classType.Get("MinimizedGridHeightKey");
            JCObject val = (JCObject)retObjectMinimizedGridHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimizedGridHeightKey != null ? retObjectMinimizedGridHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMinimizedGridWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizedGridWidthKey = null;
        try {
            retObjectMinimizedGridWidthKey = classType.Get("MinimizedGridWidthKey");
            JCObject val = (JCObject)retObjectMinimizedGridWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimizedGridWidthKey != null ? retObjectMinimizedGridWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMinimizedWindowHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizedWindowHeightKey = null;
        try {
            retObjectMinimizedWindowHeightKey = classType.Get("MinimizedWindowHeightKey");
            JCObject val = (JCObject)retObjectMinimizedWindowHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimizedWindowHeightKey != null ? retObjectMinimizedWindowHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMinimizedWindowWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimizedWindowWidthKey = null;
        try {
            retObjectMinimizedWindowWidthKey = classType.Get("MinimizedWindowWidthKey");
            JCObject val = (JCObject)retObjectMinimizedWindowWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimizedWindowWidthKey != null ? retObjectMinimizedWindowWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMinimumWindowHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumWindowHeightKey = null;
        try {
            retObjectMinimumWindowHeightKey = classType.Get("MinimumWindowHeightKey");
            JCObject val = (JCObject)retObjectMinimumWindowHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimumWindowHeightKey != null ? retObjectMinimumWindowHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMinimumWindowTrackHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumWindowTrackHeightKey = null;
        try {
            retObjectMinimumWindowTrackHeightKey = classType.Get("MinimumWindowTrackHeightKey");
            JCObject val = (JCObject)retObjectMinimumWindowTrackHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimumWindowTrackHeightKey != null ? retObjectMinimumWindowTrackHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMinimumWindowTrackWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumWindowTrackWidthKey = null;
        try {
            retObjectMinimumWindowTrackWidthKey = classType.Get("MinimumWindowTrackWidthKey");
            JCObject val = (JCObject)retObjectMinimumWindowTrackWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimumWindowTrackWidthKey != null ? retObjectMinimumWindowTrackWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMinimumWindowWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMinimumWindowWidthKey = null;
        try {
            retObjectMinimumWindowWidthKey = classType.Get("MinimumWindowWidthKey");
            JCObject val = (JCObject)retObjectMinimumWindowWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMinimumWindowWidthKey != null ? retObjectMinimumWindowWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMouseHoverHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseHoverHeightKey = null;
        try {
            retObjectMouseHoverHeightKey = classType.Get("MouseHoverHeightKey");
            JCObject val = (JCObject)retObjectMouseHoverHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMouseHoverHeightKey != null ? retObjectMouseHoverHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMouseHoverTimeKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseHoverTimeKey = null;
        try {
            retObjectMouseHoverTimeKey = classType.Get("MouseHoverTimeKey");
            JCObject val = (JCObject)retObjectMouseHoverTimeKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMouseHoverTimeKey != null ? retObjectMouseHoverTimeKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getMouseHoverWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMouseHoverWidthKey = null;
        try {
            retObjectMouseHoverWidthKey = classType.Get("MouseHoverWidthKey");
            JCObject val = (JCObject)retObjectMouseHoverWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMouseHoverWidthKey != null ? retObjectMouseHoverWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getNavigationChromeDownLevelStyleKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectNavigationChromeDownLevelStyleKey = null;
        try {
            retObjectNavigationChromeDownLevelStyleKey = classType.Get("NavigationChromeDownLevelStyleKey");
            JCObject val = (JCObject)retObjectNavigationChromeDownLevelStyleKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectNavigationChromeDownLevelStyleKey != null ? retObjectNavigationChromeDownLevelStyleKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getNavigationChromeStyleKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectNavigationChromeStyleKey = null;
        try {
            retObjectNavigationChromeStyleKey = classType.Get("NavigationChromeStyleKey");
            JCObject val = (JCObject)retObjectNavigationChromeStyleKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectNavigationChromeStyleKey != null ? retObjectNavigationChromeStyleKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getPowerLineStatusKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPowerLineStatusKey = null;
        try {
            retObjectPowerLineStatusKey = classType.Get("PowerLineStatusKey");
            JCObject val = (JCObject)retObjectPowerLineStatusKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPowerLineStatusKey != null ? retObjectPowerLineStatusKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getPrimaryScreenHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPrimaryScreenHeightKey = null;
        try {
            retObjectPrimaryScreenHeightKey = classType.Get("PrimaryScreenHeightKey");
            JCObject val = (JCObject)retObjectPrimaryScreenHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPrimaryScreenHeightKey != null ? retObjectPrimaryScreenHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getPrimaryScreenWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectPrimaryScreenWidthKey = null;
        try {
            retObjectPrimaryScreenWidthKey = classType.Get("PrimaryScreenWidthKey");
            JCObject val = (JCObject)retObjectPrimaryScreenWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPrimaryScreenWidthKey != null ? retObjectPrimaryScreenWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getResizeFrameHorizontalBorderHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectResizeFrameHorizontalBorderHeightKey = null;
        try {
            retObjectResizeFrameHorizontalBorderHeightKey = classType.Get("ResizeFrameHorizontalBorderHeightKey");
            JCObject val = (JCObject)retObjectResizeFrameHorizontalBorderHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectResizeFrameHorizontalBorderHeightKey != null ? retObjectResizeFrameHorizontalBorderHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getResizeFrameVerticalBorderWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectResizeFrameVerticalBorderWidthKey = null;
        try {
            retObjectResizeFrameVerticalBorderWidthKey = classType.Get("ResizeFrameVerticalBorderWidthKey");
            JCObject val = (JCObject)retObjectResizeFrameVerticalBorderWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectResizeFrameVerticalBorderWidthKey != null ? retObjectResizeFrameVerticalBorderWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getScrollHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectScrollHeightKey = null;
        try {
            retObjectScrollHeightKey = classType.Get("ScrollHeightKey");
            JCObject val = (JCObject)retObjectScrollHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectScrollHeightKey != null ? retObjectScrollHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getScrollWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectScrollWidthKey = null;
        try {
            retObjectScrollWidthKey = classType.Get("ScrollWidthKey");
            JCObject val = (JCObject)retObjectScrollWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectScrollWidthKey != null ? retObjectScrollWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSelectionFadeKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSelectionFadeKey = null;
        try {
            retObjectSelectionFadeKey = classType.Get("SelectionFadeKey");
            JCObject val = (JCObject)retObjectSelectionFadeKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSelectionFadeKey != null ? retObjectSelectionFadeKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getShowSoundsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectShowSoundsKey = null;
        try {
            retObjectShowSoundsKey = classType.Get("ShowSoundsKey");
            JCObject val = (JCObject)retObjectShowSoundsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectShowSoundsKey != null ? retObjectShowSoundsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallCaptionHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionHeightKey = null;
        try {
            retObjectSmallCaptionHeightKey = classType.Get("SmallCaptionHeightKey");
            JCObject val = (JCObject)retObjectSmallCaptionHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionHeightKey != null ? retObjectSmallCaptionHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallCaptionWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallCaptionWidthKey = null;
        try {
            retObjectSmallCaptionWidthKey = classType.Get("SmallCaptionWidthKey");
            JCObject val = (JCObject)retObjectSmallCaptionWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallCaptionWidthKey != null ? retObjectSmallCaptionWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallIconHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallIconHeightKey = null;
        try {
            retObjectSmallIconHeightKey = classType.Get("SmallIconHeightKey");
            JCObject val = (JCObject)retObjectSmallIconHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallIconHeightKey != null ? retObjectSmallIconHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallIconWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallIconWidthKey = null;
        try {
            retObjectSmallIconWidthKey = classType.Get("SmallIconWidthKey");
            JCObject val = (JCObject)retObjectSmallIconWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallIconWidthKey != null ? retObjectSmallIconWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallWindowCaptionButtonHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallWindowCaptionButtonHeightKey = null;
        try {
            retObjectSmallWindowCaptionButtonHeightKey = classType.Get("SmallWindowCaptionButtonHeightKey");
            JCObject val = (JCObject)retObjectSmallWindowCaptionButtonHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallWindowCaptionButtonHeightKey != null ? retObjectSmallWindowCaptionButtonHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSmallWindowCaptionButtonWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSmallWindowCaptionButtonWidthKey = null;
        try {
            retObjectSmallWindowCaptionButtonWidthKey = classType.Get("SmallWindowCaptionButtonWidthKey");
            JCObject val = (JCObject)retObjectSmallWindowCaptionButtonWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSmallWindowCaptionButtonWidthKey != null ? retObjectSmallWindowCaptionButtonWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSnapToDefaultButtonKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSnapToDefaultButtonKey = null;
        try {
            retObjectSnapToDefaultButtonKey = classType.Get("SnapToDefaultButtonKey");
            JCObject val = (JCObject)retObjectSnapToDefaultButtonKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSnapToDefaultButtonKey != null ? retObjectSnapToDefaultButtonKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getStylusHotTrackingKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectStylusHotTrackingKey = null;
        try {
            retObjectStylusHotTrackingKey = classType.Get("StylusHotTrackingKey");
            JCObject val = (JCObject)retObjectStylusHotTrackingKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStylusHotTrackingKey != null ? retObjectStylusHotTrackingKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getSwapButtonsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSwapButtonsKey = null;
        try {
            retObjectSwapButtonsKey = classType.Get("SwapButtonsKey");
            JCObject val = (JCObject)retObjectSwapButtonsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSwapButtonsKey != null ? retObjectSwapButtonsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getThickHorizontalBorderHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectThickHorizontalBorderHeightKey = null;
        try {
            retObjectThickHorizontalBorderHeightKey = classType.Get("ThickHorizontalBorderHeightKey");
            JCObject val = (JCObject)retObjectThickHorizontalBorderHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectThickHorizontalBorderHeightKey != null ? retObjectThickHorizontalBorderHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getThickVerticalBorderWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectThickVerticalBorderWidthKey = null;
        try {
            retObjectThickVerticalBorderWidthKey = classType.Get("ThickVerticalBorderWidthKey");
            JCObject val = (JCObject)retObjectThickVerticalBorderWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectThickVerticalBorderWidthKey != null ? retObjectThickVerticalBorderWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getThinHorizontalBorderHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectThinHorizontalBorderHeightKey = null;
        try {
            retObjectThinHorizontalBorderHeightKey = classType.Get("ThinHorizontalBorderHeightKey");
            JCObject val = (JCObject)retObjectThinHorizontalBorderHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectThinHorizontalBorderHeightKey != null ? retObjectThinHorizontalBorderHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getThinVerticalBorderWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectThinVerticalBorderWidthKey = null;
        try {
            retObjectThinVerticalBorderWidthKey = classType.Get("ThinVerticalBorderWidthKey");
            JCObject val = (JCObject)retObjectThinVerticalBorderWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectThinVerticalBorderWidthKey != null ? retObjectThinVerticalBorderWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getToolTipAnimationKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToolTipAnimationKey = null;
        try {
            retObjectToolTipAnimationKey = classType.Get("ToolTipAnimationKey");
            JCObject val = (JCObject)retObjectToolTipAnimationKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToolTipAnimationKey != null ? retObjectToolTipAnimationKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getToolTipFadeKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToolTipFadeKey = null;
        try {
            retObjectToolTipFadeKey = classType.Get("ToolTipFadeKey");
            JCObject val = (JCObject)retObjectToolTipFadeKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToolTipFadeKey != null ? retObjectToolTipFadeKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getToolTipPopupAnimationKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectToolTipPopupAnimationKey = null;
        try {
            retObjectToolTipPopupAnimationKey = classType.Get("ToolTipPopupAnimationKey");
            JCObject val = (JCObject)retObjectToolTipPopupAnimationKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectToolTipPopupAnimationKey != null ? retObjectToolTipPopupAnimationKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getUIEffectsKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectUIEffectsKey = null;
        try {
            retObjectUIEffectsKey = classType.Get("UIEffectsKey");
            JCObject val = (JCObject)retObjectUIEffectsKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectUIEffectsKey != null ? retObjectUIEffectsKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getVerticalScrollBarButtonHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalScrollBarButtonHeightKey = null;
        try {
            retObjectVerticalScrollBarButtonHeightKey = classType.Get("VerticalScrollBarButtonHeightKey");
            JCObject val = (JCObject)retObjectVerticalScrollBarButtonHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectVerticalScrollBarButtonHeightKey != null ? retObjectVerticalScrollBarButtonHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getVerticalScrollBarThumbHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalScrollBarThumbHeightKey = null;
        try {
            retObjectVerticalScrollBarThumbHeightKey = classType.Get("VerticalScrollBarThumbHeightKey");
            JCObject val = (JCObject)retObjectVerticalScrollBarThumbHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectVerticalScrollBarThumbHeightKey != null ? retObjectVerticalScrollBarThumbHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getVerticalScrollBarWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVerticalScrollBarWidthKey = null;
        try {
            retObjectVerticalScrollBarWidthKey = classType.Get("VerticalScrollBarWidthKey");
            JCObject val = (JCObject)retObjectVerticalScrollBarWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectVerticalScrollBarWidthKey != null ? retObjectVerticalScrollBarWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getVirtualScreenHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVirtualScreenHeightKey = null;
        try {
            retObjectVirtualScreenHeightKey = classType.Get("VirtualScreenHeightKey");
            JCObject val = (JCObject)retObjectVirtualScreenHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectVirtualScreenHeightKey != null ? retObjectVirtualScreenHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getVirtualScreenLeftKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVirtualScreenLeftKey = null;
        try {
            retObjectVirtualScreenLeftKey = classType.Get("VirtualScreenLeftKey");
            JCObject val = (JCObject)retObjectVirtualScreenLeftKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectVirtualScreenLeftKey != null ? retObjectVirtualScreenLeftKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getVirtualScreenTopKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVirtualScreenTopKey = null;
        try {
            retObjectVirtualScreenTopKey = classType.Get("VirtualScreenTopKey");
            JCObject val = (JCObject)retObjectVirtualScreenTopKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectVirtualScreenTopKey != null ? retObjectVirtualScreenTopKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getVirtualScreenWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectVirtualScreenWidthKey = null;
        try {
            retObjectVirtualScreenWidthKey = classType.Get("VirtualScreenWidthKey");
            JCObject val = (JCObject)retObjectVirtualScreenWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectVirtualScreenWidthKey != null ? retObjectVirtualScreenWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWheelScrollLinesKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWheelScrollLinesKey = null;
        try {
            retObjectWheelScrollLinesKey = classType.Get("WheelScrollLinesKey");
            JCObject val = (JCObject)retObjectWheelScrollLinesKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWheelScrollLinesKey != null ? retObjectWheelScrollLinesKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWindowCaptionButtonHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowCaptionButtonHeightKey = null;
        try {
            retObjectWindowCaptionButtonHeightKey = classType.Get("WindowCaptionButtonHeightKey");
            JCObject val = (JCObject)retObjectWindowCaptionButtonHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowCaptionButtonHeightKey != null ? retObjectWindowCaptionButtonHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWindowCaptionButtonWidthKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowCaptionButtonWidthKey = null;
        try {
            retObjectWindowCaptionButtonWidthKey = classType.Get("WindowCaptionButtonWidthKey");
            JCObject val = (JCObject)retObjectWindowCaptionButtonWidthKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowCaptionButtonWidthKey != null ? retObjectWindowCaptionButtonWidthKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWindowCaptionHeightKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowCaptionHeightKey = null;
        try {
            retObjectWindowCaptionHeightKey = classType.Get("WindowCaptionHeightKey");
            JCObject val = (JCObject)retObjectWindowCaptionHeightKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowCaptionHeightKey != null ? retObjectWindowCaptionHeightKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static ResourceKey getWorkAreaKey() throws Throwable {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWorkAreaKey = null;
        try {
            retObjectWorkAreaKey = classType.Get("WorkAreaKey");
            JCObject val = (JCObject)retObjectWorkAreaKey;
            return new ResourceKey(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWorkAreaKey != null ? retObjectWorkAreaKey.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Thickness getWindowNonClientFrameThickness() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowNonClientFrameThickness = null;
        try {
            retObjectWindowNonClientFrameThickness = classType.Get("WindowNonClientFrameThickness");
            JCObject val = (JCObject)retObjectWindowNonClientFrameThickness;
            return new Thickness(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowNonClientFrameThickness != null ? retObjectWindowNonClientFrameThickness.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static Thickness getWindowResizeBorderThickness() throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.ArgumentException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.componentmodel.Win32Exception {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectWindowResizeBorderThickness = null;
        try {
            retObjectWindowResizeBorderThickness = classType.Get("WindowResizeBorderThickness");
            JCObject val = (JCObject)retObjectWindowResizeBorderThickness;
            return new Thickness(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectWindowResizeBorderThickness != null ? retObjectWindowResizeBorderThickness.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}