/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.net.networkinformation;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section


/**
 * The base .NET class managing System.Net.NetworkInformation.IPGlobalStatistics, System.Net.NetworkInformation, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Net.NetworkInformation.IPGlobalStatistics" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Net.NetworkInformation.IPGlobalStatistics</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class IPGlobalStatistics extends NetObject  {
    /**
     * Fully assembly qualified name: System.Net.NetworkInformation, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
     */
    public static final String assemblyFullName = "System.Net.NetworkInformation, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
    /**
     * Assembly name: System.Net.NetworkInformation
     */
    public static final String assemblyShortName = "System.Net.NetworkInformation";
    /**
     * Qualified class name: System.Net.NetworkInformation.IPGlobalStatistics
     */
    public static final String className = "System.Net.NetworkInformation.IPGlobalStatistics";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public IPGlobalStatistics(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link IPGlobalStatistics}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link IPGlobalStatistics} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static IPGlobalStatistics cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new IPGlobalStatistics(from.getJCOInstance());
    }

    // Constructors section
    
    public IPGlobalStatistics() throws Throwable {
    }

    
    // Methods section
    

    
    // Properties section
    
    public boolean getForwardingEnabled() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectForwardingEnabled = null;
        try {
            retObjectForwardingEnabled = classInstance.Get("ForwardingEnabled");
            return (boolean)retObjectForwardingEnabled;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectForwardingEnabled != null ? retObjectForwardingEnabled.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int getDefaultTtl() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDefaultTtl = null;
        try {
            retObjectDefaultTtl = classInstance.Get("DefaultTtl");
            return (int)retObjectDefaultTtl;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectDefaultTtl_ToString = retObjectDefaultTtl == null ? "null" : retObjectDefaultTtl.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectDefaultTtlNumber = (java.lang.Number)retObjectDefaultTtl;
                return retObjectDefaultTtlNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectDefaultTtl != null ? retObjectDefaultTtl.getClass() : "null", retObjectDefaultTtl_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int getNumberOfInterfaces() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectNumberOfInterfaces = null;
        try {
            retObjectNumberOfInterfaces = classInstance.Get("NumberOfInterfaces");
            return (int)retObjectNumberOfInterfaces;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectNumberOfInterfaces_ToString = retObjectNumberOfInterfaces == null ? "null" : retObjectNumberOfInterfaces.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectNumberOfInterfacesNumber = (java.lang.Number)retObjectNumberOfInterfaces;
                return retObjectNumberOfInterfacesNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectNumberOfInterfaces != null ? retObjectNumberOfInterfaces.getClass() : "null", retObjectNumberOfInterfaces_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int getNumberOfIPAddresses() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectNumberOfIPAddresses = null;
        try {
            retObjectNumberOfIPAddresses = classInstance.Get("NumberOfIPAddresses");
            return (int)retObjectNumberOfIPAddresses;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectNumberOfIPAddresses_ToString = retObjectNumberOfIPAddresses == null ? "null" : retObjectNumberOfIPAddresses.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectNumberOfIPAddressesNumber = (java.lang.Number)retObjectNumberOfIPAddresses;
                return retObjectNumberOfIPAddressesNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectNumberOfIPAddresses != null ? retObjectNumberOfIPAddresses.getClass() : "null", retObjectNumberOfIPAddresses_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int getNumberOfRoutes() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectNumberOfRoutes = null;
        try {
            retObjectNumberOfRoutes = classInstance.Get("NumberOfRoutes");
            return (int)retObjectNumberOfRoutes;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectNumberOfRoutes_ToString = retObjectNumberOfRoutes == null ? "null" : retObjectNumberOfRoutes.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectNumberOfRoutesNumber = (java.lang.Number)retObjectNumberOfRoutes;
                return retObjectNumberOfRoutesNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectNumberOfRoutes != null ? retObjectNumberOfRoutes.getClass() : "null", retObjectNumberOfRoutes_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getOutputPacketRequests() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectOutputPacketRequests = null;
        try {
            retObjectOutputPacketRequests = classInstance.Get("OutputPacketRequests");
            return (long)retObjectOutputPacketRequests;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectOutputPacketRequests_ToString = retObjectOutputPacketRequests == null ? "null" : retObjectOutputPacketRequests.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectOutputPacketRequestsNumber = (java.lang.Number)retObjectOutputPacketRequests;
                return retObjectOutputPacketRequestsNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectOutputPacketRequests != null ? retObjectOutputPacketRequests.getClass() : "null", retObjectOutputPacketRequests_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getOutputPacketRoutingDiscards() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectOutputPacketRoutingDiscards = null;
        try {
            retObjectOutputPacketRoutingDiscards = classInstance.Get("OutputPacketRoutingDiscards");
            return (long)retObjectOutputPacketRoutingDiscards;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectOutputPacketRoutingDiscards_ToString = retObjectOutputPacketRoutingDiscards == null ? "null" : retObjectOutputPacketRoutingDiscards.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectOutputPacketRoutingDiscardsNumber = (java.lang.Number)retObjectOutputPacketRoutingDiscards;
                return retObjectOutputPacketRoutingDiscardsNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectOutputPacketRoutingDiscards != null ? retObjectOutputPacketRoutingDiscards.getClass() : "null", retObjectOutputPacketRoutingDiscards_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getOutputPacketsDiscarded() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectOutputPacketsDiscarded = null;
        try {
            retObjectOutputPacketsDiscarded = classInstance.Get("OutputPacketsDiscarded");
            return (long)retObjectOutputPacketsDiscarded;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectOutputPacketsDiscarded_ToString = retObjectOutputPacketsDiscarded == null ? "null" : retObjectOutputPacketsDiscarded.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectOutputPacketsDiscardedNumber = (java.lang.Number)retObjectOutputPacketsDiscarded;
                return retObjectOutputPacketsDiscardedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectOutputPacketsDiscarded != null ? retObjectOutputPacketsDiscarded.getClass() : "null", retObjectOutputPacketsDiscarded_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getOutputPacketsWithNoRoute() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectOutputPacketsWithNoRoute = null;
        try {
            retObjectOutputPacketsWithNoRoute = classInstance.Get("OutputPacketsWithNoRoute");
            return (long)retObjectOutputPacketsWithNoRoute;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectOutputPacketsWithNoRoute_ToString = retObjectOutputPacketsWithNoRoute == null ? "null" : retObjectOutputPacketsWithNoRoute.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectOutputPacketsWithNoRouteNumber = (java.lang.Number)retObjectOutputPacketsWithNoRoute;
                return retObjectOutputPacketsWithNoRouteNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectOutputPacketsWithNoRoute != null ? retObjectOutputPacketsWithNoRoute.getClass() : "null", retObjectOutputPacketsWithNoRoute_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getPacketFragmentFailures() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectPacketFragmentFailures = null;
        try {
            retObjectPacketFragmentFailures = classInstance.Get("PacketFragmentFailures");
            return (long)retObjectPacketFragmentFailures;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectPacketFragmentFailures_ToString = retObjectPacketFragmentFailures == null ? "null" : retObjectPacketFragmentFailures.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectPacketFragmentFailuresNumber = (java.lang.Number)retObjectPacketFragmentFailures;
                return retObjectPacketFragmentFailuresNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectPacketFragmentFailures != null ? retObjectPacketFragmentFailures.getClass() : "null", retObjectPacketFragmentFailures_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getPacketReassembliesRequired() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectPacketReassembliesRequired = null;
        try {
            retObjectPacketReassembliesRequired = classInstance.Get("PacketReassembliesRequired");
            return (long)retObjectPacketReassembliesRequired;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectPacketReassembliesRequired_ToString = retObjectPacketReassembliesRequired == null ? "null" : retObjectPacketReassembliesRequired.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectPacketReassembliesRequiredNumber = (java.lang.Number)retObjectPacketReassembliesRequired;
                return retObjectPacketReassembliesRequiredNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectPacketReassembliesRequired != null ? retObjectPacketReassembliesRequired.getClass() : "null", retObjectPacketReassembliesRequired_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getPacketReassemblyFailures() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectPacketReassemblyFailures = null;
        try {
            retObjectPacketReassemblyFailures = classInstance.Get("PacketReassemblyFailures");
            return (long)retObjectPacketReassemblyFailures;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectPacketReassemblyFailures_ToString = retObjectPacketReassemblyFailures == null ? "null" : retObjectPacketReassemblyFailures.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectPacketReassemblyFailuresNumber = (java.lang.Number)retObjectPacketReassemblyFailures;
                return retObjectPacketReassemblyFailuresNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectPacketReassemblyFailures != null ? retObjectPacketReassemblyFailures.getClass() : "null", retObjectPacketReassemblyFailures_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getPacketReassemblyTimeout() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectPacketReassemblyTimeout = null;
        try {
            retObjectPacketReassemblyTimeout = classInstance.Get("PacketReassemblyTimeout");
            return (long)retObjectPacketReassemblyTimeout;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectPacketReassemblyTimeout_ToString = retObjectPacketReassemblyTimeout == null ? "null" : retObjectPacketReassemblyTimeout.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectPacketReassemblyTimeoutNumber = (java.lang.Number)retObjectPacketReassemblyTimeout;
                return retObjectPacketReassemblyTimeoutNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectPacketReassemblyTimeout != null ? retObjectPacketReassemblyTimeout.getClass() : "null", retObjectPacketReassemblyTimeout_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getPacketsFragmented() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectPacketsFragmented = null;
        try {
            retObjectPacketsFragmented = classInstance.Get("PacketsFragmented");
            return (long)retObjectPacketsFragmented;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectPacketsFragmented_ToString = retObjectPacketsFragmented == null ? "null" : retObjectPacketsFragmented.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectPacketsFragmentedNumber = (java.lang.Number)retObjectPacketsFragmented;
                return retObjectPacketsFragmentedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectPacketsFragmented != null ? retObjectPacketsFragmented.getClass() : "null", retObjectPacketsFragmented_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getPacketsReassembled() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectPacketsReassembled = null;
        try {
            retObjectPacketsReassembled = classInstance.Get("PacketsReassembled");
            return (long)retObjectPacketsReassembled;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectPacketsReassembled_ToString = retObjectPacketsReassembled == null ? "null" : retObjectPacketsReassembled.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectPacketsReassembledNumber = (java.lang.Number)retObjectPacketsReassembled;
                return retObjectPacketsReassembledNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectPacketsReassembled != null ? retObjectPacketsReassembled.getClass() : "null", retObjectPacketsReassembled_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getReceivedPackets() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReceivedPackets = null;
        try {
            retObjectReceivedPackets = classInstance.Get("ReceivedPackets");
            return (long)retObjectReceivedPackets;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectReceivedPackets_ToString = retObjectReceivedPackets == null ? "null" : retObjectReceivedPackets.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReceivedPacketsNumber = (java.lang.Number)retObjectReceivedPackets;
                return retObjectReceivedPacketsNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectReceivedPackets != null ? retObjectReceivedPackets.getClass() : "null", retObjectReceivedPackets_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getReceivedPacketsDelivered() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReceivedPacketsDelivered = null;
        try {
            retObjectReceivedPacketsDelivered = classInstance.Get("ReceivedPacketsDelivered");
            return (long)retObjectReceivedPacketsDelivered;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectReceivedPacketsDelivered_ToString = retObjectReceivedPacketsDelivered == null ? "null" : retObjectReceivedPacketsDelivered.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReceivedPacketsDeliveredNumber = (java.lang.Number)retObjectReceivedPacketsDelivered;
                return retObjectReceivedPacketsDeliveredNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectReceivedPacketsDelivered != null ? retObjectReceivedPacketsDelivered.getClass() : "null", retObjectReceivedPacketsDelivered_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getReceivedPacketsDiscarded() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReceivedPacketsDiscarded = null;
        try {
            retObjectReceivedPacketsDiscarded = classInstance.Get("ReceivedPacketsDiscarded");
            return (long)retObjectReceivedPacketsDiscarded;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectReceivedPacketsDiscarded_ToString = retObjectReceivedPacketsDiscarded == null ? "null" : retObjectReceivedPacketsDiscarded.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReceivedPacketsDiscardedNumber = (java.lang.Number)retObjectReceivedPacketsDiscarded;
                return retObjectReceivedPacketsDiscardedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectReceivedPacketsDiscarded != null ? retObjectReceivedPacketsDiscarded.getClass() : "null", retObjectReceivedPacketsDiscarded_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getReceivedPacketsForwarded() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReceivedPacketsForwarded = null;
        try {
            retObjectReceivedPacketsForwarded = classInstance.Get("ReceivedPacketsForwarded");
            return (long)retObjectReceivedPacketsForwarded;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectReceivedPacketsForwarded_ToString = retObjectReceivedPacketsForwarded == null ? "null" : retObjectReceivedPacketsForwarded.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReceivedPacketsForwardedNumber = (java.lang.Number)retObjectReceivedPacketsForwarded;
                return retObjectReceivedPacketsForwardedNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectReceivedPacketsForwarded != null ? retObjectReceivedPacketsForwarded.getClass() : "null", retObjectReceivedPacketsForwarded_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getReceivedPacketsWithAddressErrors() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReceivedPacketsWithAddressErrors = null;
        try {
            retObjectReceivedPacketsWithAddressErrors = classInstance.Get("ReceivedPacketsWithAddressErrors");
            return (long)retObjectReceivedPacketsWithAddressErrors;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectReceivedPacketsWithAddressErrors_ToString = retObjectReceivedPacketsWithAddressErrors == null ? "null" : retObjectReceivedPacketsWithAddressErrors.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReceivedPacketsWithAddressErrorsNumber = (java.lang.Number)retObjectReceivedPacketsWithAddressErrors;
                return retObjectReceivedPacketsWithAddressErrorsNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectReceivedPacketsWithAddressErrors != null ? retObjectReceivedPacketsWithAddressErrors.getClass() : "null", retObjectReceivedPacketsWithAddressErrors_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getReceivedPacketsWithHeadersErrors() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReceivedPacketsWithHeadersErrors = null;
        try {
            retObjectReceivedPacketsWithHeadersErrors = classInstance.Get("ReceivedPacketsWithHeadersErrors");
            return (long)retObjectReceivedPacketsWithHeadersErrors;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectReceivedPacketsWithHeadersErrors_ToString = retObjectReceivedPacketsWithHeadersErrors == null ? "null" : retObjectReceivedPacketsWithHeadersErrors.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReceivedPacketsWithHeadersErrorsNumber = (java.lang.Number)retObjectReceivedPacketsWithHeadersErrors;
                return retObjectReceivedPacketsWithHeadersErrorsNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectReceivedPacketsWithHeadersErrors != null ? retObjectReceivedPacketsWithHeadersErrors.getClass() : "null", retObjectReceivedPacketsWithHeadersErrors_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public long getReceivedPacketsWithUnknownProtocol() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectReceivedPacketsWithUnknownProtocol = null;
        try {
            retObjectReceivedPacketsWithUnknownProtocol = classInstance.Get("ReceivedPacketsWithUnknownProtocol");
            return (long)retObjectReceivedPacketsWithUnknownProtocol;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectReceivedPacketsWithUnknownProtocol_ToString = retObjectReceivedPacketsWithUnknownProtocol == null ? "null" : retObjectReceivedPacketsWithUnknownProtocol.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectReceivedPacketsWithUnknownProtocolNumber = (java.lang.Number)retObjectReceivedPacketsWithUnknownProtocol;
                return retObjectReceivedPacketsWithUnknownProtocolNumber.longValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into long and, as fallback solution, into java.lang.Number", retObjectReceivedPacketsWithUnknownProtocol != null ? retObjectReceivedPacketsWithUnknownProtocol.getClass() : "null", retObjectReceivedPacketsWithUnknownProtocol_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}