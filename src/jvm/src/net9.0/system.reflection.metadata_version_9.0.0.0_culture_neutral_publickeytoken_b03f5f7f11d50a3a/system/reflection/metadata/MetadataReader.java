/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.reflection.metadata;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.reflection.metadata.BlobHandle;
import system.Guid;
import system.reflection.metadata.GuidHandle;
import system.reflection.AssemblyName;
import system.reflection.metadata.AssemblyDefinition;
import system.reflection.metadata.AssemblyFile;
import system.reflection.metadata.AssemblyFileHandle;
import system.reflection.metadata.AssemblyReference;
import system.reflection.metadata.AssemblyReferenceHandle;
import system.reflection.metadata.BlobReader;
import system.reflection.metadata.StringHandle;
import system.reflection.metadata.Constant;
import system.reflection.metadata.ConstantHandle;
import system.reflection.metadata.CustomAttribute;
import system.reflection.metadata.CustomAttributeHandle;
import system.reflection.metadata.CustomAttributeHandleCollection;
import system.reflection.metadata.EntityHandle;
import system.reflection.metadata.CustomDebugInformation;
import system.reflection.metadata.CustomDebugInformationHandle;
import system.reflection.metadata.CustomDebugInformationHandleCollection;
import system.reflection.metadata.DeclarativeSecurityAttribute;
import system.reflection.metadata.DeclarativeSecurityAttributeHandle;
import system.reflection.metadata.Document;
import system.reflection.metadata.DocumentHandle;
import system.reflection.metadata.EventDefinition;
import system.reflection.metadata.EventDefinitionHandle;
import system.reflection.metadata.ExportedType;
import system.reflection.metadata.ExportedTypeHandle;
import system.reflection.metadata.FieldDefinition;
import system.reflection.metadata.FieldDefinitionHandle;
import system.reflection.metadata.GenericParameter;
import system.reflection.metadata.GenericParameterHandle;
import system.reflection.metadata.GenericParameterConstraint;
import system.reflection.metadata.GenericParameterConstraintHandle;
import system.reflection.metadata.ImportScope;
import system.reflection.metadata.ImportScopeHandle;
import system.reflection.metadata.InterfaceImplementation;
import system.reflection.metadata.InterfaceImplementationHandle;
import system.reflection.metadata.LocalConstant;
import system.reflection.metadata.LocalConstantHandle;
import system.reflection.metadata.LocalScope;
import system.reflection.metadata.LocalScopeHandle;
import system.reflection.metadata.LocalScopeHandleCollection;
import system.reflection.metadata.MethodDebugInformationHandle;
import system.reflection.metadata.MethodDefinitionHandle;
import system.reflection.metadata.LocalVariable;
import system.reflection.metadata.LocalVariableHandle;
import system.reflection.metadata.ManifestResource;
import system.reflection.metadata.ManifestResourceHandle;
import system.reflection.metadata.MemberReference;
import system.reflection.metadata.MemberReferenceHandle;
import system.reflection.metadata.MethodDebugInformation;
import system.reflection.metadata.MethodDefinition;
import system.reflection.metadata.MethodImplementation;
import system.reflection.metadata.MethodImplementationHandle;
import system.reflection.metadata.MethodSpecification;
import system.reflection.metadata.MethodSpecificationHandle;
import system.reflection.metadata.ModuleDefinition;
import system.reflection.metadata.ModuleReference;
import system.reflection.metadata.ModuleReferenceHandle;
import system.reflection.metadata.NamespaceDefinition;
import system.reflection.metadata.NamespaceDefinitionHandle;
import system.reflection.metadata.Parameter;
import system.reflection.metadata.ParameterHandle;
import system.reflection.metadata.PropertyDefinition;
import system.reflection.metadata.PropertyDefinitionHandle;
import system.reflection.metadata.StandaloneSignature;
import system.reflection.metadata.StandaloneSignatureHandle;
import system.reflection.metadata.TypeDefinition;
import system.reflection.metadata.TypeDefinitionHandle;
import system.reflection.metadata.TypeReference;
import system.reflection.metadata.TypeReferenceHandle;
import system.reflection.metadata.TypeSpecification;
import system.reflection.metadata.TypeSpecificationHandle;
import system.reflection.metadata.DocumentNameBlobHandle;
import system.reflection.metadata.UserStringHandle;
import system.reflection.metadata.AssemblyFileHandleCollection;
import system.reflection.metadata.AssemblyReferenceHandleCollection;
import system.reflection.metadata.DebugMetadataHeader;
import system.reflection.metadata.DeclarativeSecurityAttributeHandleCollection;
import system.reflection.metadata.DocumentHandleCollection;
import system.reflection.metadata.EventDefinitionHandleCollection;
import system.reflection.metadata.ExportedTypeHandleCollection;
import system.reflection.metadata.FieldDefinitionHandleCollection;
import system.reflection.metadata.ImportScopeCollection;
import system.reflection.metadata.LocalConstantHandleCollection;
import system.reflection.metadata.LocalVariableHandleCollection;
import system.reflection.metadata.ManifestResourceHandleCollection;
import system.reflection.metadata.MemberReferenceHandleCollection;
import system.reflection.metadata.MetadataKind;
import system.reflection.metadata.MetadataReaderOptions;
import system.reflection.metadata.MetadataStringComparer;
import system.reflection.metadata.MetadataStringDecoder;
import system.reflection.metadata.MethodDebugInformationHandleCollection;
import system.reflection.metadata.MethodDefinitionHandleCollection;
import system.reflection.metadata.PropertyDefinitionHandleCollection;
import system.reflection.metadata.TypeDefinitionHandleCollection;
import system.reflection.metadata.TypeReferenceHandleCollection;


/**
 * The base .NET class managing System.Reflection.Metadata.MetadataReader, System.Reflection.Metadata, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Reflection.Metadata.MetadataReader" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Reflection.Metadata.MetadataReader</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class MetadataReader extends NetObject  {
    /**
     * Fully assembly qualified name: System.Reflection.Metadata, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
     */
    public static final String assemblyFullName = "System.Reflection.Metadata, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
    /**
     * Assembly name: System.Reflection.Metadata
     */
    public static final String assemblyShortName = "System.Reflection.Metadata";
    /**
     * Qualified class name: System.Reflection.Metadata.MetadataReader
     */
    public static final String className = "System.Reflection.Metadata.MetadataReader";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public MetadataReader(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link MetadataReader}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link MetadataReader} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static MetadataReader cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new MetadataReader(from.getJCOInstance());
    }

    // Constructors section
    
    public MetadataReader() throws Throwable {
    }



    
    // Methods section
    
    public byte[] GetBlobBytes(BlobHandle handle) throws Throwable, system.PlatformNotSupportedException, system.ArgumentException, system.InvalidOperationException, system.BadImageFormatException, system.ArgumentOutOfRangeException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetBlobBytes = null;
        try {
            ArrayList<java.lang.Object> resultingArrayList = new ArrayList<java.lang.Object>();
            retObjectGetBlobBytes = classInstance.Invoke("GetBlobBytes", handle == null ? null : handle.getJCOInstance());
            JCObject resultingObjects = (JCObject)retObjectGetBlobBytes;
            for (java.lang.Object resultingObject : resultingObjects) {
			    resultingArrayList.add(resultingObject);
            }
            byte[] resultingArray = new byte[resultingArrayList.size()];
            for(int indexGetBlobBytes = 0; indexGetBlobBytes < resultingArrayList.size(); indexGetBlobBytes++ ) {
				resultingArray[indexGetBlobBytes] = (byte)resultingArrayList.get(indexGetBlobBytes);
            }
            return resultingArray;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into byte", retObjectGetBlobBytes != null ? retObjectGetBlobBytes.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Guid GetGuid(GuidHandle handle) throws Throwable, system.ArgumentException, system.InvalidOperationException, system.BadImageFormatException, system.PlatformNotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetGuid = null;
        try {
            retObjectGetGuid = classInstance.Invoke("GetGuid", handle == null ? null : handle.getJCOInstance());
            JCObject objGetGuid = (JCObject)retObjectGetGuid;
            return new Guid(objGetGuid);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetGuid != null ? retObjectGetGuid.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static AssemblyName GetAssemblyName(java.lang.String assemblyFile) throws Throwable, system.ArgumentException, system.ArgumentOutOfRangeException, system.ArgumentNullException, system.InvalidOperationException, system.PlatformNotSupportedException, system.ArrayTypeMismatchException, system.NotSupportedException, system.ObjectDisposedException, system.RankException, system.IndexOutOfRangeException, system.OutOfMemoryException, system.runtime.serialization.SerializationException, system.io.IOException, system.BadImageFormatException, system.MissingMethodException, system.reflection.TargetInvocationException, system.FormatException, system.globalization.CultureNotFoundException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectGetAssemblyName = null;
        try {
            retObjectGetAssemblyName = classType.Invoke("GetAssemblyName", assemblyFile);
            JCObject objGetAssemblyName = (JCObject)retObjectGetAssemblyName;
            return new AssemblyName(objGetAssemblyName);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetAssemblyName != null ? retObjectGetAssemblyName.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public AssemblyDefinition GetAssemblyDefinition() throws Throwable, system.ArgumentNullException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentOutOfRangeException, system.NotSupportedException, system.globalization.CultureNotFoundException, system.ObjectDisposedException, system.InvalidOperationException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetAssemblyDefinition = null;
        try {
            retObjectGetAssemblyDefinition = classInstance.Invoke("GetAssemblyDefinition");
            JCObject objGetAssemblyDefinition = (JCObject)retObjectGetAssemblyDefinition;
            return new AssemblyDefinition(objGetAssemblyDefinition);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetAssemblyDefinition != null ? retObjectGetAssemblyDefinition.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public AssemblyFile GetAssemblyFile(AssemblyFileHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetAssemblyFile = null;
        try {
            retObjectGetAssemblyFile = classInstance.Invoke("GetAssemblyFile", handle == null ? null : handle.getJCOInstance());
            JCObject objGetAssemblyFile = (JCObject)retObjectGetAssemblyFile;
            return new AssemblyFile(objGetAssemblyFile);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetAssemblyFile != null ? retObjectGetAssemblyFile.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public AssemblyReference GetAssemblyReference(AssemblyReferenceHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetAssemblyReference = null;
        try {
            retObjectGetAssemblyReference = classInstance.Invoke("GetAssemblyReference", handle == null ? null : handle.getJCOInstance());
            JCObject objGetAssemblyReference = (JCObject)retObjectGetAssemblyReference;
            return new AssemblyReference(objGetAssemblyReference);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetAssemblyReference != null ? retObjectGetAssemblyReference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public BlobReader GetBlobReader(BlobHandle handle) throws Throwable, system.ArgumentOutOfRangeException, system.ArgumentException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.ObjectDisposedException, system.ArgumentNullException, system.InvalidOperationException, system.BadImageFormatException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetBlobReader = null;
        try {
            retObjectGetBlobReader = classInstance.Invoke("GetBlobReader", handle == null ? null : handle.getJCOInstance());
            JCObject objGetBlobReader = (JCObject)retObjectGetBlobReader;
            return new BlobReader(objGetBlobReader);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetBlobReader != null ? retObjectGetBlobReader.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public BlobReader GetBlobReader(StringHandle handle) throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException, system.ArgumentException, system.ArgumentOutOfRangeException, system.InvalidOperationException, system.NotSupportedException, system.NullReferenceException, system.ObjectDisposedException, system.ArgumentNullException, system.ArrayTypeMismatchException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetBlobReader = null;
        try {
            retObjectGetBlobReader = classInstance.Invoke("GetBlobReader", handle == null ? null : handle.getJCOInstance());
            JCObject objGetBlobReader = (JCObject)retObjectGetBlobReader;
            return new BlobReader(objGetBlobReader);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetBlobReader != null ? retObjectGetBlobReader.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Constant GetConstant(ConstantHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetConstant = null;
        try {
            retObjectGetConstant = classInstance.Invoke("GetConstant", handle == null ? null : handle.getJCOInstance());
            JCObject objGetConstant = (JCObject)retObjectGetConstant;
            return new Constant(objGetConstant);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetConstant != null ? retObjectGetConstant.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public CustomAttribute GetCustomAttribute(CustomAttributeHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetCustomAttribute = null;
        try {
            retObjectGetCustomAttribute = classInstance.Invoke("GetCustomAttribute", handle == null ? null : handle.getJCOInstance());
            JCObject objGetCustomAttribute = (JCObject)retObjectGetCustomAttribute;
            return new CustomAttribute(objGetCustomAttribute);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetCustomAttribute != null ? retObjectGetCustomAttribute.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public CustomAttributeHandleCollection GetCustomAttributes(EntityHandle handle) throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetCustomAttributes = null;
        try {
            retObjectGetCustomAttributes = classInstance.Invoke("GetCustomAttributes", handle == null ? null : handle.getJCOInstance());
            JCObject objGetCustomAttributes = (JCObject)retObjectGetCustomAttributes;
            return new CustomAttributeHandleCollection(objGetCustomAttributes);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetCustomAttributes != null ? retObjectGetCustomAttributes.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public CustomDebugInformation GetCustomDebugInformation(CustomDebugInformationHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetCustomDebugInformation = null;
        try {
            retObjectGetCustomDebugInformation = classInstance.Invoke("GetCustomDebugInformation", handle == null ? null : handle.getJCOInstance());
            JCObject objGetCustomDebugInformation = (JCObject)retObjectGetCustomDebugInformation;
            return new CustomDebugInformation(objGetCustomDebugInformation);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetCustomDebugInformation != null ? retObjectGetCustomDebugInformation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public CustomDebugInformationHandleCollection GetCustomDebugInformation(EntityHandle handle) throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetCustomDebugInformation = null;
        try {
            retObjectGetCustomDebugInformation = classInstance.Invoke("GetCustomDebugInformation", handle == null ? null : handle.getJCOInstance());
            JCObject objGetCustomDebugInformation = (JCObject)retObjectGetCustomDebugInformation;
            return new CustomDebugInformationHandleCollection(objGetCustomDebugInformation);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetCustomDebugInformation != null ? retObjectGetCustomDebugInformation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DeclarativeSecurityAttribute GetDeclarativeSecurityAttribute(DeclarativeSecurityAttributeHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetDeclarativeSecurityAttribute = null;
        try {
            retObjectGetDeclarativeSecurityAttribute = classInstance.Invoke("GetDeclarativeSecurityAttribute", handle == null ? null : handle.getJCOInstance());
            JCObject objGetDeclarativeSecurityAttribute = (JCObject)retObjectGetDeclarativeSecurityAttribute;
            return new DeclarativeSecurityAttribute(objGetDeclarativeSecurityAttribute);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetDeclarativeSecurityAttribute != null ? retObjectGetDeclarativeSecurityAttribute.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Document GetDocument(DocumentHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetDocument = null;
        try {
            retObjectGetDocument = classInstance.Invoke("GetDocument", handle == null ? null : handle.getJCOInstance());
            JCObject objGetDocument = (JCObject)retObjectGetDocument;
            return new Document(objGetDocument);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetDocument != null ? retObjectGetDocument.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public EventDefinition GetEventDefinition(EventDefinitionHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetEventDefinition = null;
        try {
            retObjectGetEventDefinition = classInstance.Invoke("GetEventDefinition", handle == null ? null : handle.getJCOInstance());
            JCObject objGetEventDefinition = (JCObject)retObjectGetEventDefinition;
            return new EventDefinition(objGetEventDefinition);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetEventDefinition != null ? retObjectGetEventDefinition.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public ExportedType GetExportedType(ExportedTypeHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetExportedType = null;
        try {
            retObjectGetExportedType = classInstance.Invoke("GetExportedType", handle == null ? null : handle.getJCOInstance());
            JCObject objGetExportedType = (JCObject)retObjectGetExportedType;
            return new ExportedType(objGetExportedType);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetExportedType != null ? retObjectGetExportedType.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public FieldDefinition GetFieldDefinition(FieldDefinitionHandle handle) throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException, system.IndexOutOfRangeException, system.InvalidCastException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetFieldDefinition = null;
        try {
            retObjectGetFieldDefinition = classInstance.Invoke("GetFieldDefinition", handle == null ? null : handle.getJCOInstance());
            JCObject objGetFieldDefinition = (JCObject)retObjectGetFieldDefinition;
            return new FieldDefinition(objGetFieldDefinition);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetFieldDefinition != null ? retObjectGetFieldDefinition.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public GenericParameter GetGenericParameter(GenericParameterHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetGenericParameter = null;
        try {
            retObjectGetGenericParameter = classInstance.Invoke("GetGenericParameter", handle == null ? null : handle.getJCOInstance());
            JCObject objGetGenericParameter = (JCObject)retObjectGetGenericParameter;
            return new GenericParameter(objGetGenericParameter);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetGenericParameter != null ? retObjectGetGenericParameter.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public GenericParameterConstraint GetGenericParameterConstraint(GenericParameterConstraintHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetGenericParameterConstraint = null;
        try {
            retObjectGetGenericParameterConstraint = classInstance.Invoke("GetGenericParameterConstraint", handle == null ? null : handle.getJCOInstance());
            JCObject objGetGenericParameterConstraint = (JCObject)retObjectGetGenericParameterConstraint;
            return new GenericParameterConstraint(objGetGenericParameterConstraint);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetGenericParameterConstraint != null ? retObjectGetGenericParameterConstraint.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public ImportScope GetImportScope(ImportScopeHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetImportScope = null;
        try {
            retObjectGetImportScope = classInstance.Invoke("GetImportScope", handle == null ? null : handle.getJCOInstance());
            JCObject objGetImportScope = (JCObject)retObjectGetImportScope;
            return new ImportScope(objGetImportScope);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetImportScope != null ? retObjectGetImportScope.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public InterfaceImplementation GetInterfaceImplementation(InterfaceImplementationHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetInterfaceImplementation = null;
        try {
            retObjectGetInterfaceImplementation = classInstance.Invoke("GetInterfaceImplementation", handle == null ? null : handle.getJCOInstance());
            JCObject objGetInterfaceImplementation = (JCObject)retObjectGetInterfaceImplementation;
            return new InterfaceImplementation(objGetInterfaceImplementation);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetInterfaceImplementation != null ? retObjectGetInterfaceImplementation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public LocalConstant GetLocalConstant(LocalConstantHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetLocalConstant = null;
        try {
            retObjectGetLocalConstant = classInstance.Invoke("GetLocalConstant", handle == null ? null : handle.getJCOInstance());
            JCObject objGetLocalConstant = (JCObject)retObjectGetLocalConstant;
            return new LocalConstant(objGetLocalConstant);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetLocalConstant != null ? retObjectGetLocalConstant.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public LocalScope GetLocalScope(LocalScopeHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetLocalScope = null;
        try {
            retObjectGetLocalScope = classInstance.Invoke("GetLocalScope", handle == null ? null : handle.getJCOInstance());
            JCObject objGetLocalScope = (JCObject)retObjectGetLocalScope;
            return new LocalScope(objGetLocalScope);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetLocalScope != null ? retObjectGetLocalScope.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public LocalScopeHandleCollection GetLocalScopes(MethodDebugInformationHandle handle) throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetLocalScopes = null;
        try {
            retObjectGetLocalScopes = classInstance.Invoke("GetLocalScopes", handle == null ? null : handle.getJCOInstance());
            JCObject objGetLocalScopes = (JCObject)retObjectGetLocalScopes;
            return new LocalScopeHandleCollection(objGetLocalScopes);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetLocalScopes != null ? retObjectGetLocalScopes.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public LocalScopeHandleCollection GetLocalScopes(MethodDefinitionHandle handle) throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetLocalScopes = null;
        try {
            retObjectGetLocalScopes = classInstance.Invoke("GetLocalScopes", handle == null ? null : handle.getJCOInstance());
            JCObject objGetLocalScopes = (JCObject)retObjectGetLocalScopes;
            return new LocalScopeHandleCollection(objGetLocalScopes);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetLocalScopes != null ? retObjectGetLocalScopes.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public LocalVariable GetLocalVariable(LocalVariableHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetLocalVariable = null;
        try {
            retObjectGetLocalVariable = classInstance.Invoke("GetLocalVariable", handle == null ? null : handle.getJCOInstance());
            JCObject objGetLocalVariable = (JCObject)retObjectGetLocalVariable;
            return new LocalVariable(objGetLocalVariable);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetLocalVariable != null ? retObjectGetLocalVariable.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public ManifestResource GetManifestResource(ManifestResourceHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetManifestResource = null;
        try {
            retObjectGetManifestResource = classInstance.Invoke("GetManifestResource", handle == null ? null : handle.getJCOInstance());
            JCObject objGetManifestResource = (JCObject)retObjectGetManifestResource;
            return new ManifestResource(objGetManifestResource);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetManifestResource != null ? retObjectGetManifestResource.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MemberReference GetMemberReference(MemberReferenceHandle handle) throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException, system.InvalidCastException, system.NullReferenceException, system.NotSupportedException, system.ObjectDisposedException, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.ArgumentException, system.IndexOutOfRangeException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetMemberReference = null;
        try {
            retObjectGetMemberReference = classInstance.Invoke("GetMemberReference", handle == null ? null : handle.getJCOInstance());
            JCObject objGetMemberReference = (JCObject)retObjectGetMemberReference;
            return new MemberReference(objGetMemberReference);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetMemberReference != null ? retObjectGetMemberReference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MethodDebugInformation GetMethodDebugInformation(MethodDebugInformationHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetMethodDebugInformation = null;
        try {
            retObjectGetMethodDebugInformation = classInstance.Invoke("GetMethodDebugInformation", handle == null ? null : handle.getJCOInstance());
            JCObject objGetMethodDebugInformation = (JCObject)retObjectGetMethodDebugInformation;
            return new MethodDebugInformation(objGetMethodDebugInformation);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetMethodDebugInformation != null ? retObjectGetMethodDebugInformation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MethodDebugInformation GetMethodDebugInformation(MethodDefinitionHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetMethodDebugInformation = null;
        try {
            retObjectGetMethodDebugInformation = classInstance.Invoke("GetMethodDebugInformation", handle == null ? null : handle.getJCOInstance());
            JCObject objGetMethodDebugInformation = (JCObject)retObjectGetMethodDebugInformation;
            return new MethodDebugInformation(objGetMethodDebugInformation);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetMethodDebugInformation != null ? retObjectGetMethodDebugInformation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MethodDefinition GetMethodDefinition(MethodDefinitionHandle handle) throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException, system.IndexOutOfRangeException, system.InvalidCastException, system.NullReferenceException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.ArgumentNullException, system.InvalidOperationException, system.ArgumentOutOfRangeException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetMethodDefinition = null;
        try {
            retObjectGetMethodDefinition = classInstance.Invoke("GetMethodDefinition", handle == null ? null : handle.getJCOInstance());
            JCObject objGetMethodDefinition = (JCObject)retObjectGetMethodDefinition;
            return new MethodDefinition(objGetMethodDefinition);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetMethodDefinition != null ? retObjectGetMethodDefinition.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MethodImplementation GetMethodImplementation(MethodImplementationHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetMethodImplementation = null;
        try {
            retObjectGetMethodImplementation = classInstance.Invoke("GetMethodImplementation", handle == null ? null : handle.getJCOInstance());
            JCObject objGetMethodImplementation = (JCObject)retObjectGetMethodImplementation;
            return new MethodImplementation(objGetMethodImplementation);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetMethodImplementation != null ? retObjectGetMethodImplementation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MethodSpecification GetMethodSpecification(MethodSpecificationHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetMethodSpecification = null;
        try {
            retObjectGetMethodSpecification = classInstance.Invoke("GetMethodSpecification", handle == null ? null : handle.getJCOInstance());
            JCObject objGetMethodSpecification = (JCObject)retObjectGetMethodSpecification;
            return new MethodSpecification(objGetMethodSpecification);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetMethodSpecification != null ? retObjectGetMethodSpecification.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public ModuleDefinition GetModuleDefinition() throws Throwable, system.ArgumentNullException, system.ArgumentException, system.PlatformNotSupportedException, system.ArgumentOutOfRangeException, system.NotSupportedException, system.globalization.CultureNotFoundException, system.ObjectDisposedException, system.InvalidOperationException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetModuleDefinition = null;
        try {
            retObjectGetModuleDefinition = classInstance.Invoke("GetModuleDefinition");
            JCObject objGetModuleDefinition = (JCObject)retObjectGetModuleDefinition;
            return new ModuleDefinition(objGetModuleDefinition);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetModuleDefinition != null ? retObjectGetModuleDefinition.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public ModuleReference GetModuleReference(ModuleReferenceHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetModuleReference = null;
        try {
            retObjectGetModuleReference = classInstance.Invoke("GetModuleReference", handle == null ? null : handle.getJCOInstance());
            JCObject objGetModuleReference = (JCObject)retObjectGetModuleReference;
            return new ModuleReference(objGetModuleReference);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetModuleReference != null ? retObjectGetModuleReference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public NamespaceDefinition GetNamespaceDefinition(NamespaceDefinitionHandle handle) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.ArgumentNullException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.InvalidCastException, system.BadImageFormatException, system.collections.generic.KeyNotFoundException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetNamespaceDefinition = null;
        try {
            retObjectGetNamespaceDefinition = classInstance.Invoke("GetNamespaceDefinition", handle == null ? null : handle.getJCOInstance());
            JCObject objGetNamespaceDefinition = (JCObject)retObjectGetNamespaceDefinition;
            return new NamespaceDefinition(objGetNamespaceDefinition);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetNamespaceDefinition != null ? retObjectGetNamespaceDefinition.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public NamespaceDefinition GetNamespaceDefinitionRoot() throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentOutOfRangeException, system.IndexOutOfRangeException, system.PlatformNotSupportedException, system.ArgumentNullException, system.InvalidOperationException, system.RankException, system.ArrayTypeMismatchException, system.InvalidCastException, system.BadImageFormatException, system.collections.generic.KeyNotFoundException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetNamespaceDefinitionRoot = null;
        try {
            retObjectGetNamespaceDefinitionRoot = classInstance.Invoke("GetNamespaceDefinitionRoot");
            JCObject objGetNamespaceDefinitionRoot = (JCObject)retObjectGetNamespaceDefinitionRoot;
            return new NamespaceDefinition(objGetNamespaceDefinitionRoot);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetNamespaceDefinitionRoot != null ? retObjectGetNamespaceDefinitionRoot.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public Parameter GetParameter(ParameterHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetParameter = null;
        try {
            retObjectGetParameter = classInstance.Invoke("GetParameter", handle == null ? null : handle.getJCOInstance());
            JCObject objGetParameter = (JCObject)retObjectGetParameter;
            return new Parameter(objGetParameter);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetParameter != null ? retObjectGetParameter.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public PropertyDefinition GetPropertyDefinition(PropertyDefinitionHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetPropertyDefinition = null;
        try {
            retObjectGetPropertyDefinition = classInstance.Invoke("GetPropertyDefinition", handle == null ? null : handle.getJCOInstance());
            JCObject objGetPropertyDefinition = (JCObject)retObjectGetPropertyDefinition;
            return new PropertyDefinition(objGetPropertyDefinition);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetPropertyDefinition != null ? retObjectGetPropertyDefinition.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public StandaloneSignature GetStandaloneSignature(StandaloneSignatureHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetStandaloneSignature = null;
        try {
            retObjectGetStandaloneSignature = classInstance.Invoke("GetStandaloneSignature", handle == null ? null : handle.getJCOInstance());
            JCObject objGetStandaloneSignature = (JCObject)retObjectGetStandaloneSignature;
            return new StandaloneSignature(objGetStandaloneSignature);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetStandaloneSignature != null ? retObjectGetStandaloneSignature.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public TypeDefinition GetTypeDefinition(TypeDefinitionHandle handle) throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException, system.IndexOutOfRangeException, system.InvalidCastException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetTypeDefinition = null;
        try {
            retObjectGetTypeDefinition = classInstance.Invoke("GetTypeDefinition", handle == null ? null : handle.getJCOInstance());
            JCObject objGetTypeDefinition = (JCObject)retObjectGetTypeDefinition;
            return new TypeDefinition(objGetTypeDefinition);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetTypeDefinition != null ? retObjectGetTypeDefinition.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public TypeReference GetTypeReference(TypeReferenceHandle handle) throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException, system.IndexOutOfRangeException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetTypeReference = null;
        try {
            retObjectGetTypeReference = classInstance.Invoke("GetTypeReference", handle == null ? null : handle.getJCOInstance());
            JCObject objGetTypeReference = (JCObject)retObjectGetTypeReference;
            return new TypeReference(objGetTypeReference);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetTypeReference != null ? retObjectGetTypeReference.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public TypeSpecification GetTypeSpecification(TypeSpecificationHandle handle) throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetTypeSpecification = null;
        try {
            retObjectGetTypeSpecification = classInstance.Invoke("GetTypeSpecification", handle == null ? null : handle.getJCOInstance());
            JCObject objGetTypeSpecification = (JCObject)retObjectGetTypeSpecification;
            return new TypeSpecification(objGetTypeSpecification);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectGetTypeSpecification != null ? retObjectGetTypeSpecification.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetString(DocumentNameBlobHandle handle) throws Throwable, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException, system.NullReferenceException, system.NotSupportedException, system.ArgumentException, system.ObjectDisposedException, system.ArgumentNullException, system.InvalidOperationException, system.BadImageFormatException, system.OutOfMemoryException, system.ArrayTypeMismatchException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetString = null;
        try {
            retObjectGetString = classInstance.Invoke("GetString", handle == null ? null : handle.getJCOInstance());
            return (java.lang.String)retObjectGetString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetString != null ? retObjectGetString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetString(NamespaceDefinitionHandle handle) throws Throwable, system.ArgumentException, system.BadImageFormatException, system.PlatformNotSupportedException, system.ArgumentOutOfRangeException, system.InvalidOperationException, system.NotSupportedException, system.IndexOutOfRangeException, system.ArgumentNullException, system.RankException, system.ArrayTypeMismatchException, system.collections.generic.KeyNotFoundException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetString = null;
        try {
            retObjectGetString = classInstance.Invoke("GetString", handle == null ? null : handle.getJCOInstance());
            return (java.lang.String)retObjectGetString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetString != null ? retObjectGetString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetString(StringHandle handle) throws Throwable, system.ArgumentException, system.BadImageFormatException, system.PlatformNotSupportedException, system.ArgumentOutOfRangeException, system.InvalidOperationException, system.NotSupportedException, system.IndexOutOfRangeException, system.ArgumentNullException, system.RankException, system.ArrayTypeMismatchException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetString = null;
        try {
            retObjectGetString = classInstance.Invoke("GetString", handle == null ? null : handle.getJCOInstance());
            return (java.lang.String)retObjectGetString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetString != null ? retObjectGetString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String GetUserString(UserStringHandle handle) throws Throwable, system.ArgumentException, system.BadImageFormatException, system.ArgumentNullException, system.PlatformNotSupportedException, system.ArgumentOutOfRangeException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectGetUserString = null;
        try {
            retObjectGetUserString = classInstance.Invoke("GetUserString", handle == null ? null : handle.getJCOInstance());
            return (java.lang.String)retObjectGetUserString;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into java.lang.String", retObjectGetUserString != null ? retObjectGetUserString.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    
    public boolean getIsAssembly() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectIsAssembly = null;
        try {
            retObjectIsAssembly = classInstance.Get("IsAssembly");
            return (boolean)retObjectIsAssembly;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into boolean", retObjectIsAssembly != null ? retObjectIsAssembly.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public int getMetadataLength() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMetadataLength = null;
        try {
            retObjectMetadataLength = classInstance.Get("MetadataLength");
            return (int)retObjectMetadataLength;
        } catch (java.lang.ClassCastException cce) {
            java.lang.String retObjectMetadataLength_ToString = retObjectMetadataLength == null ? "null" : retObjectMetadataLength.toString();
            // https://github.com/masesgroup/JCOReflector/issues/246#issuecomment-3281199723
            try {
                java.lang.Number retObjectMetadataLengthNumber = (java.lang.Number)retObjectMetadataLength;
                return retObjectMetadataLengthNumber.intValue();
            } catch (java.lang.ClassCastException cceInner) {
                throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s (%s) into int and, as fallback solution, into java.lang.Number", retObjectMetadataLength != null ? retObjectMetadataLength.getClass() : "null", retObjectMetadataLength_ToString), cce);
            }
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public AssemblyFileHandleCollection getAssemblyFiles() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAssemblyFiles = null;
        try {
            retObjectAssemblyFiles = classInstance.Get("AssemblyFiles");
            JCObject val = (JCObject)retObjectAssemblyFiles;
            return new AssemblyFileHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectAssemblyFiles != null ? retObjectAssemblyFiles.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public AssemblyReferenceHandleCollection getAssemblyReferences() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAssemblyReferences = null;
        try {
            retObjectAssemblyReferences = classInstance.Get("AssemblyReferences");
            JCObject val = (JCObject)retObjectAssemblyReferences;
            return new AssemblyReferenceHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectAssemblyReferences != null ? retObjectAssemblyReferences.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public CustomAttributeHandleCollection getCustomAttributes() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectCustomAttributes = null;
        try {
            retObjectCustomAttributes = classInstance.Get("CustomAttributes");
            JCObject val = (JCObject)retObjectCustomAttributes;
            return new CustomAttributeHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCustomAttributes != null ? retObjectCustomAttributes.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public CustomDebugInformationHandleCollection getCustomDebugInformation() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectCustomDebugInformation = null;
        try {
            retObjectCustomDebugInformation = classInstance.Get("CustomDebugInformation");
            JCObject val = (JCObject)retObjectCustomDebugInformation;
            return new CustomDebugInformationHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectCustomDebugInformation != null ? retObjectCustomDebugInformation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DebugMetadataHeader getDebugMetadataHeader() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDebugMetadataHeader = null;
        try {
            retObjectDebugMetadataHeader = classInstance.Get("DebugMetadataHeader");
            JCObject val = (JCObject)retObjectDebugMetadataHeader;
            return new DebugMetadataHeader(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDebugMetadataHeader != null ? retObjectDebugMetadataHeader.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DeclarativeSecurityAttributeHandleCollection getDeclarativeSecurityAttributes() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDeclarativeSecurityAttributes = null;
        try {
            retObjectDeclarativeSecurityAttributes = classInstance.Get("DeclarativeSecurityAttributes");
            JCObject val = (JCObject)retObjectDeclarativeSecurityAttributes;
            return new DeclarativeSecurityAttributeHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDeclarativeSecurityAttributes != null ? retObjectDeclarativeSecurityAttributes.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public DocumentHandleCollection getDocuments() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectDocuments = null;
        try {
            retObjectDocuments = classInstance.Get("Documents");
            JCObject val = (JCObject)retObjectDocuments;
            return new DocumentHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectDocuments != null ? retObjectDocuments.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public EventDefinitionHandleCollection getEventDefinitions() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectEventDefinitions = null;
        try {
            retObjectEventDefinitions = classInstance.Get("EventDefinitions");
            JCObject val = (JCObject)retObjectEventDefinitions;
            return new EventDefinitionHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectEventDefinitions != null ? retObjectEventDefinitions.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public ExportedTypeHandleCollection getExportedTypes() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectExportedTypes = null;
        try {
            retObjectExportedTypes = classInstance.Get("ExportedTypes");
            JCObject val = (JCObject)retObjectExportedTypes;
            return new ExportedTypeHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectExportedTypes != null ? retObjectExportedTypes.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public FieldDefinitionHandleCollection getFieldDefinitions() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectFieldDefinitions = null;
        try {
            retObjectFieldDefinitions = classInstance.Get("FieldDefinitions");
            JCObject val = (JCObject)retObjectFieldDefinitions;
            return new FieldDefinitionHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectFieldDefinitions != null ? retObjectFieldDefinitions.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public ImportScopeCollection getImportScopes() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectImportScopes = null;
        try {
            retObjectImportScopes = classInstance.Get("ImportScopes");
            JCObject val = (JCObject)retObjectImportScopes;
            return new ImportScopeCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectImportScopes != null ? retObjectImportScopes.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public LocalConstantHandleCollection getLocalConstants() throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectLocalConstants = null;
        try {
            retObjectLocalConstants = classInstance.Get("LocalConstants");
            JCObject val = (JCObject)retObjectLocalConstants;
            return new LocalConstantHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectLocalConstants != null ? retObjectLocalConstants.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public LocalScopeHandleCollection getLocalScopes() throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectLocalScopes = null;
        try {
            retObjectLocalScopes = classInstance.Get("LocalScopes");
            JCObject val = (JCObject)retObjectLocalScopes;
            return new LocalScopeHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectLocalScopes != null ? retObjectLocalScopes.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public LocalVariableHandleCollection getLocalVariables() throws Throwable, system.BadImageFormatException, system.PlatformNotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectLocalVariables = null;
        try {
            retObjectLocalVariables = classInstance.Get("LocalVariables");
            JCObject val = (JCObject)retObjectLocalVariables;
            return new LocalVariableHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectLocalVariables != null ? retObjectLocalVariables.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public ManifestResourceHandleCollection getManifestResources() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectManifestResources = null;
        try {
            retObjectManifestResources = classInstance.Get("ManifestResources");
            JCObject val = (JCObject)retObjectManifestResources;
            return new ManifestResourceHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectManifestResources != null ? retObjectManifestResources.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MemberReferenceHandleCollection getMemberReferences() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMemberReferences = null;
        try {
            retObjectMemberReferences = classInstance.Get("MemberReferences");
            JCObject val = (JCObject)retObjectMemberReferences;
            return new MemberReferenceHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMemberReferences != null ? retObjectMemberReferences.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MetadataKind getMetadataKind() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMetadataKind = null;
        try {
            retObjectMetadataKind = classInstance.Get("MetadataKind");
            JCObject val = (JCObject)retObjectMetadataKind;
            return new MetadataKind(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMetadataKind != null ? retObjectMetadataKind.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MetadataReaderOptions getOptions() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectOptions = null;
        try {
            retObjectOptions = classInstance.Get("Options");
            JCObject val = (JCObject)retObjectOptions;
            return new MetadataReaderOptions(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectOptions != null ? retObjectOptions.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MetadataStringComparer getStringComparer() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectStringComparer = null;
        try {
            retObjectStringComparer = classInstance.Get("StringComparer");
            JCObject val = (JCObject)retObjectStringComparer;
            return new MetadataStringComparer(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectStringComparer != null ? retObjectStringComparer.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MetadataStringDecoder getUTF8Decoder() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectUTF8Decoder = null;
        try {
            retObjectUTF8Decoder = classInstance.Get("UTF8Decoder");
            JCObject val = (JCObject)retObjectUTF8Decoder;
            return new MetadataStringDecoder(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectUTF8Decoder != null ? retObjectUTF8Decoder.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MethodDebugInformationHandleCollection getMethodDebugInformation() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMethodDebugInformation = null;
        try {
            retObjectMethodDebugInformation = classInstance.Get("MethodDebugInformation");
            JCObject val = (JCObject)retObjectMethodDebugInformation;
            return new MethodDebugInformationHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMethodDebugInformation != null ? retObjectMethodDebugInformation.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public MethodDefinitionHandleCollection getMethodDefinitions() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMethodDefinitions = null;
        try {
            retObjectMethodDefinitions = classInstance.Get("MethodDefinitions");
            JCObject val = (JCObject)retObjectMethodDefinitions;
            return new MethodDefinitionHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMethodDefinitions != null ? retObjectMethodDefinitions.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public PropertyDefinitionHandleCollection getPropertyDefinitions() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectPropertyDefinitions = null;
        try {
            retObjectPropertyDefinitions = classInstance.Get("PropertyDefinitions");
            JCObject val = (JCObject)retObjectPropertyDefinitions;
            return new PropertyDefinitionHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectPropertyDefinitions != null ? retObjectPropertyDefinitions.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public TypeDefinitionHandleCollection getTypeDefinitions() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectTypeDefinitions = null;
        try {
            retObjectTypeDefinitions = classInstance.Get("TypeDefinitions");
            JCObject val = (JCObject)retObjectTypeDefinitions;
            return new TypeDefinitionHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectTypeDefinitions != null ? retObjectTypeDefinitions.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public TypeReferenceHandleCollection getTypeReferences() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectTypeReferences = null;
        try {
            retObjectTypeReferences = classInstance.Get("TypeReferences");
            JCObject val = (JCObject)retObjectTypeReferences;
            return new TypeReferenceHandleCollection(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectTypeReferences != null ? retObjectTypeReferences.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String getMetadataVersion() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectMetadataVersion = null;
        try {
            retObjectMetadataVersion = classInstance.Get("MetadataVersion");
            return (java.lang.String)retObjectMetadataVersion;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into java.lang.String", retObjectMetadataVersion != null ? retObjectMetadataVersion.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}