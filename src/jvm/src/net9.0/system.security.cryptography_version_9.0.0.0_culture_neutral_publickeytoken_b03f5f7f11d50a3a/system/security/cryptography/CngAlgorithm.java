/*
 *  MIT License
 *
 *  Copyright (c) 2020-2025 MASES s.r.l.
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

/**************************************************************************************
 * <auto-generated>
 *      This code was generated from a template using JCOReflector v. 1.16.0.0
 * 
 *      Manual changes to this file may cause unexpected behavior in your application.
 *      Manual changes to this file will be overwritten if the code is regenerated.
 * </auto-generated>
 *************************************************************************************/

package system.security.cryptography;

import org.mases.jcobridge.*;
import org.mases.jcobridge.netreflection.*;
import java.util.ArrayList;

// Import section
import system.security.cryptography.CngAlgorithm;


/**
 * The base .NET class managing System.Security.Cryptography.CngAlgorithm, System.Security.Cryptography, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.
 * <p>
 * 
 * .NET documentation at <a href="https://docs.microsoft.com/en-us/dotnet/api/System.Security.Cryptography.CngAlgorithm" target="_top">https://docs.microsoft.com/en-us/dotnet/api/System.Security.Cryptography.CngAlgorithm</a>
 * <p>
 *
 * Powered by JCOBridge: more info at <a href="https://www.jcobridge.com" target="_top">https://www.jcobridge.com</a>
 *
 * @author  MASES s.r.l https://masesgroup.com
 * @version 1.16.0.0
 */
public class CngAlgorithm extends NetObject  {
    /**
     * Fully assembly qualified name: System.Security.Cryptography, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
     */
    public static final String assemblyFullName = "System.Security.Cryptography, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
    /**
     * Assembly name: System.Security.Cryptography
     */
    public static final String assemblyShortName = "System.Security.Cryptography";
    /**
     * Qualified class name: System.Security.Cryptography.CngAlgorithm
     */
    public static final String className = "System.Security.Cryptography.CngAlgorithm";
    static JCOBridge bridge = JCOBridgeInstance.getInstance(assemblyFullName);
    /**
     * The type managed from JCOBridge. See {@link JCType}
     */
    public static JCType classType = createType();
    static JCEnum enumInstance = null;
    JCObject classInstance = null;

    static JCType createType() {
        try {
            String classToCreate = className + ", "
                    + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Creating %s", classToCreate);
            JCType typeCreated = bridge.GetType(classToCreate);
            if (JCOReflector.getDebug())
                JCOReflector.writeLog("Created: %s",
                        (typeCreated != null) ? typeCreated.toString() : "Returned null value");
            return typeCreated;
        } catch (JCException e) {
            JCOReflector.writeLog(e);
            return null;
        }
    }

    void addReference(String ref) throws Throwable {
        try {
            bridge.AddReference(ref);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }
    /**
     * Internal constructor. Use with caution 
     */
    public CngAlgorithm(java.lang.Object instance) throws Throwable {
        super(instance);
        if (instance instanceof JCObject) {
            classInstance = (JCObject) instance;
        } else
            throw new Exception("Cannot manage object, it is not a JCObject");
    }

    public String getJCOAssemblyName() {
        return assemblyFullName;
    }

    public String getJCOClassName() {
        return className;
    }

    public String getJCOObjectName() {
        return className + ", " + (JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
    }

    public java.lang.Object getJCOInstance() {
        return classInstance;
    }

    public void setJCOInstance(JCObject instance) {
        classInstance = instance;
        super.setJCOInstance(classInstance);
    }

    public JCType getJCOType() {
        return classType;
    }
    /**
     * Try to cast the {@link IJCOBridgeReflected} instance into {@link CngAlgorithm}, a cast assert is made to check if types are compatible.
     * @param from {@link IJCOBridgeReflected} instance to be casted
     * @return {@link CngAlgorithm} instance
     * @throws java.lang.Throwable in case of error during cast operation
     */
    public static CngAlgorithm cast(IJCOBridgeReflected from) throws Throwable {
        NetType.AssertCast(classType, from);
        return new CngAlgorithm(from.getJCOInstance());
    }

    // Constructors section
    
    public CngAlgorithm() throws Throwable {
    }

    public CngAlgorithm(java.lang.String algorithm) throws Throwable, system.NotSupportedException, system.ArgumentException, system.ArgumentNullException {
        try {
            // add reference to assemblyName.dll file
            addReference(JCOReflector.getUseFullAssemblyName() ? assemblyFullName : assemblyShortName);
            setJCOInstance((JCObject)classType.NewObject(algorithm));
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    
    // Methods section
    
    public boolean Equals(CngAlgorithm other) throws Throwable, system.ArgumentException, system.NotSupportedException, system.InvalidOperationException, system.ArgumentOutOfRangeException, system.PlatformNotSupportedException {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectEquals = null;
        try {
            retObjectEquals = classInstance.Invoke("Equals", other == null ? null : other.getJCOInstance());
            return (boolean)retObjectEquals;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to convert %s into boolean", retObjectEquals != null ? retObjectEquals.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }


    
    // Properties section
    
    public static CngAlgorithm getECDiffieHellman() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectECDiffieHellman = null;
        try {
            retObjectECDiffieHellman = classType.Get("ECDiffieHellman");
            JCObject val = (JCObject)retObjectECDiffieHellman;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectECDiffieHellman != null ? retObjectECDiffieHellman.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getECDiffieHellmanP256() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectECDiffieHellmanP256 = null;
        try {
            retObjectECDiffieHellmanP256 = classType.Get("ECDiffieHellmanP256");
            JCObject val = (JCObject)retObjectECDiffieHellmanP256;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectECDiffieHellmanP256 != null ? retObjectECDiffieHellmanP256.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getECDiffieHellmanP384() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectECDiffieHellmanP384 = null;
        try {
            retObjectECDiffieHellmanP384 = classType.Get("ECDiffieHellmanP384");
            JCObject val = (JCObject)retObjectECDiffieHellmanP384;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectECDiffieHellmanP384 != null ? retObjectECDiffieHellmanP384.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getECDiffieHellmanP521() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectECDiffieHellmanP521 = null;
        try {
            retObjectECDiffieHellmanP521 = classType.Get("ECDiffieHellmanP521");
            JCObject val = (JCObject)retObjectECDiffieHellmanP521;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectECDiffieHellmanP521 != null ? retObjectECDiffieHellmanP521.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getECDsa() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectECDsa = null;
        try {
            retObjectECDsa = classType.Get("ECDsa");
            JCObject val = (JCObject)retObjectECDsa;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectECDsa != null ? retObjectECDsa.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getECDsaP256() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectECDsaP256 = null;
        try {
            retObjectECDsaP256 = classType.Get("ECDsaP256");
            JCObject val = (JCObject)retObjectECDsaP256;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectECDsaP256 != null ? retObjectECDsaP256.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getECDsaP384() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectECDsaP384 = null;
        try {
            retObjectECDsaP384 = classType.Get("ECDsaP384");
            JCObject val = (JCObject)retObjectECDsaP384;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectECDsaP384 != null ? retObjectECDsaP384.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getECDsaP521() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectECDsaP521 = null;
        try {
            retObjectECDsaP521 = classType.Get("ECDsaP521");
            JCObject val = (JCObject)retObjectECDsaP521;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectECDsaP521 != null ? retObjectECDsaP521.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getMD5() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectMD5 = null;
        try {
            retObjectMD5 = classType.Get("MD5");
            JCObject val = (JCObject)retObjectMD5;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectMD5 != null ? retObjectMD5.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getRsa() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectRsa = null;
        try {
            retObjectRsa = classType.Get("Rsa");
            JCObject val = (JCObject)retObjectRsa;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectRsa != null ? retObjectRsa.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getSha1() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSha1 = null;
        try {
            retObjectSha1 = classType.Get("Sha1");
            JCObject val = (JCObject)retObjectSha1;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSha1 != null ? retObjectSha1.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getSha256() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSha256 = null;
        try {
            retObjectSha256 = classType.Get("Sha256");
            JCObject val = (JCObject)retObjectSha256;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSha256 != null ? retObjectSha256.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getSha384() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSha384 = null;
        try {
            retObjectSha384 = classType.Get("Sha384");
            JCObject val = (JCObject)retObjectSha384;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSha384 != null ? retObjectSha384.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public static CngAlgorithm getSha512() throws Throwable, system.ArgumentNullException, system.ArgumentException {
        if (classType == null)
            throw new java.lang.UnsupportedOperationException("classType is null.");
        java.lang.Object retObjectSha512 = null;
        try {
            retObjectSha512 = classType.Get("Sha512");
            JCObject val = (JCObject)retObjectSha512;
            return new CngAlgorithm(val);
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into JCObject", retObjectSha512 != null ? retObjectSha512.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }

    public java.lang.String getAlgorithm() throws Throwable {
        if (classInstance == null)
            throw new java.lang.UnsupportedOperationException("classInstance is null.");
        java.lang.Object retObjectAlgorithm = null;
        try {
            retObjectAlgorithm = classInstance.Get("Algorithm");
            return (java.lang.String)retObjectAlgorithm;
        } catch (java.lang.ClassCastException cce) {
            throw new java.lang.IllegalStateException(java.lang.String.format("Failed to cast %s into java.lang.String", retObjectAlgorithm != null ? retObjectAlgorithm.getClass() : "null"), cce);
        } catch (JCNativeException jcne) {
            throw translateException(jcne);
        }
    }



    // Instance Events section
    

}